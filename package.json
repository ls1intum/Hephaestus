{
  "name": "hephaestus",
  "workspaces": [
    "webapp/*"
  ],
  "scripts": {
    "generate:api:application-server:clean": "shx rm -rf webapp/src/app/core/modules/openapi",
    "generate:api:application-server:specs": "cd server/application-server && mvn verify -DskipTests=true -Dapp.profiles=specs",
    "generate:api:application-server:client": "npx openapi-generator-cli generate -i server/application-server/openapi.yaml -g typescript-angular -o webapp/src/app/core/modules/openapi --additional-properties fileNaming=kebab-case,withInterfaces=true --generate-alias-as-model",
    "generate:api:application-server:client-react": "npx openapi-generator-cli generate -i server/application-server/openapi.yaml -g typescript-fetch -o webapp-react/src/lib/api --additional-properties=fileNaming=kebab-case,withInterfaces=true,supportsES6=true,modelPropertyNaming=original,enumPropertyNaming=original,paramNaming=original,prefixParameterInterfaces=true,nullSafeAdditionalProps=true,disallowAdditionalPropertiesIfNotPresent=false,enumUnknownDefaultCase=true,useSingleRequestParameter=false,validationAttributes=true,importFileExtension=.js && node -e \"const fs = require('fs'); const path = require('path'); const apiDir = 'webapp-react/src/lib/api'; function addTsNoCheck(dir) { fs.readdirSync(dir, { withFileTypes: true }).forEach(file => { const filePath = path.join(dir, file.name); if (file.isDirectory()) { addTsNoCheck(filePath); } else if (file.name.endsWith('.ts')) { const content = fs.readFileSync(filePath, 'utf8'); fs.writeFileSync(filePath, '// @ts-nocheck\\n' + content); } }); } addTsNoCheck(apiDir);\"",
    "generate:api:application-server": "npm run generate:api:application-server:specs && npm run generate:api:application-server:clean && npm run generate:api:application-server:client && npm run generate:api:application-server:client-react",
    "generate:api:intelligence-service:clean": "shx rm -rf server/application-server/src/main/java/de/tum/in/www1/hephaestus/intelligenceservice",
    "generate:api:intelligence-service:specs": "cd server/intelligence-service && poetry run openapi",
    "generate:api:intelligence-service:client": "npx openapi-generator-cli generate -i server/intelligence-service/openapi.yaml -g java --library resttemplate --api-package de.tum.in.www1.hephaestus.intelligenceservice.api --model-package de.tum.in.www1.hephaestus.intelligenceservice.model --invoker-package de.tum.in.www1.hephaestus.intelligenceservice --additional-properties useJakartaEe=true,performBeanValidation=true,hideGenerationTimestamp=true --package-name de.tum.in.www1.hephaestus.intelligenceservice -o tmp/java-client && shx cp -r tmp/java-client/src/main/java/de/tum/in/www1/hephaestus/intelligenceservice server/application-server/src/main/java/de/tum/in/www1/hephaestus && shx rm -rf tmp",
    "generate:api:intelligence-service": "npm run generate:api:intelligence-service:clean && npm run generate:api:intelligence-service:specs && npm run generate:api:intelligence-service:client",
    "generate:api": "npm run generate:api:intelligence-service && npm run generate:api:application-server",
    "format:java:check": "prettier --check server/application-server/src/**/*.java --config-precedence prefer-file --config server/application-server/.prettierrc.yaml --ignore-path server/application-server/.prettierignore",
    "format:java:write": "prettier --write server/application-server/src/**/*.java --config-precedence prefer-file --config server/application-server/.prettierrc.yaml --ignore-path server/application-server/.prettierignore",
    "format:python:check": "cd server/intelligence-service/ && poetry run black --check .",
    "format:python:write": "cd server/intelligence-service/ && poetry run black .",
    "db:changelog:diff": "cd server/application-server && docker compose down postgres && shx --silent mv postgres-data postgres-data-temp && docker compose up -d postgres && docker compose exec postgres sh -c \"until pg_isready -h localhost -p 5432; do sleep 1; done\" && mvn liquibase:update && mvn liquibase:diff && docker compose down postgres && shx rm -rf postgres-data && shx --silent mv postgres-data-temp postgres-data"
  },
  "devDependencies": {
    "@openapitools/openapi-generator-cli": "2.16.3",
    "prettier": "3.5.1",
    "prettier-plugin-java": "2.6.7",
    "shx": "0.3.4"
  }
}
