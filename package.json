{
  "name": "hephaestus",
  "private": true,
  "workspaces": [
    "webapp",
    "server/intelligence-service-hono"
  ],
  "scripts": {
    "generate:api:application-server:clean": "shx rm -rf webapp/src/api",
    "generate:api:application-server:specs": "cd server/application-server && mvn verify -DskipTests=true -Dapp.profiles=specs",
    "generate:api:application-server:client": "npm run generate:api:application-server:clean && npm -w webapp run openapi-ts",
    "generate:api:application-server": "npm run generate:api:application-server:specs && npm run generate:api:application-server:client",
    "generate:api:intelligence-service:clean": "rm -rf server/application-server/src/main/java/de/tum/in/www1/hephaestus/intelligenceservice",
    "generate:api:intelligence-service:specs": "npm -w server/intelligence-service-hono run openapi:export",
    "generate:api:intelligence-service:client": "npx -p @openapitools/openapi-generator-cli openapi-generator-cli generate --skip-validate-spec -i server/intelligence-service-hono/openapi.yaml -g java --library webclient --api-package de.tum.in.www1.hephaestus.intelligenceservice.api --model-package de.tum.in.www1.hephaestus.intelligenceservice.model --invoker-package de.tum.in.www1.hephaestus.intelligenceservice --additional-properties useJakartaEe=true,performBeanValidation=true,hideGenerationTimestamp=true,openApiNullable=true,serializationLibrary=jackson --package-name de.tum.in.www1.hephaestus.intelligenceservice -o tmp/java-client && mkdir -p server/application-server/src/main/java/de/tum/in/www1/hephaestus && cp -R tmp/java-client/src/main/java/de/tum/in/www1/hephaestus/intelligenceservice server/application-server/src/main/java/de/tum/in/www1/hephaestus/ && rm -rf tmp",
    "generate:api:intelligence-service": "npm run generate:api:intelligence-service:clean && npm run generate:api:intelligence-service:specs && npm run generate:api:intelligence-service:client",
    "generate:api:intelligence-service-hono:specs": "npm -w server/intelligence-service-hono run openapi:export",
    "generate:api": "npm run generate:api:intelligence-service && npm run generate:api:application-server && npm run generate:api:intelligence-service-hono:specs",
    "format:java": "prettier --write server/application-server/src/**/*.java --config-precedence prefer-file --config server/application-server/.prettierrc.yaml --ignore-path server/application-server/.prettierignore",
    "lint:java": "prettier --check server/application-server/src/**/*.java --config-precedence prefer-file --config server/application-server/.prettierrc.yaml --ignore-path server/application-server/.prettierignore",
    "format:py:intelligence-service": "cd server/intelligence-service/ && poetry run black .",
    "lint:py:intelligence-service": "cd server/intelligence-service/ && poetry run flake8 .",
    "format:py:webhook-ingest": "cd server/webhook-ingest/ && poetry run black .",
    "lint:py:webhook-ingest": "cd server/webhook-ingest/ && poetry run flake8 .",
    "bootstrap:py": "bash scripts/bootstrap-dev.sh",
    "format:ts": "npm exec -w webapp biome format --write",
    "lint:ts": "npm exec -w webapp biome check",
    "typecheck:ts": "npm exec -w webapp tsc --noEmit",
    "format:server": "npm run bootstrap:py && run-s format:java format:py:intelligence-service format:py:webhook-ingest",
    "lint:server": "npm run bootstrap:py && run-s lint:java lint:py:intelligence-service lint:py:webhook-ingest",
    "format:client": "npm run format:ts",
    "lint:client": "run-s -c lint:ts typecheck:ts",
    "format:hono": "npm -w server/intelligence-service-hono run format",
    "lint:hono": "npm -w server/intelligence-service-hono run check",
    "typecheck:hono": "npm -w server/intelligence-service-hono run typecheck",
    "format": "npm run format:server && npm run format:client && npm run format:hono",
    "lint": "run-s lint:server lint:client lint:hono",
    "typecheck": "npm run typecheck:ts && npm run typecheck:hono",
    "db:draft-changelog": "scripts/db-utils.sh draft-changelog",
    "db:generate-erd-docs": "scripts/db-utils.sh generate-erd",
    "db:generate-models:intelligence-service": "scripts/db-utils.sh generate-models-intelligence-service",
    "db:generate-models:intelligence-service-hono": "npm -w server/intelligence-service-hono run db:introspect"
  },
  "devDependencies": {
    "@openapitools/openapi-generator-cli": "2.16.3",
    "npm-run-all": "^4.1.5",
    "prettier": "3.5.1",
    "prettier-plugin-java": "2.6.7",
    "shx": "0.3.4"
  }
}