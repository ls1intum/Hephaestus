/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TeamsImport } from './routes/teams'
import { Route as PrivacyImport } from './routes/privacy'
import { Route as ImprintImport } from './routes/imprint'
import { Route as AboutImport } from './routes/about'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as DemoTanstackQueryImport } from './routes/demo.tanstack-query'
import { Route as AuthenticatedWorkspaceImport } from './routes/_authenticated/workspace'
import { Route as UserUsernameIndexImport } from './routes/user/$username/index'
import { Route as UserUsernameActivityImport } from './routes/user/$username/activity'

// Create/Update Routes

const TeamsRoute = TeamsImport.update({
  id: '/teams',
  path: '/teams',
  getParentRoute: () => rootRoute,
} as any)

const PrivacyRoute = PrivacyImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => rootRoute,
} as any)

const ImprintRoute = ImprintImport.update({
  id: '/imprint',
  path: '/imprint',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DemoTanstackQueryRoute = DemoTanstackQueryImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedWorkspaceRoute = AuthenticatedWorkspaceImport.update({
  id: '/workspace',
  path: '/workspace',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const UserUsernameIndexRoute = UserUsernameIndexImport.update({
  id: '/user/$username/',
  path: '/user/$username/',
  getParentRoute: () => rootRoute,
} as any)

const UserUsernameActivityRoute = UserUsernameActivityImport.update({
  id: '/user/$username/activity',
  path: '/user/$username/activity',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/imprint': {
      id: '/imprint'
      path: '/imprint'
      fullPath: '/imprint'
      preLoaderRoute: typeof ImprintImport
      parentRoute: typeof rootRoute
    }
    '/privacy': {
      id: '/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof PrivacyImport
      parentRoute: typeof rootRoute
    }
    '/teams': {
      id: '/teams'
      path: '/teams'
      fullPath: '/teams'
      preLoaderRoute: typeof TeamsImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/workspace': {
      id: '/_authenticated/workspace'
      path: '/workspace'
      fullPath: '/workspace'
      preLoaderRoute: typeof AuthenticatedWorkspaceImport
      parentRoute: typeof AuthenticatedImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryImport
      parentRoute: typeof rootRoute
    }
    '/user/$username/activity': {
      id: '/user/$username/activity'
      path: '/user/$username/activity'
      fullPath: '/user/$username/activity'
      preLoaderRoute: typeof UserUsernameActivityImport
      parentRoute: typeof rootRoute
    }
    '/user/$username/': {
      id: '/user/$username/'
      path: '/user/$username'
      fullPath: '/user/$username'
      preLoaderRoute: typeof UserUsernameIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedWorkspaceRoute: typeof AuthenticatedWorkspaceRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedWorkspaceRoute: AuthenticatedWorkspaceRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/about': typeof AboutRoute
  '/imprint': typeof ImprintRoute
  '/privacy': typeof PrivacyRoute
  '/teams': typeof TeamsRoute
  '/workspace': typeof AuthenticatedWorkspaceRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/user/$username/activity': typeof UserUsernameActivityRoute
  '/user/$username': typeof UserUsernameIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/about': typeof AboutRoute
  '/imprint': typeof ImprintRoute
  '/privacy': typeof PrivacyRoute
  '/teams': typeof TeamsRoute
  '/workspace': typeof AuthenticatedWorkspaceRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/user/$username/activity': typeof UserUsernameActivityRoute
  '/user/$username': typeof UserUsernameIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/about': typeof AboutRoute
  '/imprint': typeof ImprintRoute
  '/privacy': typeof PrivacyRoute
  '/teams': typeof TeamsRoute
  '/_authenticated/workspace': typeof AuthenticatedWorkspaceRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/user/$username/activity': typeof UserUsernameActivityRoute
  '/user/$username/': typeof UserUsernameIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/about'
    | '/imprint'
    | '/privacy'
    | '/teams'
    | '/workspace'
    | '/demo/tanstack-query'
    | '/user/$username/activity'
    | '/user/$username'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/about'
    | '/imprint'
    | '/privacy'
    | '/teams'
    | '/workspace'
    | '/demo/tanstack-query'
    | '/user/$username/activity'
    | '/user/$username'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/about'
    | '/imprint'
    | '/privacy'
    | '/teams'
    | '/_authenticated/workspace'
    | '/demo/tanstack-query'
    | '/user/$username/activity'
    | '/user/$username/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AboutRoute: typeof AboutRoute
  ImprintRoute: typeof ImprintRoute
  PrivacyRoute: typeof PrivacyRoute
  TeamsRoute: typeof TeamsRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  UserUsernameActivityRoute: typeof UserUsernameActivityRoute
  UserUsernameIndexRoute: typeof UserUsernameIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AboutRoute: AboutRoute,
  ImprintRoute: ImprintRoute,
  PrivacyRoute: PrivacyRoute,
  TeamsRoute: TeamsRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  UserUsernameActivityRoute: UserUsernameActivityRoute,
  UserUsernameIndexRoute: UserUsernameIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/about",
        "/imprint",
        "/privacy",
        "/teams",
        "/demo/tanstack-query",
        "/user/$username/activity",
        "/user/$username/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/workspace"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/imprint": {
      "filePath": "imprint.tsx"
    },
    "/privacy": {
      "filePath": "privacy.tsx"
    },
    "/teams": {
      "filePath": "teams.tsx"
    },
    "/_authenticated/workspace": {
      "filePath": "_authenticated/workspace.tsx",
      "parent": "/_authenticated"
    },
    "/demo/tanstack-query": {
      "filePath": "demo.tanstack-query.tsx"
    },
    "/user/$username/activity": {
      "filePath": "user/$username/activity.tsx"
    },
    "/user/$username/": {
      "filePath": "user/$username/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
