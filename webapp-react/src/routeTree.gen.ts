/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PrivacyImport } from './routes/privacy'
import { Route as LandingImport } from './routes/landing'
import { Route as ImprintImport } from './routes/imprint'
import { Route as AboutImport } from './routes/about'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedTeamsImport } from './routes/_authenticated/teams'
import { Route as AuthenticatedSettingsImport } from './routes/_authenticated/settings'
import { Route as AuthenticatedBestPracticesImport } from './routes/_authenticated/best-practices'
import { Route as AuthenticatedAdminImport } from './routes/_authenticated/_admin'
import { Route as AuthenticatedMentorIndexImport } from './routes/_authenticated/mentor/index'
import { Route as AuthenticatedMentorThreadIdImport } from './routes/_authenticated/mentor/$threadId'
import { Route as AuthenticatedUserUsernameIndexImport } from './routes/_authenticated/user/$username/index'
import { Route as AuthenticatedAdminAdminIndexImport } from './routes/_authenticated/_admin/admin/index'
import { Route as AuthenticatedUserUsernameBestPracticesImport } from './routes/_authenticated/user/$username/best-practices'
import { Route as AuthenticatedAdminAdminTeamsImport } from './routes/_authenticated/_admin/admin/teams'
import { Route as AuthenticatedAdminAdminSettingsImport } from './routes/_authenticated/_admin/admin/settings'
import { Route as AuthenticatedAdminAdminMembersImport } from './routes/_authenticated/_admin/admin/members'

// Create/Update Routes

const PrivacyRoute = PrivacyImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => rootRoute,
} as any)

const LandingRoute = LandingImport.update({
  id: '/landing',
  path: '/landing',
  getParentRoute: () => rootRoute,
} as any)

const ImprintRoute = ImprintImport.update({
  id: '/imprint',
  path: '/imprint',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedTeamsRoute = AuthenticatedTeamsImport.update({
  id: '/teams',
  path: '/teams',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedSettingsRoute = AuthenticatedSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedBestPracticesRoute = AuthenticatedBestPracticesImport.update(
  {
    id: '/best-practices',
    path: '/best-practices',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
)

const AuthenticatedAdminRoute = AuthenticatedAdminImport.update({
  id: '/_admin',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedMentorIndexRoute = AuthenticatedMentorIndexImport.update({
  id: '/mentor/',
  path: '/mentor/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedMentorThreadIdRoute =
  AuthenticatedMentorThreadIdImport.update({
    id: '/mentor/$threadId',
    path: '/mentor/$threadId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedUserUsernameIndexRoute =
  AuthenticatedUserUsernameIndexImport.update({
    id: '/user/$username/',
    path: '/user/$username/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAdminAdminIndexRoute =
  AuthenticatedAdminAdminIndexImport.update({
    id: '/admin/',
    path: '/admin/',
    getParentRoute: () => AuthenticatedAdminRoute,
  } as any)

const AuthenticatedUserUsernameBestPracticesRoute =
  AuthenticatedUserUsernameBestPracticesImport.update({
    id: '/user/$username/best-practices',
    path: '/user/$username/best-practices',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAdminAdminTeamsRoute =
  AuthenticatedAdminAdminTeamsImport.update({
    id: '/admin/teams',
    path: '/admin/teams',
    getParentRoute: () => AuthenticatedAdminRoute,
  } as any)

const AuthenticatedAdminAdminSettingsRoute =
  AuthenticatedAdminAdminSettingsImport.update({
    id: '/admin/settings',
    path: '/admin/settings',
    getParentRoute: () => AuthenticatedAdminRoute,
  } as any)

const AuthenticatedAdminAdminMembersRoute =
  AuthenticatedAdminAdminMembersImport.update({
    id: '/admin/members',
    path: '/admin/members',
    getParentRoute: () => AuthenticatedAdminRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/imprint': {
      id: '/imprint'
      path: '/imprint'
      fullPath: '/imprint'
      preLoaderRoute: typeof ImprintImport
      parentRoute: typeof rootRoute
    }
    '/landing': {
      id: '/landing'
      path: '/landing'
      fullPath: '/landing'
      preLoaderRoute: typeof LandingImport
      parentRoute: typeof rootRoute
    }
    '/privacy': {
      id: '/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof PrivacyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/_admin': {
      id: '/_authenticated/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedAdminImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/best-practices': {
      id: '/_authenticated/best-practices'
      path: '/best-practices'
      fullPath: '/best-practices'
      preLoaderRoute: typeof AuthenticatedBestPracticesImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/teams': {
      id: '/_authenticated/teams'
      path: '/teams'
      fullPath: '/teams'
      preLoaderRoute: typeof AuthenticatedTeamsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/mentor/$threadId': {
      id: '/_authenticated/mentor/$threadId'
      path: '/mentor/$threadId'
      fullPath: '/mentor/$threadId'
      preLoaderRoute: typeof AuthenticatedMentorThreadIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/mentor/': {
      id: '/_authenticated/mentor/'
      path: '/mentor'
      fullPath: '/mentor'
      preLoaderRoute: typeof AuthenticatedMentorIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/_admin/admin/members': {
      id: '/_authenticated/_admin/admin/members'
      path: '/admin/members'
      fullPath: '/admin/members'
      preLoaderRoute: typeof AuthenticatedAdminAdminMembersImport
      parentRoute: typeof AuthenticatedAdminImport
    }
    '/_authenticated/_admin/admin/settings': {
      id: '/_authenticated/_admin/admin/settings'
      path: '/admin/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AuthenticatedAdminAdminSettingsImport
      parentRoute: typeof AuthenticatedAdminImport
    }
    '/_authenticated/_admin/admin/teams': {
      id: '/_authenticated/_admin/admin/teams'
      path: '/admin/teams'
      fullPath: '/admin/teams'
      preLoaderRoute: typeof AuthenticatedAdminAdminTeamsImport
      parentRoute: typeof AuthenticatedAdminImport
    }
    '/_authenticated/user/$username/best-practices': {
      id: '/_authenticated/user/$username/best-practices'
      path: '/user/$username/best-practices'
      fullPath: '/user/$username/best-practices'
      preLoaderRoute: typeof AuthenticatedUserUsernameBestPracticesImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/_admin/admin/': {
      id: '/_authenticated/_admin/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthenticatedAdminAdminIndexImport
      parentRoute: typeof AuthenticatedAdminImport
    }
    '/_authenticated/user/$username/': {
      id: '/_authenticated/user/$username/'
      path: '/user/$username'
      fullPath: '/user/$username'
      preLoaderRoute: typeof AuthenticatedUserUsernameIndexImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedAdminRouteChildren {
  AuthenticatedAdminAdminMembersRoute: typeof AuthenticatedAdminAdminMembersRoute
  AuthenticatedAdminAdminSettingsRoute: typeof AuthenticatedAdminAdminSettingsRoute
  AuthenticatedAdminAdminTeamsRoute: typeof AuthenticatedAdminAdminTeamsRoute
  AuthenticatedAdminAdminIndexRoute: typeof AuthenticatedAdminAdminIndexRoute
}

const AuthenticatedAdminRouteChildren: AuthenticatedAdminRouteChildren = {
  AuthenticatedAdminAdminMembersRoute: AuthenticatedAdminAdminMembersRoute,
  AuthenticatedAdminAdminSettingsRoute: AuthenticatedAdminAdminSettingsRoute,
  AuthenticatedAdminAdminTeamsRoute: AuthenticatedAdminAdminTeamsRoute,
  AuthenticatedAdminAdminIndexRoute: AuthenticatedAdminAdminIndexRoute,
}

const AuthenticatedAdminRouteWithChildren =
  AuthenticatedAdminRoute._addFileChildren(AuthenticatedAdminRouteChildren)

interface AuthenticatedRouteChildren {
  AuthenticatedAdminRoute: typeof AuthenticatedAdminRouteWithChildren
  AuthenticatedBestPracticesRoute: typeof AuthenticatedBestPracticesRoute
  AuthenticatedSettingsRoute: typeof AuthenticatedSettingsRoute
  AuthenticatedTeamsRoute: typeof AuthenticatedTeamsRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedMentorThreadIdRoute: typeof AuthenticatedMentorThreadIdRoute
  AuthenticatedMentorIndexRoute: typeof AuthenticatedMentorIndexRoute
  AuthenticatedUserUsernameBestPracticesRoute: typeof AuthenticatedUserUsernameBestPracticesRoute
  AuthenticatedUserUsernameIndexRoute: typeof AuthenticatedUserUsernameIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAdminRoute: AuthenticatedAdminRouteWithChildren,
  AuthenticatedBestPracticesRoute: AuthenticatedBestPracticesRoute,
  AuthenticatedSettingsRoute: AuthenticatedSettingsRoute,
  AuthenticatedTeamsRoute: AuthenticatedTeamsRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedMentorThreadIdRoute: AuthenticatedMentorThreadIdRoute,
  AuthenticatedMentorIndexRoute: AuthenticatedMentorIndexRoute,
  AuthenticatedUserUsernameBestPracticesRoute:
    AuthenticatedUserUsernameBestPracticesRoute,
  AuthenticatedUserUsernameIndexRoute: AuthenticatedUserUsernameIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedAdminRouteWithChildren
  '/about': typeof AboutRoute
  '/imprint': typeof ImprintRoute
  '/landing': typeof LandingRoute
  '/privacy': typeof PrivacyRoute
  '/best-practices': typeof AuthenticatedBestPracticesRoute
  '/settings': typeof AuthenticatedSettingsRoute
  '/teams': typeof AuthenticatedTeamsRoute
  '/': typeof AuthenticatedIndexRoute
  '/mentor/$threadId': typeof AuthenticatedMentorThreadIdRoute
  '/mentor': typeof AuthenticatedMentorIndexRoute
  '/admin/members': typeof AuthenticatedAdminAdminMembersRoute
  '/admin/settings': typeof AuthenticatedAdminAdminSettingsRoute
  '/admin/teams': typeof AuthenticatedAdminAdminTeamsRoute
  '/user/$username/best-practices': typeof AuthenticatedUserUsernameBestPracticesRoute
  '/admin': typeof AuthenticatedAdminAdminIndexRoute
  '/user/$username': typeof AuthenticatedUserUsernameIndexRoute
}

export interface FileRoutesByTo {
  '/about': typeof AboutRoute
  '/imprint': typeof ImprintRoute
  '/landing': typeof LandingRoute
  '/privacy': typeof PrivacyRoute
  '': typeof AuthenticatedAdminRouteWithChildren
  '/best-practices': typeof AuthenticatedBestPracticesRoute
  '/settings': typeof AuthenticatedSettingsRoute
  '/teams': typeof AuthenticatedTeamsRoute
  '/': typeof AuthenticatedIndexRoute
  '/mentor/$threadId': typeof AuthenticatedMentorThreadIdRoute
  '/mentor': typeof AuthenticatedMentorIndexRoute
  '/admin/members': typeof AuthenticatedAdminAdminMembersRoute
  '/admin/settings': typeof AuthenticatedAdminAdminSettingsRoute
  '/admin/teams': typeof AuthenticatedAdminAdminTeamsRoute
  '/user/$username/best-practices': typeof AuthenticatedUserUsernameBestPracticesRoute
  '/admin': typeof AuthenticatedAdminAdminIndexRoute
  '/user/$username': typeof AuthenticatedUserUsernameIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/about': typeof AboutRoute
  '/imprint': typeof ImprintRoute
  '/landing': typeof LandingRoute
  '/privacy': typeof PrivacyRoute
  '/_authenticated/_admin': typeof AuthenticatedAdminRouteWithChildren
  '/_authenticated/best-practices': typeof AuthenticatedBestPracticesRoute
  '/_authenticated/settings': typeof AuthenticatedSettingsRoute
  '/_authenticated/teams': typeof AuthenticatedTeamsRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/mentor/$threadId': typeof AuthenticatedMentorThreadIdRoute
  '/_authenticated/mentor/': typeof AuthenticatedMentorIndexRoute
  '/_authenticated/_admin/admin/members': typeof AuthenticatedAdminAdminMembersRoute
  '/_authenticated/_admin/admin/settings': typeof AuthenticatedAdminAdminSettingsRoute
  '/_authenticated/_admin/admin/teams': typeof AuthenticatedAdminAdminTeamsRoute
  '/_authenticated/user/$username/best-practices': typeof AuthenticatedUserUsernameBestPracticesRoute
  '/_authenticated/_admin/admin/': typeof AuthenticatedAdminAdminIndexRoute
  '/_authenticated/user/$username/': typeof AuthenticatedUserUsernameIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/about'
    | '/imprint'
    | '/landing'
    | '/privacy'
    | '/best-practices'
    | '/settings'
    | '/teams'
    | '/'
    | '/mentor/$threadId'
    | '/mentor'
    | '/admin/members'
    | '/admin/settings'
    | '/admin/teams'
    | '/user/$username/best-practices'
    | '/admin'
    | '/user/$username'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/about'
    | '/imprint'
    | '/landing'
    | '/privacy'
    | ''
    | '/best-practices'
    | '/settings'
    | '/teams'
    | '/'
    | '/mentor/$threadId'
    | '/mentor'
    | '/admin/members'
    | '/admin/settings'
    | '/admin/teams'
    | '/user/$username/best-practices'
    | '/admin'
    | '/user/$username'
  id:
    | '__root__'
    | '/_authenticated'
    | '/about'
    | '/imprint'
    | '/landing'
    | '/privacy'
    | '/_authenticated/_admin'
    | '/_authenticated/best-practices'
    | '/_authenticated/settings'
    | '/_authenticated/teams'
    | '/_authenticated/'
    | '/_authenticated/mentor/$threadId'
    | '/_authenticated/mentor/'
    | '/_authenticated/_admin/admin/members'
    | '/_authenticated/_admin/admin/settings'
    | '/_authenticated/_admin/admin/teams'
    | '/_authenticated/user/$username/best-practices'
    | '/_authenticated/_admin/admin/'
    | '/_authenticated/user/$username/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AboutRoute: typeof AboutRoute
  ImprintRoute: typeof ImprintRoute
  LandingRoute: typeof LandingRoute
  PrivacyRoute: typeof PrivacyRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AboutRoute: AboutRoute,
  ImprintRoute: ImprintRoute,
  LandingRoute: LandingRoute,
  PrivacyRoute: PrivacyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/about",
        "/imprint",
        "/landing",
        "/privacy"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/_admin",
        "/_authenticated/best-practices",
        "/_authenticated/settings",
        "/_authenticated/teams",
        "/_authenticated/",
        "/_authenticated/mentor/$threadId",
        "/_authenticated/mentor/",
        "/_authenticated/user/$username/best-practices",
        "/_authenticated/user/$username/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/imprint": {
      "filePath": "imprint.tsx"
    },
    "/landing": {
      "filePath": "landing.tsx"
    },
    "/privacy": {
      "filePath": "privacy.tsx"
    },
    "/_authenticated/_admin": {
      "filePath": "_authenticated/_admin.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/_admin/admin/members",
        "/_authenticated/_admin/admin/settings",
        "/_authenticated/_admin/admin/teams",
        "/_authenticated/_admin/admin/"
      ]
    },
    "/_authenticated/best-practices": {
      "filePath": "_authenticated/best-practices.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings": {
      "filePath": "_authenticated/settings.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/teams": {
      "filePath": "_authenticated/teams.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/mentor/$threadId": {
      "filePath": "_authenticated/mentor/$threadId.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/mentor/": {
      "filePath": "_authenticated/mentor/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/_admin/admin/members": {
      "filePath": "_authenticated/_admin/admin/members.tsx",
      "parent": "/_authenticated/_admin"
    },
    "/_authenticated/_admin/admin/settings": {
      "filePath": "_authenticated/_admin/admin/settings.tsx",
      "parent": "/_authenticated/_admin"
    },
    "/_authenticated/_admin/admin/teams": {
      "filePath": "_authenticated/_admin/admin/teams.tsx",
      "parent": "/_authenticated/_admin"
    },
    "/_authenticated/user/$username/best-practices": {
      "filePath": "_authenticated/user/$username/best-practices.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/_admin/admin/": {
      "filePath": "_authenticated/_admin/admin/index.tsx",
      "parent": "/_authenticated/_admin"
    },
    "/_authenticated/user/$username/": {
      "filePath": "_authenticated/user/$username/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
