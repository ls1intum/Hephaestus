// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Hephaestus API
 * API documentation for the Hephaestus application server.
 *
 * The version of the OpenAPI document: 0.6.1
 * Contact: felixtj.dietrich@tum.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface PullRequestBadPractice
 */
export interface PullRequestBadPractice {
    /**
     * 
     * @type {number}
     * @memberof PullRequestBadPractice
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequestBadPractice
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestBadPractice
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestBadPractice
     */
    state: PullRequestBadPracticeStateEnum;
}


/**
 * @export
 */
export const PullRequestBadPracticeStateEnum = {
    GOOD_PRACTICE: 'GOOD_PRACTICE',
    FIXED: 'FIXED',
    CRITICAL_ISSUE: 'CRITICAL_ISSUE',
    NORMAL_ISSUE: 'NORMAL_ISSUE',
    MINOR_ISSUE: 'MINOR_ISSUE',
    WONT_FIX: 'WONT_FIX',
    WRONG: 'WRONG',
    unknown_default_open_api: '11184809'
} as const;
export type PullRequestBadPracticeStateEnum = typeof PullRequestBadPracticeStateEnum[keyof typeof PullRequestBadPracticeStateEnum];


/**
 * Check if a given object implements the PullRequestBadPractice interface.
 */
export function instanceOfPullRequestBadPractice(value: object): value is PullRequestBadPractice {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('state' in value) || value['state'] === undefined) return false;
    return true;
}

export function PullRequestBadPracticeFromJSON(json: any): PullRequestBadPractice {
    return PullRequestBadPracticeFromJSONTyped(json, false);
}

export function PullRequestBadPracticeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PullRequestBadPractice {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'description': json['description'],
        'state': json['state'],
    };
}

export function PullRequestBadPracticeToJSON(value?: PullRequestBadPractice | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'title': value['title'],
        'description': value['description'],
        'state': value['state'],
    };
}

