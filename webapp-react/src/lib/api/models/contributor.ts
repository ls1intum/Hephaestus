/* tslint:disable */
/* eslint-disable */
/**
 * Hephaestus API
 * API documentation for the Hephaestus application server.
 *
 * The version of the OpenAPI document: 0.6.1
 * Contact: felixtj.dietrich@tum.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface Contributor
 */
export interface Contributor {
    /**
     * 
     * @type {number}
     * @memberof Contributor
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Contributor
     */
    login: string;
    /**
     * 
     * @type {string}
     * @memberof Contributor
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Contributor
     */
    avatarUrl: string;
    /**
     * 
     * @type {string}
     * @memberof Contributor
     */
    htmlUrl: string;
    /**
     * 
     * @type {number}
     * @memberof Contributor
     */
    contributions?: number;
}

/**
 * Check if a given object implements the Contributor interface.
 */
export function instanceOfContributor(value: object): value is Contributor {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('login' in value) || value['login'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('avatarUrl' in value) || value['avatarUrl'] === undefined) return false;
    if (!('htmlUrl' in value) || value['htmlUrl'] === undefined) return false;
    return true;
}

export function ContributorFromJSON(json: any): Contributor {
    return ContributorFromJSONTyped(json, false);
}

export function ContributorFromJSONTyped(json: any, ignoreDiscriminator: boolean): Contributor {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'login': json['login'],
        'name': json['name'],
        'avatarUrl': json['avatarUrl'],
        'htmlUrl': json['htmlUrl'],
        'contributions': json['contributions'] == null ? undefined : json['contributions'],
    };
}

export function ContributorToJSON(value?: Contributor | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'login': value['login'],
        'name': value['name'],
        'avatarUrl': value['avatarUrl'],
        'htmlUrl': value['htmlUrl'],
        'contributions': value['contributions'],
    };
}

