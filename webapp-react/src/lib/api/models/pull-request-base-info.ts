/* tslint:disable */
/* eslint-disable */
/**
 * Hephaestus API
 * API documentation for the Hephaestus application server.
 *
 * The version of the OpenAPI document: 0.6.1
 * Contact: felixtj.dietrich@tum.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { RepositoryInfo } from './repository-info.js';
import {
    RepositoryInfoFromJSON,
    RepositoryInfoFromJSONTyped,
    RepositoryInfoToJSON,
} from './repository-info.js';

/**
 * 
 * @export
 * @interface PullRequestBaseInfo
 */
export interface PullRequestBaseInfo {
    /**
     * 
     * @type {number}
     * @memberof PullRequestBaseInfo
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof PullRequestBaseInfo
     */
    number: number;
    /**
     * 
     * @type {string}
     * @memberof PullRequestBaseInfo
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof PullRequestBaseInfo
     */
    state: PullRequestBaseInfoStateEnum;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequestBaseInfo
     */
    isDraft: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PullRequestBaseInfo
     */
    isMerged: boolean;
    /**
     * 
     * @type {RepositoryInfo}
     * @memberof PullRequestBaseInfo
     */
    repository?: RepositoryInfo;
    /**
     * 
     * @type {string}
     * @memberof PullRequestBaseInfo
     */
    htmlUrl: string;
}


/**
 * @export
 */
export const PullRequestBaseInfoStateEnum = {
    OPEN: 'OPEN',
    CLOSED: 'CLOSED',
    unknown_default_open_api: '11184809'
} as const;
export type PullRequestBaseInfoStateEnum = typeof PullRequestBaseInfoStateEnum[keyof typeof PullRequestBaseInfoStateEnum];


/**
 * Check if a given object implements the PullRequestBaseInfo interface.
 */
export function instanceOfPullRequestBaseInfo(value: object): value is PullRequestBaseInfo {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('number' in value) || value['number'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('state' in value) || value['state'] === undefined) return false;
    if (!('isDraft' in value) || value['isDraft'] === undefined) return false;
    if (!('isMerged' in value) || value['isMerged'] === undefined) return false;
    if (!('htmlUrl' in value) || value['htmlUrl'] === undefined) return false;
    return true;
}

export function PullRequestBaseInfoFromJSON(json: any): PullRequestBaseInfo {
    return PullRequestBaseInfoFromJSONTyped(json, false);
}

export function PullRequestBaseInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PullRequestBaseInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'number': json['number'],
        'title': json['title'],
        'state': json['state'],
        'isDraft': json['isDraft'],
        'isMerged': json['isMerged'],
        'repository': json['repository'] == null ? undefined : RepositoryInfoFromJSON(json['repository']),
        'htmlUrl': json['htmlUrl'],
    };
}

export function PullRequestBaseInfoToJSON(value?: PullRequestBaseInfo | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'number': value['number'],
        'title': value['title'],
        'state': value['state'],
        'isDraft': value['isDraft'],
        'isMerged': value['isMerged'],
        'repository': RepositoryInfoToJSON(value['repository']),
        'htmlUrl': value['htmlUrl'],
    };
}

