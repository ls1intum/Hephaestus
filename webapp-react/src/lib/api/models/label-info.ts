/* tslint:disable */
/* eslint-disable */
/**
 * Hephaestus API
 * API documentation for the Hephaestus application server.
 *
 * The version of the OpenAPI document: 0.6.1
 * Contact: felixtj.dietrich@tum.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { RepositoryInfo } from './repository-info.js';
import {
    RepositoryInfoFromJSON,
    RepositoryInfoFromJSONTyped,
    RepositoryInfoToJSON,
} from './repository-info.js';

/**
 * 
 * @export
 * @interface LabelInfo
 */
export interface LabelInfo {
    /**
     * 
     * @type {number}
     * @memberof LabelInfo
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof LabelInfo
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof LabelInfo
     */
    color: string;
    /**
     * 
     * @type {RepositoryInfo}
     * @memberof LabelInfo
     */
    repository?: RepositoryInfo;
}

/**
 * Check if a given object implements the LabelInfo interface.
 */
export function instanceOfLabelInfo(value: object): value is LabelInfo {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('color' in value) || value['color'] === undefined) return false;
    return true;
}

export function LabelInfoFromJSON(json: any): LabelInfo {
    return LabelInfoFromJSONTyped(json, false);
}

export function LabelInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): LabelInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'color': json['color'],
        'repository': json['repository'] == null ? undefined : RepositoryInfoFromJSON(json['repository']),
    };
}

export function LabelInfoToJSON(value?: LabelInfo | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'color': value['color'],
        'repository': RepositoryInfoToJSON(value['repository']),
    };
}

