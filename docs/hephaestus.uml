@startuml
|Novice Developer|
start

:Ideate and Plan;
:Create Issue;

|Hephaestus|
:Review Issue;
while (Is the issue well-defined?) is (no)
  :Provide Feedback on Issue;
  |Novice Developer|
  :Revise Issue;
endwhile (yes)
|Hephaestus|
:Approve Issue;

|Novice Developer|
:Start Working on Issue;
:Create Branch;

|Hephaestus|
:Monitor Development;
:Pair Programming Session;
fork
  |Novice Developer|
  :Implement Feature;
  :Write Unit Tests;
  :Commit Changes;
  :Push Branch;
fork again
  |Hephaestus|
  :Provide Proactive Feedback;
  :Guidance on Best Practices;
end fork

|CI/CD Pipeline|
:Run Automated Tests;
if (Tests Pass?) then (no)
  repeat
    |Hephaestus|
    :Review Failed Tests;
    :Provide Feedback on Code;
    |Novice Developer|
    :Fix Issues;
    :Push Branch;
    |CI/CD Pipeline|
    :Run Automated Tests;
  repeat while (Tests Pass?) is (no)
else (yes)
endif

|Hephaestus|
:Review Code;
if (Is the code up to standards?) then (yes)
  :Approve Pull Request;
else (no)
  :Provide Feedback on Code;
endif

|Novice Developer|
:Merge Pull Request;


|CI/CD Pipeline|
:Deploy to Staging;

|Novice Developer|
:Perform User Acceptance Testing;

|Hephaestus|
:Monitor UAT Feedback;
if (Feedback is Positive?) then (yes)
  :Deploy to Production;
else (no)
  :Provide Feedback on UAT;
  |Novice Developer|
  :Revise Code;
  |CI/CD Pipeline|
  :Deploy to Staging;
endif

|Novice Developer|
:Monitor Production;
:Gather Metrics;

|Hephaestus|
:Review Metrics;
:Provide Continuous Feedback;

|Novice Developer|
:Continuous Improvement;

stop
@enduml
