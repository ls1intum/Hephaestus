/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as PrivacyRouteImport } from './routes/privacy'
import { Route as LandingRouteImport } from './routes/landing'
import { Route as ImprintRouteImport } from './routes/imprint'
import { Route as AboutRouteImport } from './routes/about'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as AuthenticatedTeamsRouteImport } from './routes/_authenticated/teams'
import { Route as AuthenticatedSettingsRouteImport } from './routes/_authenticated/settings'
import { Route as AuthenticatedBestPracticesRouteImport } from './routes/_authenticated/best-practices'
import { Route as AuthenticatedAdminRouteImport } from './routes/_authenticated/_admin'
import { Route as AuthenticatedMentorIndexRouteImport } from './routes/_authenticated/mentor/index'
import { Route as AuthenticatedMentorMentor_accessRouteImport } from './routes/_authenticated/mentor/_mentor_access'
import { Route as AuthenticatedMentorThreadIdRouteImport } from './routes/_authenticated/mentor/$threadId'
import { Route as AuthenticatedUserUsernameIndexRouteImport } from './routes/_authenticated/user/$username/index'
import { Route as AuthenticatedAdminAdminIndexRouteImport } from './routes/_authenticated/_admin/admin/index'
import { Route as AuthenticatedUserUsernameBestPracticesRouteImport } from './routes/_authenticated/user/$username/best-practices'
import { Route as AuthenticatedAdminAdminTeamsRouteImport } from './routes/_authenticated/_admin/admin/teams'
import { Route as AuthenticatedAdminAdminSettingsRouteImport } from './routes/_authenticated/_admin/admin/settings'
import { Route as AuthenticatedAdminAdminMembersRouteImport } from './routes/_authenticated/_admin/admin/members'

const AuthenticatedMentorRouteImport = createFileRoute(
  '/_authenticated/mentor',
)()

const PrivacyRoute = PrivacyRouteImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => rootRouteImport,
} as any)
const LandingRoute = LandingRouteImport.update({
  id: '/landing',
  path: '/landing',
  getParentRoute: () => rootRouteImport,
} as any)
const ImprintRoute = ImprintRouteImport.update({
  id: '/imprint',
  path: '/imprint',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedMentorRoute = AuthenticatedMentorRouteImport.update({
  id: '/mentor',
  path: '/mentor',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedTeamsRoute = AuthenticatedTeamsRouteImport.update({
  id: '/teams',
  path: '/teams',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedSettingsRoute = AuthenticatedSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedBestPracticesRoute =
  AuthenticatedBestPracticesRouteImport.update({
    id: '/best-practices',
    path: '/best-practices',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedAdminRoute = AuthenticatedAdminRouteImport.update({
  id: '/_admin',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedMentorIndexRoute =
  AuthenticatedMentorIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedMentorRoute,
  } as any)
const AuthenticatedMentorMentor_accessRoute =
  AuthenticatedMentorMentor_accessRouteImport.update({
    id: '/_mentor_access',
    getParentRoute: () => AuthenticatedMentorRoute,
  } as any)
const AuthenticatedMentorThreadIdRoute =
  AuthenticatedMentorThreadIdRouteImport.update({
    id: '/mentor/$threadId',
    path: '/mentor/$threadId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedUserUsernameIndexRoute =
  AuthenticatedUserUsernameIndexRouteImport.update({
    id: '/user/$username/',
    path: '/user/$username/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedAdminAdminIndexRoute =
  AuthenticatedAdminAdminIndexRouteImport.update({
    id: '/admin/',
    path: '/admin/',
    getParentRoute: () => AuthenticatedAdminRoute,
  } as any)
const AuthenticatedUserUsernameBestPracticesRoute =
  AuthenticatedUserUsernameBestPracticesRouteImport.update({
    id: '/user/$username/best-practices',
    path: '/user/$username/best-practices',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedAdminAdminTeamsRoute =
  AuthenticatedAdminAdminTeamsRouteImport.update({
    id: '/admin/teams',
    path: '/admin/teams',
    getParentRoute: () => AuthenticatedAdminRoute,
  } as any)
const AuthenticatedAdminAdminSettingsRoute =
  AuthenticatedAdminAdminSettingsRouteImport.update({
    id: '/admin/settings',
    path: '/admin/settings',
    getParentRoute: () => AuthenticatedAdminRoute,
  } as any)
const AuthenticatedAdminAdminMembersRoute =
  AuthenticatedAdminAdminMembersRouteImport.update({
    id: '/admin/members',
    path: '/admin/members',
    getParentRoute: () => AuthenticatedAdminRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/about': typeof AboutRoute
  '/imprint': typeof ImprintRoute
  '/landing': typeof LandingRoute
  '/privacy': typeof PrivacyRoute
  '/best-practices': typeof AuthenticatedBestPracticesRoute
  '/settings': typeof AuthenticatedSettingsRoute
  '/teams': typeof AuthenticatedTeamsRoute
  '/': typeof AuthenticatedIndexRoute
  '/mentor/$threadId': typeof AuthenticatedMentorThreadIdRoute
  '/mentor': typeof AuthenticatedMentorMentor_accessRoute
  '/mentor/': typeof AuthenticatedMentorIndexRoute
  '/admin/members': typeof AuthenticatedAdminAdminMembersRoute
  '/admin/settings': typeof AuthenticatedAdminAdminSettingsRoute
  '/admin/teams': typeof AuthenticatedAdminAdminTeamsRoute
  '/user/$username/best-practices': typeof AuthenticatedUserUsernameBestPracticesRoute
  '/admin': typeof AuthenticatedAdminAdminIndexRoute
  '/user/$username': typeof AuthenticatedUserUsernameIndexRoute
}
export interface FileRoutesByTo {
  '/about': typeof AboutRoute
  '/imprint': typeof ImprintRoute
  '/landing': typeof LandingRoute
  '/privacy': typeof PrivacyRoute
  '/best-practices': typeof AuthenticatedBestPracticesRoute
  '/settings': typeof AuthenticatedSettingsRoute
  '/teams': typeof AuthenticatedTeamsRoute
  '/': typeof AuthenticatedIndexRoute
  '/mentor/$threadId': typeof AuthenticatedMentorThreadIdRoute
  '/mentor': typeof AuthenticatedMentorIndexRoute
  '/admin/members': typeof AuthenticatedAdminAdminMembersRoute
  '/admin/settings': typeof AuthenticatedAdminAdminSettingsRoute
  '/admin/teams': typeof AuthenticatedAdminAdminTeamsRoute
  '/user/$username/best-practices': typeof AuthenticatedUserUsernameBestPracticesRoute
  '/admin': typeof AuthenticatedAdminAdminIndexRoute
  '/user/$username': typeof AuthenticatedUserUsernameIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/about': typeof AboutRoute
  '/imprint': typeof ImprintRoute
  '/landing': typeof LandingRoute
  '/privacy': typeof PrivacyRoute
  '/_authenticated/_admin': typeof AuthenticatedAdminRouteWithChildren
  '/_authenticated/best-practices': typeof AuthenticatedBestPracticesRoute
  '/_authenticated/settings': typeof AuthenticatedSettingsRoute
  '/_authenticated/teams': typeof AuthenticatedTeamsRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/mentor/$threadId': typeof AuthenticatedMentorThreadIdRoute
  '/_authenticated/mentor': typeof AuthenticatedMentorRouteWithChildren
  '/_authenticated/mentor/_mentor_access': typeof AuthenticatedMentorMentor_accessRoute
  '/_authenticated/mentor/': typeof AuthenticatedMentorIndexRoute
  '/_authenticated/_admin/admin/members': typeof AuthenticatedAdminAdminMembersRoute
  '/_authenticated/_admin/admin/settings': typeof AuthenticatedAdminAdminSettingsRoute
  '/_authenticated/_admin/admin/teams': typeof AuthenticatedAdminAdminTeamsRoute
  '/_authenticated/user/$username/best-practices': typeof AuthenticatedUserUsernameBestPracticesRoute
  '/_authenticated/_admin/admin/': typeof AuthenticatedAdminAdminIndexRoute
  '/_authenticated/user/$username/': typeof AuthenticatedUserUsernameIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/about'
    | '/imprint'
    | '/landing'
    | '/privacy'
    | '/best-practices'
    | '/settings'
    | '/teams'
    | '/'
    | '/mentor/$threadId'
    | '/mentor'
    | '/mentor/'
    | '/admin/members'
    | '/admin/settings'
    | '/admin/teams'
    | '/user/$username/best-practices'
    | '/admin'
    | '/user/$username'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/about'
    | '/imprint'
    | '/landing'
    | '/privacy'
    | '/best-practices'
    | '/settings'
    | '/teams'
    | '/'
    | '/mentor/$threadId'
    | '/mentor'
    | '/admin/members'
    | '/admin/settings'
    | '/admin/teams'
    | '/user/$username/best-practices'
    | '/admin'
    | '/user/$username'
  id:
    | '__root__'
    | '/_authenticated'
    | '/about'
    | '/imprint'
    | '/landing'
    | '/privacy'
    | '/_authenticated/_admin'
    | '/_authenticated/best-practices'
    | '/_authenticated/settings'
    | '/_authenticated/teams'
    | '/_authenticated/'
    | '/_authenticated/mentor/$threadId'
    | '/_authenticated/mentor'
    | '/_authenticated/mentor/_mentor_access'
    | '/_authenticated/mentor/'
    | '/_authenticated/_admin/admin/members'
    | '/_authenticated/_admin/admin/settings'
    | '/_authenticated/_admin/admin/teams'
    | '/_authenticated/user/$username/best-practices'
    | '/_authenticated/_admin/admin/'
    | '/_authenticated/user/$username/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AboutRoute: typeof AboutRoute
  ImprintRoute: typeof ImprintRoute
  LandingRoute: typeof LandingRoute
  PrivacyRoute: typeof PrivacyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/privacy': {
      id: '/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof PrivacyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/landing': {
      id: '/landing'
      path: '/landing'
      fullPath: '/landing'
      preLoaderRoute: typeof LandingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/imprint': {
      id: '/imprint'
      path: '/imprint'
      fullPath: '/imprint'
      preLoaderRoute: typeof ImprintRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/mentor': {
      id: '/_authenticated/mentor'
      path: '/mentor'
      fullPath: '/mentor'
      preLoaderRoute: typeof AuthenticatedMentorRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/teams': {
      id: '/_authenticated/teams'
      path: '/teams'
      fullPath: '/teams'
      preLoaderRoute: typeof AuthenticatedTeamsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/best-practices': {
      id: '/_authenticated/best-practices'
      path: '/best-practices'
      fullPath: '/best-practices'
      preLoaderRoute: typeof AuthenticatedBestPracticesRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/_admin': {
      id: '/_authenticated/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedAdminRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/mentor/': {
      id: '/_authenticated/mentor/'
      path: '/'
      fullPath: '/mentor/'
      preLoaderRoute: typeof AuthenticatedMentorIndexRouteImport
      parentRoute: typeof AuthenticatedMentorRoute
    }
    '/_authenticated/mentor/_mentor_access': {
      id: '/_authenticated/mentor/_mentor_access'
      path: '/mentor'
      fullPath: '/mentor'
      preLoaderRoute: typeof AuthenticatedMentorMentor_accessRouteImport
      parentRoute: typeof AuthenticatedMentorRoute
    }
    '/_authenticated/mentor/$threadId': {
      id: '/_authenticated/mentor/$threadId'
      path: '/mentor/$threadId'
      fullPath: '/mentor/$threadId'
      preLoaderRoute: typeof AuthenticatedMentorThreadIdRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/user/$username/': {
      id: '/_authenticated/user/$username/'
      path: '/user/$username'
      fullPath: '/user/$username'
      preLoaderRoute: typeof AuthenticatedUserUsernameIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/_admin/admin/': {
      id: '/_authenticated/_admin/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthenticatedAdminAdminIndexRouteImport
      parentRoute: typeof AuthenticatedAdminRoute
    }
    '/_authenticated/user/$username/best-practices': {
      id: '/_authenticated/user/$username/best-practices'
      path: '/user/$username/best-practices'
      fullPath: '/user/$username/best-practices'
      preLoaderRoute: typeof AuthenticatedUserUsernameBestPracticesRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/_admin/admin/teams': {
      id: '/_authenticated/_admin/admin/teams'
      path: '/admin/teams'
      fullPath: '/admin/teams'
      preLoaderRoute: typeof AuthenticatedAdminAdminTeamsRouteImport
      parentRoute: typeof AuthenticatedAdminRoute
    }
    '/_authenticated/_admin/admin/settings': {
      id: '/_authenticated/_admin/admin/settings'
      path: '/admin/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AuthenticatedAdminAdminSettingsRouteImport
      parentRoute: typeof AuthenticatedAdminRoute
    }
    '/_authenticated/_admin/admin/members': {
      id: '/_authenticated/_admin/admin/members'
      path: '/admin/members'
      fullPath: '/admin/members'
      preLoaderRoute: typeof AuthenticatedAdminAdminMembersRouteImport
      parentRoute: typeof AuthenticatedAdminRoute
    }
  }
}

interface AuthenticatedAdminRouteChildren {
  AuthenticatedAdminAdminMembersRoute: typeof AuthenticatedAdminAdminMembersRoute
  AuthenticatedAdminAdminSettingsRoute: typeof AuthenticatedAdminAdminSettingsRoute
  AuthenticatedAdminAdminTeamsRoute: typeof AuthenticatedAdminAdminTeamsRoute
  AuthenticatedAdminAdminIndexRoute: typeof AuthenticatedAdminAdminIndexRoute
}

const AuthenticatedAdminRouteChildren: AuthenticatedAdminRouteChildren = {
  AuthenticatedAdminAdminMembersRoute: AuthenticatedAdminAdminMembersRoute,
  AuthenticatedAdminAdminSettingsRoute: AuthenticatedAdminAdminSettingsRoute,
  AuthenticatedAdminAdminTeamsRoute: AuthenticatedAdminAdminTeamsRoute,
  AuthenticatedAdminAdminIndexRoute: AuthenticatedAdminAdminIndexRoute,
}

const AuthenticatedAdminRouteWithChildren =
  AuthenticatedAdminRoute._addFileChildren(AuthenticatedAdminRouteChildren)

interface AuthenticatedMentorRouteChildren {
  AuthenticatedMentorMentor_accessRoute: typeof AuthenticatedMentorMentor_accessRoute
  AuthenticatedMentorIndexRoute: typeof AuthenticatedMentorIndexRoute
}

const AuthenticatedMentorRouteChildren: AuthenticatedMentorRouteChildren = {
  AuthenticatedMentorMentor_accessRoute: AuthenticatedMentorMentor_accessRoute,
  AuthenticatedMentorIndexRoute: AuthenticatedMentorIndexRoute,
}

const AuthenticatedMentorRouteWithChildren =
  AuthenticatedMentorRoute._addFileChildren(AuthenticatedMentorRouteChildren)

interface AuthenticatedRouteChildren {
  AuthenticatedAdminRoute: typeof AuthenticatedAdminRouteWithChildren
  AuthenticatedBestPracticesRoute: typeof AuthenticatedBestPracticesRoute
  AuthenticatedSettingsRoute: typeof AuthenticatedSettingsRoute
  AuthenticatedTeamsRoute: typeof AuthenticatedTeamsRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedMentorThreadIdRoute: typeof AuthenticatedMentorThreadIdRoute
  AuthenticatedMentorRoute: typeof AuthenticatedMentorRouteWithChildren
  AuthenticatedUserUsernameBestPracticesRoute: typeof AuthenticatedUserUsernameBestPracticesRoute
  AuthenticatedUserUsernameIndexRoute: typeof AuthenticatedUserUsernameIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAdminRoute: AuthenticatedAdminRouteWithChildren,
  AuthenticatedBestPracticesRoute: AuthenticatedBestPracticesRoute,
  AuthenticatedSettingsRoute: AuthenticatedSettingsRoute,
  AuthenticatedTeamsRoute: AuthenticatedTeamsRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedMentorThreadIdRoute: AuthenticatedMentorThreadIdRoute,
  AuthenticatedMentorRoute: AuthenticatedMentorRouteWithChildren,
  AuthenticatedUserUsernameBestPracticesRoute:
    AuthenticatedUserUsernameBestPracticesRoute,
  AuthenticatedUserUsernameIndexRoute: AuthenticatedUserUsernameIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AboutRoute: AboutRoute,
  ImprintRoute: ImprintRoute,
  LandingRoute: LandingRoute,
  PrivacyRoute: PrivacyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
