/**
 * PokéAPI
 * All the Pokémon data you\'ll ever need in one place, easily accessible through a modern free open-source RESTful API.  ## What is this?  This is a full RESTful API linked to an extensive database detailing everything about the Pokémon main game series.  We\'ve covered everything from Pokémon to Berry Flavors.  ## Where do I start?  We have awesome [documentation](https://pokeapi.co/docs/v2) on how to use this API. It takes minutes to get started.  This API will always be publicly available and will never require any extensive setup process to consume.  Created by [**Paul Hallett**(]https://github.com/phalt) and other [**PokéAPI contributors***](https://github.com/PokeAPI/pokeapi#contributing) around the world. Pokémon and Pokémon character names are trademarks of Nintendo.     
 *
 * The version of the OpenAPI document: 2.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { ItemAttributeDetail } from '../model/models';
import { ItemCategoryDetail } from '../model/models';
import { ItemDetail } from '../model/models';
import { ItemFlingEffectDetail } from '../model/models';
import { ItemPocketDetail } from '../model/models';
import { PaginatedItemAttributeSummaryList } from '../model/models';
import { PaginatedItemCategorySummaryList } from '../model/models';
import { PaginatedItemFlingEffectSummaryList } from '../model/models';
import { PaginatedItemPocketSummaryList } from '../model/models';
import { PaginatedItemSummaryList } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface ItemsServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * List item attributes
     * Item attributes define particular aspects of items, e.g.\&quot;usable in battle\&quot; or \&quot;consumable\&quot;.
     * @param limit Number of results to return per page.
     * @param offset The initial index from which to return the results.
     * @param q &gt; Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2) Case-insensitive query applied on the &#x60;name&#x60; property. 
     */
    itemAttributeList(limit?: number, offset?: number, q?: string, extraHttpRequestParams?: any): Observable<PaginatedItemAttributeSummaryList>;

    /**
     * Get item attribute
     * Item attributes define particular aspects of items, e.g.\&quot;usable in battle\&quot; or \&quot;consumable\&quot;.
     * @param id This parameter can be a string or an integer.
     */
    itemAttributeRetrieve(id: string, extraHttpRequestParams?: any): Observable<ItemAttributeDetail>;

    /**
     * List item categories
     * Item categories determine where items will be placed in the players bag.
     * @param limit Number of results to return per page.
     * @param offset The initial index from which to return the results.
     * @param q &gt; Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2) Case-insensitive query applied on the &#x60;name&#x60; property. 
     */
    itemCategoryList(limit?: number, offset?: number, q?: string, extraHttpRequestParams?: any): Observable<PaginatedItemCategorySummaryList>;

    /**
     * Get item category
     * Item categories determine where items will be placed in the players bag.
     * @param id This parameter can be a string or an integer.
     */
    itemCategoryRetrieve(id: string, extraHttpRequestParams?: any): Observable<ItemCategoryDetail>;

    /**
     * List item fling effects
     * The various effects of the move\&quot;Fling\&quot; when used with different items.
     * @param limit Number of results to return per page.
     * @param offset The initial index from which to return the results.
     * @param q &gt; Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2) Case-insensitive query applied on the &#x60;name&#x60; property. 
     */
    itemFlingEffectList(limit?: number, offset?: number, q?: string, extraHttpRequestParams?: any): Observable<PaginatedItemFlingEffectSummaryList>;

    /**
     * Get item fling effect
     * The various effects of the move\&quot;Fling\&quot; when used with different items.
     * @param id This parameter can be a string or an integer.
     */
    itemFlingEffectRetrieve(id: string, extraHttpRequestParams?: any): Observable<ItemFlingEffectDetail>;

    /**
     * List items
     * An item is an object in the games which the player can pick up, keep in their bag, and use in some manner. They have various uses, including healing, powering up, helping catch Pokémon, or to access a new area.
     * @param limit Number of results to return per page.
     * @param offset The initial index from which to return the results.
     * @param q &gt; Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2) Case-insensitive query applied on the &#x60;name&#x60; property. 
     */
    itemList(limit?: number, offset?: number, q?: string, extraHttpRequestParams?: any): Observable<PaginatedItemSummaryList>;

    /**
     * List item pockets
     * Pockets within the players bag used for storing items by category.
     * @param limit Number of results to return per page.
     * @param offset The initial index from which to return the results.
     * @param q &gt; Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2) Case-insensitive query applied on the &#x60;name&#x60; property. 
     */
    itemPocketList(limit?: number, offset?: number, q?: string, extraHttpRequestParams?: any): Observable<PaginatedItemPocketSummaryList>;

    /**
     * Get item pocket
     * Pockets within the players bag used for storing items by category.
     * @param id This parameter can be a string or an integer.
     */
    itemPocketRetrieve(id: string, extraHttpRequestParams?: any): Observable<ItemPocketDetail>;

    /**
     * Get item
     * An item is an object in the games which the player can pick up, keep in their bag, and use in some manner. They have various uses, including healing, powering up, helping catch Pokémon, or to access a new area.
     * @param id This parameter can be a string or an integer.
     */
    itemRetrieve(id: string, extraHttpRequestParams?: any): Observable<ItemDetail>;

}
