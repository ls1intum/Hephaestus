/**
 * Hephaestus API
 * API documentation for the Hephaestus application server.
 *
 * The version of the OpenAPI document: 0.2.0
 * Contact: felixtj.dietrich@tum.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { TeamInfo } from '../model/models';
import { UserInfo } from '../model/models';
import { UserTeams } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface WorkspaceServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * 
     * @param teamId 
     * @param repositoryId 
     * @param label 
     */
    addLabelToTeam(teamId: number, repositoryId: number, label: string, extraHttpRequestParams?: any): Observable<TeamInfo>;

    /**
     * 
     * 
     * @param owner 
     * @param name 
     */
    addRepositoryToMonitor(owner: string, name: string, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * 
     * @param teamId 
     * @param repositoryOwner 
     * @param repositoryName 
     */
    addRepositoryToTeam(teamId: number, repositoryOwner: string, repositoryName: string, extraHttpRequestParams?: any): Observable<TeamInfo>;

    /**
     * 
     * 
     * @param login 
     * @param teamId 
     */
    addTeamToUser(login: string, teamId: number, extraHttpRequestParams?: any): Observable<UserInfo>;

    /**
     * 
     * 
     */
    automaticallyAssignTeams(extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * 
     * @param teamInfo 
     */
    createTeam(teamInfo: TeamInfo, extraHttpRequestParams?: any): Observable<TeamInfo>;

    /**
     * 
     * 
     * @param teamId 
     */
    deleteTeam(teamId: number, extraHttpRequestParams?: any): Observable<TeamInfo>;

    /**
     * 
     * 
     */
    getRepositoriesToMonitor(extraHttpRequestParams?: any): Observable<Array<string>>;

    /**
     * 
     * 
     */
    getUsersWithTeams(extraHttpRequestParams?: any): Observable<Array<UserTeams>>;

    /**
     * 
     * 
     * @param teamId 
     * @param labelId 
     */
    removeLabelFromTeam(teamId: number, labelId: number, extraHttpRequestParams?: any): Observable<TeamInfo>;

    /**
     * 
     * 
     * @param teamId 
     * @param repositoryOwner 
     * @param repositoryName 
     */
    removeRepositoryFromTeam(teamId: number, repositoryOwner: string, repositoryName: string, extraHttpRequestParams?: any): Observable<TeamInfo>;

    /**
     * 
     * 
     * @param owner 
     * @param name 
     */
    removeRepositoryToMonitor(owner: string, name: string, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * 
     * @param login 
     * @param teamId 
     */
    removeUserFromTeam(login: string, teamId: number, extraHttpRequestParams?: any): Observable<UserInfo>;

    /**
     * 
     * 
     */
    resetAndRecalculateLeagues(extraHttpRequestParams?: any): Observable<{}>;

}
