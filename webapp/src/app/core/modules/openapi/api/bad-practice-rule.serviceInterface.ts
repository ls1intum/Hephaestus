/**
 * Hephaestus API
 * API documentation for the Hephaestus application server.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: felixtj.dietrich@tum.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { CreateOrUpdateBadPracticeRule } from '../model/models';
import { PullRequestBadPracticeRule } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface BadPracticeRuleServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * 
     * @param owner 
     * @param repository 
     * @param createOrUpdateBadPracticeRule 
     */
    createRule(owner: string, repository: string, createOrUpdateBadPracticeRule: CreateOrUpdateBadPracticeRule, extraHttpRequestParams?: any): Observable<PullRequestBadPracticeRule>;

    /**
     * 
     * 
     * @param id 
     */
    deleteRule(id: number, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * 
     * @param owner 
     * @param repository 
     */
    getRulesByRepository(owner: string, repository: string, extraHttpRequestParams?: any): Observable<Array<PullRequestBadPracticeRule>>;

    /**
     * 
     * 
     * @param id 
     * @param createOrUpdateBadPracticeRule 
     */
    updateRule(id: number, createOrUpdateBadPracticeRule: CreateOrUpdateBadPracticeRule, extraHttpRequestParams?: any): Observable<PullRequestBadPracticeRule>;

}
