/**
 * PokéAPI
 * All the Pokémon data you\'ll ever need in one place, easily accessible through a modern free open-source RESTful API.  ## What is this?  This is a full RESTful API linked to an extensive database detailing everything about the Pokémon main game series.  We\'ve covered everything from Pokémon to Berry Flavors.  ## Where do I start?  We have awesome [documentation](https://pokeapi.co/docs/v2) on how to use this API. It takes minutes to get started.  This API will always be publicly available and will never require any extensive setup process to consume.  Created by [**Paul Hallett**(]https://github.com/phalt) and other [**PokéAPI contributors***](https://github.com/PokeAPI/pokeapi#contributing) around the world. Pokémon and Pokémon character names are trademarks of Nintendo.     
 *
 * The version of the OpenAPI document: 2.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { LocationAreaDetail } from '../model/models';
import { LocationDetail } from '../model/models';
import { PaginatedLocationAreaSummaryList } from '../model/models';
import { PaginatedLocationSummaryList } from '../model/models';
import { PaginatedPalParkAreaSummaryList } from '../model/models';
import { PaginatedRegionSummaryList } from '../model/models';
import { PalParkAreaDetail } from '../model/models';
import { RegionDetail } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface LocationServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * List location areas
     * Location areas are sections of areas, such as floors in a building or cave. Each area has its own set of possible Pokémon encounters.
     * @param limit Number of results to return per page.
     * @param offset The initial index from which to return the results.
     */
    locationAreaList(limit?: number, offset?: number, extraHttpRequestParams?: any): Observable<PaginatedLocationAreaSummaryList>;

    /**
     * Get location area
     * Location areas are sections of areas, such as floors in a building or cave. Each area has its own set of possible Pokémon encounters.
     * @param id A unique integer value identifying this location area.
     */
    locationAreaRetrieve(id: number, extraHttpRequestParams?: any): Observable<LocationAreaDetail>;

    /**
     * List locations
     * Locations that can be visited within the games. Locations make up sizable portions of regions, like cities or routes.
     * @param limit Number of results to return per page.
     * @param offset The initial index from which to return the results.
     * @param q &gt; Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2) Case-insensitive query applied on the &#x60;name&#x60; property. 
     */
    locationList(limit?: number, offset?: number, q?: string, extraHttpRequestParams?: any): Observable<PaginatedLocationSummaryList>;

    /**
     * Get location
     * Locations that can be visited within the games. Locations make up sizable portions of regions, like cities or routes.
     * @param id This parameter can be a string or an integer.
     */
    locationRetrieve(id: string, extraHttpRequestParams?: any): Observable<LocationDetail>;

    /**
     * List pal park areas
     * Areas used for grouping Pokémon encounters in Pal Park. They\&#39;re like habitats that are specific to Pal Park.
     * @param limit Number of results to return per page.
     * @param offset The initial index from which to return the results.
     * @param q &gt; Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2) Case-insensitive query applied on the &#x60;name&#x60; property. 
     */
    palParkAreaList(limit?: number, offset?: number, q?: string, extraHttpRequestParams?: any): Observable<PaginatedPalParkAreaSummaryList>;

    /**
     * Get pal park area
     * Areas used for grouping Pokémon encounters in Pal Park. They\&#39;re like habitats that are specific to Pal Park.
     * @param id This parameter can be a string or an integer.
     */
    palParkAreaRetrieve(id: string, extraHttpRequestParams?: any): Observable<PalParkAreaDetail>;

    /**
     * List regions
     * A region is an organized area of the Pokémon world. Most often, the main difference between regions is the species of Pokémon that can be encountered within them.
     * @param limit Number of results to return per page.
     * @param offset The initial index from which to return the results.
     * @param q &gt; Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2) Case-insensitive query applied on the &#x60;name&#x60; property. 
     */
    regionList(limit?: number, offset?: number, q?: string, extraHttpRequestParams?: any): Observable<PaginatedRegionSummaryList>;

    /**
     * Get region
     * A region is an organized area of the Pokémon world. Most often, the main difference between regions is the species of Pokémon that can be encountered within them.
     * @param id This parameter can be a string or an integer.
     */
    regionRetrieve(id: string, extraHttpRequestParams?: any): Observable<RegionDetail>;

}
