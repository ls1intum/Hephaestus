{
  "branches": [
    {
      "name": "develop",
      "prerelease": "rc"
    },
    "main"
  ],
  "plugins": [
    [
      "@semantic-release/commit-analyzer",
      {
        "releaseRules": [
          {
            "breaking": true,
            "release": "major"
          },
          {
            "type": "feat",
            "release": "minor"
          },
          {
            "type": "fix",
            "release": "patch"
          },
          {
            "type": "docs",
            "release": "patch"
          },
          {
            "type": "style",
            "release": false
          },
          {
            "type": "refactor",
            "release": "patch"
          },
          {
            "type": "perf",
            "release": "patch"
          },
          {
            "type": "test",
            "release": false
          },
          {
            "type": "build",
            "release": "patch"
          },
          {
            "type": "ci",
            "release": false
          },
          {
            "type": "chore",
            "scope": "release",
            "release": false
          },
          {
            "type": "chore",
            "release": "patch"
          },
          {
            "type": "revert",
            "release": "patch"
          },
          {
            "scope": "no-release",
            "release": false
          }
        ],
        "parserOpts": {
          "noteKeywords": ["BREAKING CHANGE", "BREAKING CHANGES", "BREAKING"],
          "breakingHeaderPattern": "^(\\w*)(?:\\(([\\w\\$\\.\\-\\*\\s]*)\\))?!: (.*)$",
          "headerPattern": "^(\\w*)(?:\\(([\\w\\$\\.\\-\\*\\s]*)\\))?!?: (.*)$"
        }
      }
    ],
    [
      "@semantic-release/release-notes-generator",
      {
        "preset": "conventionalcommits",
        "parserOpts": {
          "noteKeywords": ["BREAKING CHANGE", "BREAKING CHANGES", "BREAKING"],
          "breakingHeaderPattern": "^(\\w*)(?:\\(([\\w\\$\\.\\-\\*\\s]*)\\))?!: (.*)$",
          "headerPattern": "^(\\w*)(?:\\(([\\w\\$\\.\\-\\*\\s]*)\\))?!?: (.*)$"
        },
        "writerOpts": {
          "commitsSort": ["subject", "scope"]
        },
        "presetConfig": {
          "types": [
            {
              "type": "fix",
              "section": "üêõ Bug Fixes",
              "hidden": false
            },
            {
              "type": "feat",
              "section": "üöÄ Features",
              "hidden": false
            },
            {
              "type": "docs",
              "section": "üìö Documentation",
              "hidden": false
            },
            {
              "type": "style",
              "section": "üíé Styles",
              "hidden": true
            },
            {
              "type": "refactor",
              "section": "‚ôªÔ∏è Code Refactoring",
              "hidden": false
            },
            {
              "type": "perf",
              "section": "‚ö° Performance Improvements",
              "hidden": false
            },
            {
              "type": "test",
              "section": "üß™ Tests",
              "hidden": true
            },
            {
              "type": "build",
              "section": "üõ† Build System",
              "hidden": false
            },
            {
              "type": "ci",
              "section": "üîß Continuous Integration",
              "hidden": true
            },
            {
              "type": "chore",
              "section": "üóÉ Chores",
              "hidden": true
            },
            {
              "type": "revert",
              "section": "üîô Reverts",
              "hidden": false
            }
          ]
        }
      }
    ],
    [
      "@semantic-release/exec",
      {
        "prepareCmd": "./update_version.sh ${nextRelease.version}",
        "publishCmd": "echo 'Version ${nextRelease.version} has been released'"
      }
    ],
    [
      "@semantic-release/git",
      {
        "assets": [
          "package.json",
          "webapp/package.json",
          "webapp/package-lock.json",
          "webapp/src/api/**/*",
          "server/application-server/pom.xml",
          "server/application-server/src/main/java/de/tum/in/www1/hephaestus/OpenAPIConfiguration.java",
          "server/application-server/src/main/java/de/tum/in/www1/hephaestus/intelligenceservice/**/*", 
          "server/application-server/src/main/resources/application.yml",
          "server/application-server/openapi.yaml",
          "server/intelligence-service/pyproject.toml",
          "server/intelligence-service/app/main.py",
          "server/intelligence-service/openapi.yaml",
          "server/webhook-ingest/pyproject.toml"
        ],
        "message": "chore(release): ${nextRelease.version}\n\n${nextRelease.notes}"
      }
    ],
    [
      "@semantic-release/github",
      {
        "successComment": "‚úÖ **Released in v${nextRelease.version}**\n\nThis ${issue.pull_request ? 'pull request' : 'issue'} has been resolved and is now available in the [latest release](<github_release_url>).\n\nThank you for your contribution to Hephaestus! üôè",
        "successCommentCondition": "<% return issue.user.type !== 'Bot'; %>",
        "failTitle": "üö® Automated Release Pipeline Failed",
        "failComment": "## Release Failure Report\n\nThe automated release pipeline for Hephaestus has encountered an error on branch `${branch.name}`.\n\n### Error Details\n${errors.map(err => `- **${err.pluginName}**: ${err.message}`).join('\\n')}\n\n### Next Steps\nOur team has been notified and will investigate this issue. You can track the resolution in this issue.\n\n---\n*This is an automated message from the Hephaestus release system.*",
        "labels": ["release-failure", "bug"],
        "releasedLabels": ["released-v${nextRelease.version}"],
        "addReleases": "bottom",
        "discussionCategoryName": "Announcements"
      }
    ]
  ],
  "preset": "conventionalcommits"
}
