name: CI/CD

on:
  pull_request:
    types: [opened, synchronize, labeled, reopened]
    paths:
      - 'server/application-server/**'
      - 'server/intelligence-service/**'
      - '.github/workflows/openapi-ci.yml'
      - 'server/application-server/src/main/java/de/tum/in/www1/hephaestus/intelligenceservice/**'
  push:
    paths:
      - 'server/application-server/openapi.yaml'
      - 'server/intelligence-service/openapi.yaml'
      - 'webapp-react/src/api/**/*.gen.ts'
      - 'server/application-server/src/main/java/de/tum/in/www1/hephaestus/intelligenceservice/**'
    branches: [develop]
  workflow_dispatch:

jobs:
  # Intelligence Service spec validation
  intelligence-service-specs:
    name: Intelligence Service / Validate OpenAPI spec (add autocommit-openapi label to PR to auto-commit changes)
    runs-on: ubuntu-latest
    outputs:
      spec-changed: ${{ steps.check_spec_changes.outputs.spec_changed }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Python 3.13
        uses: actions/setup-python@v2
        with:
          python-version: 3.13

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 2.1.1
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Python dependencies
        working-directory: server/intelligence-service
        run: poetry lock && poetry install --no-interaction --no-root

      - name: Generate and validate OpenAPI specs
        run: npm run generate:api:intelligence-service:specs

      - name: Check for spec changes
        id: check_spec_changes
        run: |
          echo "Checking for changes in OpenAPI spec..."
          git add server/intelligence-service/openapi.yaml
          if git diff --cached --quiet; then
            echo "No changes detected in OpenAPI spec."
            echo "spec_changed=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected in OpenAPI spec."
            git diff --cached
            echo "spec_changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Upload OpenAPI spec
        if: steps.check_spec_changes.outputs.spec_changed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: intelligence-service-openapi-spec
          path: server/intelligence-service/openapi.yaml
          retention-days: 1

      - name: Validate spec consistency
        run: |
          if [[ "${{ steps.check_spec_changes.outputs.spec_changed }}" == "true" ]]; then
            # Check if autocommit label is present
            if [[ "${{ contains(github.event.pull_request.labels.*.name, 'autocommit-openapi') }}" == "true" ]]; then
              echo "✅ Intelligence Service OpenAPI spec changes detected, but autocommit-openapi label is present - will auto-commit"
            else
              echo "## ⚠️ Intelligence Service OpenAPI Spec Out of Sync" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**Issue:** The committed Intelligence Service OpenAPI spec does not match the current FastAPI code." >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**What this means:**" >> $GITHUB_STEP_SUMMARY
              echo "- Intelligence Service FastAPI code changes were made without regenerating the OpenAPI specification" >> $GITHUB_STEP_SUMMARY
              echo "- The Intelligence Service spec file is out of sync with the actual FastAPI endpoints" >> $GITHUB_STEP_SUMMARY
              echo "- This will cause the Application Server's Java client generation to use outdated API definitions" >> $GITHUB_STEP_SUMMARY
              echo "- The outdated spec will also affect any future Java client regeneration" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**Fix Required (choose one):**" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**Option 1 - Auto-commit (Recommended):**" >> $GITHUB_STEP_SUMMARY
              echo "Add the \`autocommit-openapi\` label to this PR to automatically commit the updated spec." >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**Option 2 - Manual fix:**" >> $GITHUB_STEP_SUMMARY
              echo '```bash' >> $GITHUB_STEP_SUMMARY
              echo '# Option 2a: Update just the spec' >> $GITHUB_STEP_SUMMARY
              echo 'npm run generate:api:intelligence-service:specs' >> $GITHUB_STEP_SUMMARY
              echo 'git add server/intelligence-service/openapi.yaml' >> $GITHUB_STEP_SUMMARY
              echo 'git commit -m "chore: update intelligence service OpenAPI spec"' >> $GITHUB_STEP_SUMMARY
              echo '' >> $GITHUB_STEP_SUMMARY
              echo '# Option 2b: Update spec + Java client (recommended)' >> $GITHUB_STEP_SUMMARY
              echo 'npm run generate:api:intelligence-service' >> $GITHUB_STEP_SUMMARY
              echo 'git add server/intelligence-service/openapi.yaml server/application-server/src/main/java/de/tum/in/www1/hephaestus/intelligenceservice/' >> $GITHUB_STEP_SUMMARY
              echo 'git commit -m "chore: update intelligence service OpenAPI spec and Java client"' >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**Changes detected:**" >> $GITHUB_STEP_SUMMARY
              echo '```diff' >> $GITHUB_STEP_SUMMARY
              git diff --cached server/intelligence-service/openapi.yaml >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
              echo "Intelligence Service OpenAPI spec validation failed. Check the CI summary above for details."
              exit 1
            fi
          else
            echo "✅ Intelligence Service OpenAPI spec validation passed - FastAPI spec matches code"
          fi

  # Application Server spec validation
  application-server-specs:
    name: Application Server / Validate OpenAPI spec (add autocommit-openapi label to PR to auto-commit changes)
    runs-on: ubuntu-latest
    outputs:
      spec-changed: ${{ steps.check_spec_changes.outputs.spec_changed }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          persist-credentials: false
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Set up directories
        working-directory: server/application-server
        run: |
          mkdir -p ./keycloak-data
          chmod -R 755 ./keycloak-data

      - name: Generate and validate OpenAPI specs
        run: npm run generate:api:application-server:specs

      - name: Check for spec changes
        id: check_spec_changes
        run: |
          echo "Checking for changes in OpenAPI spec..."
          git add server/application-server/openapi.yaml
          if git diff --cached --quiet; then
            echo "spec_changed=false" >> $GITHUB_OUTPUT
          else
            echo "spec_changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Upload OpenAPI spec
        if: steps.check_spec_changes.outputs.spec_changed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: application-server-openapi-spec
          path: server/application-server/openapi.yaml
          retention-days: 1

      - name: Validate spec consistency
        run: |
          if [[ "${{ steps.check_spec_changes.outputs.spec_changed }}" == "true" ]]; then
            # Check if autocommit label is present
            if [[ "${{ contains(github.event.pull_request.labels.*.name, 'autocommit-openapi') }}" == "true" ]]; then
              echo "✅ Application Server OpenAPI spec changes detected, but autocommit-openapi label is present - will auto-commit"
            else
              echo "## ⚠️ Application Server OpenAPI Spec Out of Sync" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**Issue:** The committed Application Server OpenAPI spec does not match the current Spring Boot code." >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**What this means:**" >> $GITHUB_STEP_SUMMARY
              echo "- Application Server Spring Boot code changes were made without regenerating the OpenAPI specification" >> $GITHUB_STEP_SUMMARY
              echo "- The Application Server spec file is out of sync with the actual Spring Boot API endpoints" >> $GITHUB_STEP_SUMMARY
              echo "- This will cause the Webapp's TypeScript client generation to use outdated API definitions" >> $GITHUB_STEP_SUMMARY
              echo "- The outdated spec will also affect any future TypeScript client regeneration" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**Fix Required (choose one):**" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**Option 1 - Auto-commit (Recommended):**" >> $GITHUB_STEP_SUMMARY
              echo "Add the \`autocommit-openapi\` label to this PR to automatically commit the updated spec." >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**Option 2 - Manual fix:**" >> $GITHUB_STEP_SUMMARY
              echo '```bash' >> $GITHUB_STEP_SUMMARY
              echo '# Option 2a: Update just the spec' >> $GITHUB_STEP_SUMMARY
              echo 'npm run generate:api:application-server:specs' >> $GITHUB_STEP_SUMMARY
              echo 'git add server/application-server/openapi.yaml' >> $GITHUB_STEP_SUMMARY
              echo 'git commit -m "chore: update application server OpenAPI spec"' >> $GITHUB_STEP_SUMMARY
              echo '' >> $GITHUB_STEP_SUMMARY
              echo '# Option 2b: Update spec + clients (recommended)' >> $GITHUB_STEP_SUMMARY
              echo 'npm run generate:api:application-server' >> $GITHUB_STEP_SUMMARY
              echo 'git add server/application-server/openapi.yaml webapp/src/api/' >> $GITHUB_STEP_SUMMARY
              echo 'git commit -m "chore: update application server OpenAPI spec and clients"' >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**Changes detected:**" >> $GITHUB_STEP_SUMMARY
              echo '```diff' >> $GITHUB_STEP_SUMMARY
              git diff --cached server/application-server/openapi.yaml >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
              echo "Application Server OpenAPI spec validation failed. Check the CI summary above for details."
              exit 1
            fi
          else
            echo "✅ Application Server OpenAPI spec validation passed - Spring Boot spec matches code"
          fi

  # Intelligence Service Java client generation (runs even if spec validation fails)
  intelligence-service-client:
    name: Application Server / Validate Java API client (add autocommit-openapi label to PR to auto-commit changes)
    runs-on: ubuntu-latest
    needs: intelligence-service-specs
    if: always()
    outputs:
      client-changed: ${{ steps.check_changes.outputs.changes_detected }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          persist-credentials: false
          fetch-depth: 0

      - name: Download Intelligence Service OpenAPI spec from previous job
        uses: actions/download-artifact@v4
        with:
          name: intelligence-service-openapi-spec
          path: server/intelligence-service/

      - name: Install dependencies
        run: npm install

      - name: Generate Java client for the intelligence service
        run: npm run generate:api:intelligence-service:client

      - name: Check for changes in the API
        id: check_changes
        run: |
          echo "Checking for changes in the API client directory..."
          git add .
          if git diff --cached --quiet; then
            echo "No changes detected in the API client directory."
            echo "changes_detected=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected in the API client directory."
            echo "changes_detected=true" >> $GITHUB_OUTPUT
            git diff --cached
          fi

      - name: Upload generated client files
        if: steps.check_changes.outputs.changes_detected == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: intelligence-service-java-client
          path: server/application-server/src/main/java/de/tum/in/www1/hephaestus/intelligenceservice/
          retention-days: 1

      - name: Validate client consistency
        run: |
          if [[ "${{ steps.check_changes.outputs.changes_detected }}" == "true" ]]; then
            # Check if autocommit label is present
            if [[ "${{ contains(github.event.pull_request.labels.*.name, 'autocommit-openapi') }}" == "true" ]]; then
              echo "✅ Java client needs updating due to your code changes, but autocommit-openapi label is present - will auto-commit"
            else
              echo "## ⚠️ Java Client Out of Sync with Code Changes" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**Issue:** Your Intelligence Service code changes require updating the committed Java client." >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**What happened:**" >> $GITHUB_STEP_SUMMARY
              echo "1. 🔄 Your Intelligence Service FastAPI code was changed" >> $GITHUB_STEP_SUMMARY
              echo "2. 📋 CI generated a new OpenAPI spec from your code" >> $GITHUB_STEP_SUMMARY
              echo "3. ☕ CI generated a new Java client from the new spec" >> $GITHUB_STEP_SUMMARY
              echo "4. ❌ **The new Java client differs from what's committed in git**" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**This means:** The Application Server's Java client needs to be updated to match your Intelligence Service changes." >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**Fix Required (choose one):**" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**✅ Option 1 - Auto-commit (Recommended):**" >> $GITHUB_STEP_SUMMARY
              echo "Add the \`autocommit-openapi\` label to this PR and CI will automatically commit the updated client." >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**🔧 Option 2 - Manual update:**" >> $GITHUB_STEP_SUMMARY
              echo '```bash' >> $GITHUB_STEP_SUMMARY
              echo '# Update everything (spec + Java client):' >> $GITHUB_STEP_SUMMARY
              echo 'npm run generate:api:intelligence-service' >> $GITHUB_STEP_SUMMARY
              echo 'git add server/intelligence-service/openapi.yaml server/application-server/src/main/java/de/tum/in/www1/hephaestus/intelligenceservice/' >> $GITHUB_STEP_SUMMARY
              echo 'git commit -m "chore: update Intelligence Service spec and Java client"' >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**Changes detected:**" >> $GITHUB_STEP_SUMMARY
              echo '```diff' >> $GITHUB_STEP_SUMMARY
              git diff --cached server/application-server/src/main/java/de/tum/in/www1/hephaestus/intelligenceservice/ >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
              echo "Java client validation failed - your code changes require updating the committed client. Check the CI summary above for details."
              exit 1
            fi
          else
            echo "✅ Java client validation passed - committed client matches what your code generates"
          fi

  # Application Server React client generation (runs even if spec validation fails)
  application-server-client:
    name: Webapp (React) / Validate TypeScript API client (add autocommit-openapi label to PR to auto-commit changes)
    runs-on: ubuntu-latest
    needs: application-server-specs
    if: always()
    outputs:
      client-changed: ${{ steps.check_changes.outputs.changes_detected }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          persist-credentials: false
          fetch-depth: 0

      - name: Download Application Server OpenAPI spec from previous job
        uses: actions/download-artifact@v4
        with:
          name: application-server-openapi-spec
          path: server/application-server/

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm install

      - name: Generate React client for the application server
        run: npm run generate:api:application-server:client-react

      - name: Check for changes in the API
        id: check_changes
        run: |
          echo "Checking for changes in the API client directory..."
          echo "Current git status:"
          git status
          echo "Current git diff:"
          git diff
          git add .
          echo "Git status after adding changes:"
          git status
          if git diff --cached --quiet; then
            echo "No changes detected in the API client directory."
            echo "changes_detected=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected in the API client directory."
            echo "Staged changes:"
            git diff --cached
            echo "changes_detected=true" >> $GITHUB_OUTPUT
          fi

      - name: Upload generated client files
        if: steps.check_changes.outputs.changes_detected == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: application-server-react-client
          path: webapp-react/src/api/
          retention-days: 1

      - name: Validate client consistency
        run: |
          if [[ "${{ steps.check_changes.outputs.changes_detected }}" == "true" ]]; then
            # Check if autocommit label is present
            if [[ "${{ contains(github.event.pull_request.labels.*.name, 'autocommit-openapi') }}" == "true" ]]; then
              echo "✅ TypeScript client needs updating due to your code changes, but autocommit-openapi label is present - will auto-commit"
            else
              echo "## ⚠️ TypeScript Client Out of Sync with Code Changes" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**Issue:** Your Application Server code changes require updating the committed TypeScript client." >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**What happened:**" >> $GITHUB_STEP_SUMMARY
              echo "1. 🔄 Your Application Server Spring Boot code was changed" >> $GITHUB_STEP_SUMMARY
              echo "2. 📋 CI generated a new OpenAPI spec from your code" >> $GITHUB_STEP_SUMMARY
              echo "3. 📱 CI generated a new TypeScript client from the new spec" >> $GITHUB_STEP_SUMMARY
              echo "4. ❌ **The new TypeScript client differs from what's committed in git**" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**This means:** The Webapp's TypeScript client needs to be updated to match your Application Server changes." >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**Fix Required (choose one):**" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**✅ Option 1 - Auto-commit (Recommended):**" >> $GITHUB_STEP_SUMMARY
              echo "Add the \`autocommit-openapi\` label to this PR and CI will automatically commit the updated client." >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**🔧 Option 2 - Manual update:**" >> $GITHUB_STEP_SUMMARY
              echo '```bash' >> $GITHUB_STEP_SUMMARY
              echo '# Update everything (spec + TypeScript client):' >> $GITHUB_STEP_SUMMARY
              echo 'npm run generate:api:application-server' >> $GITHUB_STEP_SUMMARY
              echo 'git add server/application-server/openapi.yaml webapp-react/src/api/' >> $GITHUB_STEP_SUMMARY
              echo 'git commit -m "chore: update Application Server spec and TypeScript client"' >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**🚀 Option 3 - Update everything:**" >> $GITHUB_STEP_SUMMARY
              echo '```bash' >> $GITHUB_STEP_SUMMARY
              echo 'npm run generate:api  # Generates all specs and clients at once' >> $GITHUB_STEP_SUMMARY
              echo 'git add .' >> $GITHUB_STEP_SUMMARY
              echo 'git commit -m "chore: update all OpenAPI specs and clients"' >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**Changes detected:**" >> $GITHUB_STEP_SUMMARY
              echo '```diff' >> $GITHUB_STEP_SUMMARY
              git diff --cached webapp-react/src/api/ >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
              echo "TypeScript client validation failed - your code changes require updating the committed client. Check the CI summary above for details."
              exit 1
            fi
          else
            echo "✅ TypeScript client validation passed - committed client matches what your code generates"
          fi

  # Unified commit job - runs after both client generations complete
  commit-changes:
    name: OpenAPI / Commit All Changes (add autocommit-openapi label to PR to auto-commit changes)
    runs-on: ubuntu-latest
    needs: [intelligence-service-specs, application-server-specs, intelligence-service-client, application-server-client]
    if: |
      always() && 
      contains(github.event.pull_request.labels.*.name, 'autocommit-openapi') &&
      (
        needs.intelligence-service-specs.outputs.spec-changed == 'true' ||
        needs.application-server-specs.outputs.spec-changed == 'true' ||
        needs.intelligence-service-client.outputs.client-changed == 'true' ||
        needs.application-server-client.outputs.client-changed == 'true'
      )

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          persist-credentials: false
          fetch-depth: 0

      - name: Download Intelligence Service OpenAPI spec
        if: needs.intelligence-service-specs.outputs.spec-changed == 'true'
        uses: actions/download-artifact@v4
        with:
          name: intelligence-service-openapi-spec
          path: server/intelligence-service/

      - name: Download Application Server OpenAPI spec
        if: needs.application-server-specs.outputs.spec-changed == 'true'
        uses: actions/download-artifact@v4
        with:
          name: application-server-openapi-spec
          path: server/application-server/

      - name: Download Intelligence Service Java client
        if: needs.intelligence-service-client.outputs.client-changed == 'true'
        uses: actions/download-artifact@v4
        with:
          name: intelligence-service-java-client
          path: server/application-server/src/main/java/de/tum/in/www1/hephaestus/intelligenceservice/

      - name: Download Application Server React client
        if: needs.application-server-client.outputs.client-changed == 'true'
        uses: actions/download-artifact@v4
        with:
          name: application-server-react-client
          path: webapp-react/src/api/

      - name: Check for any changes and commit
        run: |
          echo "Checking for any changes to commit..."
          git add .
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            echo "Changes detected. Committing all OpenAPI updates..."
            git config --local user.name "github-actions[bot]"
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            
            # Build commit message based on what changed
            COMMIT_MSG="chore: update OpenAPI specs and clients"
            COMMIT_BODY=""
            
            if [[ "${{ needs.intelligence-service-specs.outputs.spec-changed }}" == "true" ]]; then
              COMMIT_BODY="$COMMIT_BODY\n- Update intelligence service OpenAPI spec"
            fi
            
            if [[ "${{ needs.application-server-specs.outputs.spec-changed }}" == "true" ]]; then
              COMMIT_BODY="$COMMIT_BODY\n- Update application server OpenAPI spec"
            fi
            
            if [[ "${{ needs.intelligence-service-client.outputs.client-changed }}" == "true" ]]; then
              COMMIT_BODY="$COMMIT_BODY\n- Update intelligence service Java client"
            fi
            
            if [[ "${{ needs.application-server-client.outputs.client-changed }}" == "true" ]]; then
              COMMIT_BODY="$COMMIT_BODY\n- Update application server React client"
            fi
            
            git commit -a -m "$COMMIT_MSG$COMMIT_BODY"
            echo "CHANGES_COMMITTED=true" >> $GITHUB_ENV
          fi

      - name: Push changes
        if: env.CHANGES_COMMITTED == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GH_PAT }}
          branch: ${{ github.event.pull_request.head.ref  }}

      - name: Remove autocommit-openapi label
        if: env.CHANGES_COMMITTED == 'true'
        run: |
          echo "Removing the autocommit-openapi label..."
          curl --silent --fail-with-body -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels/autocommit-openapi
