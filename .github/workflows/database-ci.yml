# Database Schema Validation
# Validates migrations and ERD documentation are up-to-date

name: CI/CD

on:
  pull_request:
    paths:
      - 'server/application-server/**'
      - 'scripts/**'
      - 'package.json'
      - '.github/workflows/postgresql-ci.yml'
  workflow_dispatch:

jobs:
  schema-validation:
    name: Database / Validate schema migrations
    runs-on: ubuntu-latest
    outputs:
      schema-valid: ${{ steps.validate.outputs.valid }}

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: hephaestus
          POSTGRES_PASSWORD: root
          POSTGRES_USER: root
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Build Application
        working-directory: server/application-server
        run: mvn compile -DskipTests

      - name: Check Schema Drift
        env:
          CI: true
        run: scripts/db-utils.sh draft-changelog

      - name: Validate Schema Consistency
        id: validate
        run: |
          if [ -f "server/application-server/src/main/resources/db/changelog_new.xml" ]; then
            echo "## ⚠️ Schema Drift Detected" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Fix Required:** Run these commands locally:" >> $GITHUB_STEP_SUMMARY
            echo '```bash' >> $GITHUB_STEP_SUMMARY
            echo 'npm run db:draft-changelog' >> $GITHUB_STEP_SUMMARY
            echo '# Review, edit author, rename file, move to changelog/' >> $GITHUB_STEP_SUMMARY
            echo 'npm run db:generate-erd-docs' >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Generated Migration:**" >> $GITHUB_STEP_SUMMARY
            echo '```xml' >> $GITHUB_STEP_SUMMARY
            cat server/application-server/src/main/resources/db/changelog_new.xml >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            echo "valid=false" >> $GITHUB_OUTPUT
            exit 1
          else
            echo "valid=true" >> $GITHUB_OUTPUT
          fi

      - name: Cache Application Build
        uses: actions/cache@v4
        with:
          path: |
            server/application-server/target/
            ~/.m2/repository/
          key: app-build-${{ github.sha }}

  documentation-validation:
    name: Documentation / Validate database schema ERD
    runs-on: ubuntu-latest
    needs: schema-validation
    if: needs.schema-validation.outputs.schema-valid == 'true'

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: hephaestus
          POSTGRES_PASSWORD: root
          POSTGRES_USER: root
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore Application Build
        uses: actions/cache@v4
        with:
          path: |
            server/application-server/target/
            ~/.m2/repository/
          key: app-build-${{ github.sha }}

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build Application (if cache miss)
        working-directory: server/application-server
        run: mvn compile -DskipTests

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          cache: 'pip'
          cache-dependency-path: 'scripts/requirements.txt'

      - name: Generate ERD documentation
        env:
          CI: true
        run: scripts/db-utils.sh generate-erd

      - name: Validate ERD Documentation
        run: |
          if ! git diff --quiet docs/dev/database/schema.mmd; then
            echo "## ⚠️ ERD Documentation Outdated" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Fix Required:**" >> $GITHUB_STEP_SUMMARY
            echo '```bash' >> $GITHUB_STEP_SUMMARY
            echo 'npm run db:generate-erd-docs' >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
