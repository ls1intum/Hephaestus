name: Docker Build and Scan

on:
  workflow_call:
    inputs:
      should_skip:
        description: "Whether to skip the workflow"
        required: false
        type: string
        default: "false"

env:
  # Global pipeline configuration
  MAVEN_OPTS: -Xmx2048m -XX:+UseParallelGC
  NODE_VERSION: 22
  PYTHON_VERSION: 3.13
  JAVA_VERSION: 21

jobs:
  # Optimized Docker builds with security scanning
  docker-build-and-scan:
    runs-on: ubuntu-latest
    if: inputs.should_skip != 'true'
    timeout-minutes: 25
    strategy:
      matrix:
        component:
          - {
              name: "webapp",
              dockerfile: "./webapp-react/Dockerfile",
              context: "./webapp-react",
            }
          - {
              name: "application-server",
              dockerfile: "./server/application-server/Dockerfile",
              context: "./server/application-server",
            }
          - {
              name: "intelligence-service",
              dockerfile: "./server/intelligence-service/Dockerfile",
              context: "./server/intelligence-service",
            }
          - {
              name: "webhook-ingest",
              dockerfile: "./server/webhook-ingest/Dockerfile",
              context: "./server/webhook-ingest",
            }
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.component.context }}
          file: ${{ matrix.component.dockerfile }}
          tags: test-${{ matrix.component.name }}:latest
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Scan Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: test-${{ matrix.component.name }}:latest
          format: "table"
          exit-code: "1"  # Fail on real vulnerabilities
          ignore-unfixed: true
          severity: "CRITICAL,HIGH"
          # Use .trivyignore file for managing ignored CVEs
          trivyignores: ".trivyignore"

      # Enhanced error handling and reporting
      - name: Docker build and scan status report
        if: always()
        run: |
          echo "🐳 Docker Build & Scan - Component: ${{ matrix.component.name }} - Status: ${{ job.status }}"
          echo "## 🐳 Docker Build & Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "- **Component**: ${{ matrix.component.name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Dockerfile**: ${{ matrix.component.dockerfile }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Context**: ${{ matrix.component.context }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ job.status }}" == "failure" ]]; then
            echo "## ❌ Docker Build & Scan Failed" >> $GITHUB_STEP_SUMMARY
            echo "Docker build and security scan must complete successfully. Please review the errors above." >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ job.status }}" == "success" ]]; then
            echo "✅ Docker build and security scan completed successfully!" >> $GITHUB_STEP_SUMMARY
          fi
