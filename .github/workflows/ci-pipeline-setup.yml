name: Pipeline Setup

on:
  workflow_call:
    outputs:
      should_skip:
        description: 'Whether to skip the workflow execution'
        value: ${{ jobs.pipeline-setup.outputs.should_skip }}
      matrix_include:
        description: 'Dynamic test matrix configuration'
        value: ${{ jobs.pipeline-setup.outputs.matrix_include }}
      changes:
        description: 'Detected changes in components'
        value: ${{ jobs.pipeline-setup.outputs.changes }}

jobs:
  # Pipeline orchestration and duplicate detection
  pipeline-setup:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
      matrix_include: ${{ steps.matrix_setup.outputs.matrix }}
      changes: ${{ steps.changes.outputs.changes }}
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          do_not_skip: '["workflow_dispatch", "schedule"]'

      - name: Detect changed components
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            webapp:
              - 'webapp-react/**'
            application-server:
              - 'server/application-server/**'
            intelligence-service:
              - 'server/intelligence-service/**'
            webhook-ingest:
              - 'server/webhook-ingest/**'
            docs:
              - 'docs/**'
            ci:
              - '.github/workflows/**'

      - name: Setup dynamic test matrix
        id: matrix_setup
        run: |
          # Create intelligent test matrix based on changes
          echo "matrix={\"include\":[{\"name\":\"Quality Gates\",\"type\":\"quality\",\"runs_if\":\"always\",\"timeout\":12},{\"name\":\"Security Scan\",\"type\":\"security\",\"runs_if\":\"always\",\"timeout\":15}]}" >> $GITHUB_OUTPUT

      - name: Pipeline setup status report
        if: always()
        run: |
          echo "📊 Pipeline Setup - Status: ${{ job.status }}"
          echo "## 📋 Pipeline Setup Results" >> $GITHUB_STEP_SUMMARY
          echo "- **Duplicate Detection**: ${{ steps.skip_check.outputs.should_skip == 'true' && 'Skipping duplicate run' || 'Proceeding with pipeline execution' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Component Changes**: ${{ steps.changes.outputs.changes }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Test Matrix**: Dynamic matrix configured based on detected changes" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ job.status }}" == "failure" ]]; then
            echo "## ❌ Pipeline Setup Failed" >> $GITHUB_STEP_SUMMARY
            echo "Pipeline setup must complete successfully before proceeding. Please review the errors above." >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ job.status }}" == "success" ]]; then
            echo "✅ Pipeline setup completed successfully!" >> $GITHUB_STEP_SUMMARY
          fi
