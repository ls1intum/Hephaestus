name: Liquibase Migration Check

on:
  pull_request:
    types: [opened, synchronize, labeled, reopened]
    paths:
      - 'server/application-server/**'
      - '.github/workflows/liquibase-migration-check.yml'
  workflow_dispatch:

jobs:
  liquibase-check:
    name: Liquibase Migration Check
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: hephaestus
          POSTGRES_PASSWORD: root
          POSTGRES_USER: root
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          
      - name: Clear previous changelog_new.xml if it exists
        run: |
          if [ -f server/application-server/src/main/resources/db/changelog_new.xml ]; then
            rm server/application-server/src/main/resources/db/changelog_new.xml
            echo "Removed existing changelog_new.xml file"
          fi

      - name: Run Liquibase update to bring DB up to current state
        working-directory: server/application-server
        run: mvn liquibase:update

      - name: Set up JPA entity schema
        working-directory: server/application-server
        run: |
          # Create a temporary properties file for the Liquibase diff command
          cat > liquibase.properties << EOL
          driver=org.postgresql.Driver
          url=jdbc:postgresql://localhost:5432/hephaestus
          username=root
          password=root
          changeLogFile=db/master.xml
          diffChangeLogFile=src/main/resources/db/changelog_new.xml
          referenceUrl=hibernate:spring:de.tum.in.www1.hephaestus?dialect=org.hibernate.dialect.PostgreSQLDialect&hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy&hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
          referenceDriver=liquibase.ext.hibernate.database.connection.HibernateDriver
          verbose=true
          EOL

      - name: Run Liquibase diff with verbose output
        working-directory: server/application-server
        run: mvn liquibase:diff -X
          
      - name: Check for changes in the liquibase changelog
        id: check_changes
        run: |
          echo "Checking for changes in the liquibase changelog..."
          # Check if changelog_new.xml exists and is not empty (has actual changes)
          if [ -f server/application-server/src/main/resources/db/changelog_new.xml ] && [ -s server/application-server/src/main/resources/db/changelog_new.xml ]; then
            # Check if it only contains template but no actual changes
            if grep -q "<changeSet " server/application-server/src/main/resources/db/changelog_new.xml; then
              echo "Changes detected in the liquibase changelog."
              cat server/application-server/src/main/resources/db/changelog_new.xml
              echo "NO_CHANGES_DETECTED=false" >> $GITHUB_ENV
              exit 1
            else
              echo "No meaningful changes detected in the liquibase changelog."
              echo "NO_CHANGES_DETECTED=true" >> $GITHUB_ENV
            fi
          else
            echo "No changes detected - changelog file doesn't exist or is empty."
            echo "NO_CHANGES_DETECTED=true" >> $GITHUB_ENV
          fi
          
      - name: Provide guidance for failing check
        if: env.NO_CHANGES_DETECTED == 'false'
        run: |
          echo "::warning::The Liquibase migration check detected potential database schema changes."
          echo "::warning::These changes look like drop operations, which may be unexpected."
          echo "::warning::If you're not intending to drop tables, this might be a false positive due to configuration differences."
          echo "::warning::Suggestions to resolve this issue:"
          echo "::warning::1. Run 'mvn liquibase:update' followed by 'mvn liquibase:diff' locally to verify there are no changes."
          echo "::warning::2. If no changes are expected, check for configuration differences between local and CI environments."
          echo "::warning::3. If you do expect changes, generate the proper migration file and commit it."