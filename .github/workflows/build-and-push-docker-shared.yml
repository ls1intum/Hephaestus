name: Build and Push Docker Image natively
run-name: Build and Push Docker Image natively

on:
  workflow_call:
    inputs:
      image-name:
        type: string
        default: ${{ github.repository }}
        description: "The name for the docker image (Default: Repository name)"
      docker-file:
        type: string
        default: Dockerfile
        description: "The path to the Dockerfile (Default: ./Dockerfile)"
      docker-context:
        type: string
        default: .
        description: "The context for the Docker build (Default: .)"
      build-args:
        type: string
        description: "List of additional build contexts (e.g., name=path)"
        required: false
      labels:
        type: string
        description: "Label that should be appended to the image"
        required: false
      tags:
        type: string
        description: "Tags that should be appended to the image"
        required: false
      registry:
        type: string
        default: ghcr.io
        description: "The registry to push the image to (Default: ghcr.io)"
      network:
        type: string
        default: default
        description: "Networking mode for the RUN instructions during build (Default: default)"
    outputs:
      image_tag: 
        description: "The tag of the image that was built"
        value: ${{ jobs.build.outputs.image_tag }}
    
    secrets:
      registry-user:
        required: false
      registry-password:
        required: false

# Define a precise concurrency group per image name to prevent conflicts
concurrency: 
  group: docker-build-${{ inputs.image-name }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    name: Build Docker Image for ${{ inputs.image-name }}
    runs-on: blacksmith-16vcpu-ubuntu-2204
    outputs:
      image_tag: ${{ steps.output-image-tag.outputs.image_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all
  
      - name: Install Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: "network=${{ inputs.network }}"
          buildkitd-flags: "--allow-insecure-entitlement security.insecure"

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.registry-user || github.actor }}
          password: ${{ secrets.registry-password || secrets.GITHUB_TOKEN }}

      - name: Get branch or tag name
        id: get-branch-or-tag
        run: echo "BRANCH_OR_TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.image-name }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha,prefix=,format=long

      # Build multi-arch image directly with Blacksmith
      - name: Build and push multi-architecture Docker image
        id: build
        uses: useblacksmith/build-push-action@v1
        with:
          context: ${{ inputs.docker-context }}
          file: ${{ inputs.docker-file }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ${{ inputs.build-args }}
          platforms: linux/amd64,linux/arm64
          push: true
          network: ${{ inputs.network }}

      - id: output-image-tag
        run: |
          echo "image_tag=${{ steps.meta.outputs.tags }}" >> "$GITHUB_OUTPUT"