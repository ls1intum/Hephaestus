name: Tests

on:
  workflow_call:
    inputs:
      should_skip:
        description: "Whether to skip the workflow"
        required: false
        type: string
        default: "false"

env:
  # Global pipeline configuration
  MAVEN_OPTS: -Xmx2048m -XX:+UseParallelGC
  NODE_VERSION: 22
  PYTHON_VERSION: 3.13
  JAVA_VERSION: 21

jobs:
  # Intelligent test execution matrix
  tests:
    name: ${{ matrix.test-type }}
    runs-on: ubuntu-latest
    if: inputs.should_skip != 'true'
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        test-type:
          [java-unit, java-integration, java-architecture, webapp-visual]

    steps:
      - uses: actions/checkout@v4
        with:
          # Critical for TurboSnap: Ensure Chromatic can read full git history
          fetch-depth: 0

      # Advanced caching strategy
      - name: Setup advanced caches
        uses: ./.github/actions/setup-caches
        with:
          cache-type: ${{ matrix.test-type }}
          os: ${{ runner.os }}

      # Java tests with enhanced reporting
      - name: "Java ${{ matrix.test-type }} execution"
        if: startsWith(matrix.test-type, 'java-')
        run: |
          echo "🚀 Starting Java ${{ matrix.test-type }} tests"

          case "${{ matrix.test-type }}" in
            "java-unit")
              echo "🧪 Running unit tests for core business logic..."
              cd server/application-server
              mvn test -Dgroups="unit" -Dtest="!**/ArchitectureTest" -T 2C --batch-mode
              ;;
            "java-integration")
              echo "🔗 Running integration tests with database and APIs..."
              cd server/application-server
              mvn test -Dgroups="integration" -T 2C --batch-mode
              ;;
            "java-architecture")
              echo "🏗️ Validating architecture compliance and dependencies..."
              cd server/application-server
              mvn test -Dtest="**/ArchitectureTest" --batch-mode
              ;;
          esac
          echo "✅ Java ${{ matrix.test-type }} tests completed successfully"

      # Webapp tests with enhanced reporting
      - name: "Webapp ${{ matrix.test-type }} execution"
        if: startsWith(matrix.test-type, 'webapp-')
        working-directory: webapp-react
        run: |
          echo "🚀 Starting webapp ${{ matrix.test-type }} tests"

          npm ci --prefer-offline --no-audit --progress=false

          case "${{ matrix.test-type }}" in
            "webapp-visual")
              echo "🎨 Building Storybook for visual regression tests..."
              npm run build-storybook
              echo "✅ Storybook built, proceeding to Chromatic visual testing..."
              ;;
          esac

      # Advanced Chromatic visual testing with performance optimizations
      - name: "🎨 Chromatic Visual Testing"
        if: matrix.test-type == 'webapp-visual'
        id: chromatic
        uses: chromaui/action@latest
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          workingDir: webapp-react
          # TurboSnap configuration for monorepo
          onlyChanged: true
          # Performance optimizations
          zip: true
          # Branch strategy optimizations
          skip: "@(dependabot/**|renovate/**)"
          autoAcceptChanges: ${{ github.ref == 'refs/heads/main' && 'main' || '' }}
          # Quality gates - NOTE: exitOnceUploaded is incompatible with junitReport
          exitZeroOnChanges: false
          # Enhanced debugging and reporting
          diagnostics: true
          logLevel: info
          # JUnit reporting for CI integration (removes exitOnceUploaded due to incompatibility)
          junitReport: true
        env:
          # Enhanced build context for TurboSnap
          CHROMATIC_BRANCH: ${{ github.head_ref || github.ref_name }}
          CHROMATIC_SHA: ${{ github.event.pull_request.head.sha || github.sha }}

      # Enhanced visual testing reporting
      - name: "📊 Visual Testing Summary"
        if: matrix.test-type == 'webapp-visual' && always()
        run: |
          echo "## 🎨 Visual Testing Results" >> $GITHUB_STEP_SUMMARY
          echo "- **Build URL**: ${{ steps.chromatic.outputs.buildUrl }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Storybook URL**: ${{ steps.chromatic.outputs.storybookUrl }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Stories Tested**: ${{ steps.chromatic.outputs.specCount }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Components**: ${{ steps.chromatic.outputs.componentCount }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Changes Detected**: ${{ steps.chromatic.outputs.changeCount }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Snapshots Captured**: ${{ steps.chromatic.outputs.actualCaptureCount }}" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ steps.chromatic.outputs.changeCount }}" -gt "0" ]]; then
            echo "## ⚠️ Visual Changes Detected" >> $GITHUB_STEP_SUMMARY
            echo "Review changes at: ${{ steps.chromatic.outputs.buildUrl }}" >> $GITHUB_STEP_SUMMARY
            echo "If changes are intentional, accept them in the Chromatic UI." >> $GITHUB_STEP_SUMMARY
          else
            echo "## ✅ No Visual Changes" >> $GITHUB_STEP_SUMMARY
            echo "All visual tests passed! Your UI is pixel-perfect." >> $GITHUB_STEP_SUMMARY
          fi

      # Test result aggregation with enhanced reporting
      - name: Upload Java test results
        if: always() && startsWith(matrix.test-type, 'java-')
        uses: dorny/test-reporter@v2
        with:
          name: "Test Results - ${{ matrix.test-type }}"
          path: "**/target/surefire-reports/*.xml"
          reporter: java-junit
          fail-on-error: false

      # Upload Chromatic visual test results
      - name: Upload Chromatic test results
        if: always() && matrix.test-type == 'webapp-visual'
        uses: dorny/test-reporter@v2
        with:
          name: "Test Results - ${{ matrix.test-type }}"
          path: "webapp-react/chromatic-build-*.xml"
          reporter: java-junit
          fail-on-error: false

      # Enhanced error handling and reporting
      - name: Test execution status report
        if: always()
        run: |
          echo "📊 Test Execution - Status: ${{ job.status }}"
          echo "## 📋 Test Results" >> $GITHUB_STEP_SUMMARY
          echo "- **Test Type**: ${{ matrix.test-type }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ job.status }}" == "failure" ]]; then
            echo "## ❌ Test Execution Failed" >> $GITHUB_STEP_SUMMARY
            echo "Test execution failed for ${{ matrix.test-type }}. Please review the test logs above." >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ job.status }}" == "success" ]]; then
            echo "✅ Test execution completed successfully for ${{ matrix.test-type }}!" >> $GITHUB_STEP_SUMMARY
          fi
