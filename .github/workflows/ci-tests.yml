name: Tests

on:
  workflow_call:
    inputs:
      should_skip:
        description: "Whether to skip the workflow"
        required: false
        type: string
        default: "false"

jobs:
  # Intelligent test execution matrix
  tests:
    name: ${{ matrix.test-type }}
    runs-on: ubuntu-latest
    if: inputs.should_skip != 'true'
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        test-type:
          [application-server-unit, application-server-integration, application-server-architecture, webapp-visual]

    steps:
      - uses: actions/checkout@v4
        with:
          # Critical for TurboSnap: Ensure Chromatic can read full git history
          fetch-depth: 0

      # Ensure stable Node/npm and proper caching for webapp visual tests
      - name: Setup Node.js (LTS) and npm cache
        uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            webapp/package-lock.json

      # Advanced caching strategy
      - name: Setup advanced caches
        uses: ./.github/actions/setup-caches
        with:
          cache-type: ${{ matrix.test-type }}
          os: ${{ runner.os }}

      # application-server tests
      - name: "application-server ${{ matrix.test-type }} execution"
        if: startsWith(matrix.test-type, 'application-server-')
        run: |
          echo "🧪 Running application-server ${{ matrix.test-type }} tests"
          cd server/application-server
          
          # Clean previous test reports to ensure accurate reporting
          rm -rf target/surefire-reports/*

          case "${{ matrix.test-type }}" in
            "application-server-unit")
              mvn test -Dgroups="unit" -T 2C --batch-mode
              ;;
            "application-server-integration")
              mvn test -Dgroups="integration" -T 2C --batch-mode
              ;;
            "application-server-architecture")
              mvn test -Dgroups="architecture" -T 2C --batch-mode
              ;;
          esac

      # Webapp tests
      - name: "Webapp ${{ matrix.test-type }} execution"
        if: startsWith(matrix.test-type, 'webapp-')
        working-directory: webapp
        run: |
          echo "🎨 Running webapp ${{ matrix.test-type }} tests"
          # Install from repo root for workspace/hoisted optional deps
          cd ..
          rm -rf node_modules
          npm ci --workspaces --include=dev --include=optional --no-audit --progress=false
          # Optional: report Rollup native presence (warning only)
          npm ls @rollup/rollup-linux-x64-gnu || echo "⚠️ rollup native not installed yet"
          # Force-install platform binaries deterministically
          node scripts/install-platform-binaries.mjs
          cd webapp

          case "${{ matrix.test-type }}" in
            "webapp-visual")
              if ! npm run build-storybook; then
                echo "❌ Storybook build failed (retrying after clean reinstall at root to pull any missed optionals)..."
                cd ..
                rm -rf node_modules
                npm ci --workspaces --include=dev --include=optional --no-audit --progress=false
                cd webapp
                npm run build-storybook
              fi
              ;;
          esac

      # Detect if the only changed file is the webapp/package-lock.json (lockfile-only change)
      - name: Detect lockfile-only change
        if: matrix.test-type == 'webapp-visual'
        id: lock_only
        run: |
          set -euo pipefail
          BASE_BRANCH="${{ github.base_ref || 'develop' }}"
          git fetch origin "$BASE_BRANCH" --depth=1 || true
          if git rev-parse --verify origin/$BASE_BRANCH >/dev/null 2>&1; then
            CHANGED=$(git diff --name-only origin/$BASE_BRANCH...HEAD)
          else
            CHANGED=$(git diff --name-only HEAD~1..HEAD || true)
          fi
          echo "Changed files:\n$CHANGED"
          if [ -n "$CHANGED" ] && [ "$(echo "$CHANGED" | wc -l | tr -d ' ')" = "1" ] && [ "$CHANGED" = "webapp/package-lock.json" ]; then
            echo "skip_chromatic=true" >> "$GITHUB_OUTPUT"
            echo "🔐 Only lockfile changed: skipping Chromatic visual diff enforcement.";
          else
            echo "skip_chromatic=false" >> "$GITHUB_OUTPUT"
          fi

      # Chromatic visual testing
      - name: "Chromatic Visual Testing"
        if: matrix.test-type == 'webapp-visual' && steps.lock_only.outputs.skip_chromatic != 'true'
        id: chromatic
        uses: chromaui/action@latest
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          workingDir: webapp
          onlyChanged: true
          zip: true
          skip: "@(dependabot/**|renovate/**)"
          autoAcceptChanges: ${{ github.ref == 'refs/heads/main' && 'main' || '' }}
          exitZeroOnChanges: false
          logLevel: info
          junitReport: true
        env:
          CHROMATIC_BRANCH: ${{ github.head_ref || github.ref_name }}
          CHROMATIC_SHA: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: "Chromatic skipped (lockfile only)"
        if: matrix.test-type == 'webapp-visual' && steps.lock_only.outputs.skip_chromatic == 'true'
        run: echo "Chromatic run skipped because only webapp/package-lock.json changed."

      # Create Storybook status check
      - name: "Create Storybook status check"
        if: matrix.test-type == 'webapp-visual' && always() && steps.chromatic.outputs.storybookUrl
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: 'success',
              target_url: '${{ steps.chromatic.outputs.storybookUrl }}',
              description: 'Click Details to view your Storybook',
              context: 'Storybook Publish'
            });

      # Test result aggregation
      - name: Upload application-server test results
        if: always() && startsWith(matrix.test-type, 'application-server-')
        uses: dorny/test-reporter@v2
        with:
          name: "Test Results - ${{ matrix.test-type }}"
          path: "server/application-server/target/surefire-reports/TEST-*.xml"
          reporter: java-junit
          fail-on-error: false

      - name: Upload Chromatic test results
        if: always() && matrix.test-type == 'webapp-visual'
        uses: dorny/test-reporter@v2
        with:
          name: "Test Results - ${{ matrix.test-type }}"
          path: "webapp/chromatic-build-*.xml"
          reporter: java-junit
          fail-on-error: false
