name: Docker Security Scan

on:
  workflow_call:
    inputs:
      should_skip:
        description: "Whether to skip the workflow"
        required: false
        type: string
        default: "false"

jobs:
  security-scan:
    name: "${{ matrix.component.name }}-security-scan"
    runs-on: ubuntu-latest
    if: inputs.should_skip != 'true'
    timeout-minutes: 15
    env:
      TRIVY_QUIET: "true"          # suppress progress + DB noise
    strategy:
      fail-fast: false
      matrix:
        component:
          - { name: "webapp-react",         image: "ghcr.io/ls1intum/hephaestus/webapp-react" }
          - { name: "application-server",   image: "ghcr.io/ls1intum/hephaestus/application-server" }
          - { name: "intelligence-service", image: "ghcr.io/ls1intum/hephaestus/intelligence-service" }
          - { name: "webhook-ingest",       image: "ghcr.io/ls1intum/hephaestus/webhook-ingest" }

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull & scan image with Trivy
        id: trivy
        uses: aquasecurity/trivy-action@0.31.0
        with:
          image-ref: ${{ matrix.component.image }}:${{ github.sha }}
          format: "sarif"
          output: "trivy-${{ matrix.component.name }}.sarif"
          exit-code: "1"           # fail on HIGH/CRITICAL that have fixes
          ignore-unfixed: true
          severity: "CRITICAL,HIGH"
          trivyignores: ".trivyignore"

      - name: Upload SARIF to Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-${{ matrix.component.name }}.sarif"

      - name: 📋 Echo detailed findings to log
        if: always()
        run: |
          echo "### 🔍 Detailed vulnerabilities for ${{ matrix.component.name }}"
          printf '%-9s %-18s %s\n' "Severity" "RuleID" "Message"
          printf '%-9s %-18s %s\n' "--------" "------" "-------"
          # Print each HIGH/CRITICAL finding (level=="error") in aligned columns
          jq -r '.runs[].results[]
                 | select(.level=="error")
                 | [.level, .ruleId, .message.text]
                 | @tsv' trivy-${{ matrix.component.name }}.sarif \
            | while IFS=$'\t' read -r lvl id msg; do
                printf '%-9s %-18s %s\n' "$lvl" "$id" "$msg"
              done

      - name: Summarise counts in Job summary
        if: always()
        run: |
          total=$(jq '.runs[].results | length' trivy-${{ matrix.component.name }}.sarif)
          crit=$(jq '[.runs[].results[] | select(.level=="error")] | length' trivy-${{ matrix.component.name }}.sarif)
          echo "### 📊 Trivy summary – ${{ matrix.component.name }}" >> "$GITHUB_STEP_SUMMARY"
          echo "|Total (High+Critical)|Critical|High|"            >> "$GITHUB_STEP_SUMMARY"
          echo "|---|---|---|"                                     >> "$GITHUB_STEP_SUMMARY"
          echo "|$total|$crit|$((total-crit))|"                    >> "$GITHUB_STEP_SUMMARY"

      - name: Status line
        if: always()
        run: |
          echo "🔒 Scan complete for ${{ matrix.component.name }} – job status: ${{ job.status }}"
