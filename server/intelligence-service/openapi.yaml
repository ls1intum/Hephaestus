components:
  schemas:
    BadPractice:
      description: A detected bad practice in a pull request.
      properties:
        description:
          description: The description of the bad practice.
          title: Description
          type: string
        status:
          $ref: '#/components/schemas/BadPracticeStatus'
          description: The status of the bad practice.
        title:
          description: The title of the bad practice.
          title: Title
          type: string
      required:
      - title
      - description
      - status
      title: BadPractice
      type: object
    BadPracticeStatus:
      enum:
      - Good Practice
      - Fixed
      - Critical Issue
      - Normal Issue
      - Minor Issue
      - Won't Fix
      - Wrong
      title: BadPracticeStatus
      type: string
    ChatRequest:
      description: Chat request model.
      properties:
        id:
          anyOf:
          - type: string
          - type: 'null'
          title: Id
        messages:
          items:
            $ref: '#/components/schemas/UIMessage'
          title: Messages
          type: array
        metadata:
          anyOf:
          - type: object
          - type: 'null'
          title: Metadata
        user_id:
          title: User Id
          type: integer
      required:
      - messages
      title: ChatRequest
      type: object
    ChatResponse:
      anyOf:
      - $ref: '#/components/schemas/StreamTextPart'
      - $ref: '#/components/schemas/StreamErrorPart'
      - $ref: '#/components/schemas/StreamToolInputStartPart'
      - $ref: '#/components/schemas/StreamToolInputDeltaPart'
      - $ref: '#/components/schemas/StreamToolInputAvailablePart'
      - $ref: '#/components/schemas/StreamToolOutputAvailablePart'
      - $ref: '#/components/schemas/StreamToolOutputErrorPart'
      - $ref: '#/components/schemas/StreamReasoningPart'
      - $ref: '#/components/schemas/StreamReasoningFinishPart'
      - $ref: '#/components/schemas/StreamSourceUrlPart'
      - $ref: '#/components/schemas/StreamSourceDocumentPart'
      - $ref: '#/components/schemas/StreamFilePart'
      - $ref: '#/components/schemas/StreamDataPart'
      - $ref: '#/components/schemas/StreamStepStartPart'
      - $ref: '#/components/schemas/StreamStepFinishPart'
      - $ref: '#/components/schemas/StreamStartPart'
      - $ref: '#/components/schemas/StreamFinishPart'
      - $ref: '#/components/schemas/StreamMessageMetadataPart'
      description: Response model for chat streaming.
      title: StreamPart
    DataUIPart:
      description: A data part with dynamic type.
      properties:
        data:
          title: Data
          type: object
        id:
          anyOf:
          - type: string
          - type: 'null'
          title: Id
        type:
          pattern: ^data-.*
          title: Type
          type: string
      required:
      - type
      - data
      title: DataUIPart
      type: object
    DetectorRequest:
      properties:
        bad_practice_summary:
          title: Bad Practice Summary
          type: string
        bad_practices:
          items:
            $ref: '#/components/schemas/BadPractice'
          title: Bad Practices
          type: array
        description:
          title: Description
          type: string
        lifecycle_state:
          title: Lifecycle State
          type: string
        pull_request_number:
          title: Pull Request Number
          type: integer
        pull_request_template:
          title: Pull Request Template
          type: string
        repository_name:
          title: Repository Name
          type: string
        title:
          title: Title
          type: string
      required:
      - title
      - description
      - lifecycle_state
      - repository_name
      - pull_request_number
      - bad_practice_summary
      - bad_practices
      - pull_request_template
      title: DetectorRequest
      type: object
    DetectorResponse:
      properties:
        bad_practice_summary:
          title: Bad Practice Summary
          type: string
        bad_practices:
          items:
            $ref: '#/components/schemas/BadPractice'
          title: Bad Practices
          type: array
        trace_id:
          title: Trace Id
          type: string
      required:
      - bad_practice_summary
      - bad_practices
      - trace_id
      title: DetectorResponse
      type: object
    FileUIPart:
      description: A file part of a message.
      properties:
        filename:
          anyOf:
          - type: string
          - type: 'null'
          title: Filename
        mediaType:
          title: Mediatype
          type: string
        type:
          const: file
          default: file
          title: Type
          type: string
        url:
          title: Url
          type: string
      required:
      - mediaType
      - url
      title: FileUIPart
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    HealthCheck:
      description: Response model to validate and return when performing a health
        check.
      properties:
        status:
          default: OK
          title: Status
          type: string
      title: HealthCheck
      type: object
    ReasoningUIPart:
      description: A reasoning part of a message.
      properties:
        providerMetadata:
          anyOf:
          - type: object
          - type: 'null'
          title: Providermetadata
        text:
          title: Text
          type: string
        type:
          const: reasoning
          default: reasoning
          title: Type
          type: string
      required:
      - text
      title: ReasoningUIPart
      type: object
    SourceDocumentUIPart:
      description: A document source part of a message.
      properties:
        filename:
          anyOf:
          - type: string
          - type: 'null'
          title: Filename
        mediaType:
          title: Mediatype
          type: string
        providerMetadata:
          anyOf:
          - type: object
          - type: 'null'
          title: Providermetadata
        sourceId:
          title: Sourceid
          type: string
        title:
          title: Title
          type: string
        type:
          const: source-document
          default: source-document
          title: Type
          type: string
      required:
      - sourceId
      - mediaType
      - title
      title: SourceDocumentUIPart
      type: object
    SourceUrlUIPart:
      description: A URL source part of a message.
      properties:
        providerMetadata:
          anyOf:
          - type: object
          - type: 'null'
          title: Providermetadata
        sourceId:
          title: Sourceid
          type: string
        title:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
        type:
          const: source-url
          default: source-url
          title: Type
          type: string
        url:
          title: Url
          type: string
      required:
      - sourceId
      - url
      title: SourceUrlUIPart
      type: object
    StepStartUIPart:
      description: A step boundary part of a message.
      properties:
        type:
          const: step-start
          default: step-start
          title: Type
          type: string
      title: StepStartUIPart
      type: object
    StreamDataPart:
      description: Data part with dynamic type.
      properties:
        data:
          title: Data
          type: object
        id:
          anyOf:
          - type: string
          - type: 'null'
          title: Id
        type:
          pattern: ^data-.*
          title: Type
          type: string
      required:
      - type
      - data
      title: StreamDataPart
      type: object
    StreamErrorPart:
      description: Error stream part.
      properties:
        errorText:
          title: Errortext
          type: string
        type:
          const: error
          default: error
          title: Type
          type: string
      required:
      - errorText
      title: StreamErrorPart
      type: object
    StreamFilePart:
      description: File part of a message.
      properties:
        mediaType:
          title: Mediatype
          type: string
        type:
          const: file
          default: file
          title: Type
          type: string
        url:
          title: Url
          type: string
      required:
      - url
      - mediaType
      title: StreamFilePart
      type: object
    StreamFinishPart:
      description: End of stream event.
      properties:
        messageMetadata:
          anyOf:
          - type: object
          - type: 'null'
          title: Messagemetadata
        type:
          const: finish
          default: finish
          title: Type
          type: string
      title: StreamFinishPart
      type: object
    StreamMessageMetadataPart:
      description: Message metadata part.
      properties:
        messageMetadata:
          title: Messagemetadata
          type: object
        type:
          const: message-metadata
          default: message-metadata
          title: Type
          type: string
      required:
      - messageMetadata
      title: StreamMessageMetadataPart
      type: object
    StreamReasoningFinishPart:
      description: Reasoning finish event.
      properties:
        type:
          const: reasoning-part-finish
          default: reasoning-part-finish
          title: Type
          type: string
      title: StreamReasoningFinishPart
      type: object
    StreamReasoningPart:
      description: Reasoning part of a message.
      properties:
        providerMetadata:
          anyOf:
          - type: object
          - type: 'null'
          title: Providermetadata
        text:
          title: Text
          type: string
        type:
          const: reasoning
          default: reasoning
          title: Type
          type: string
      required:
      - text
      title: StreamReasoningPart
      type: object
    StreamSourceDocumentPart:
      description: Source document part of a message.
      properties:
        filename:
          anyOf:
          - type: string
          - type: 'null'
          title: Filename
        mediaType:
          title: Mediatype
          type: string
        providerMetadata:
          anyOf:
          - type: object
          - type: 'null'
          title: Providermetadata
        sourceId:
          title: Sourceid
          type: string
        title:
          title: Title
          type: string
        type:
          const: source-document
          default: source-document
          title: Type
          type: string
      required:
      - sourceId
      - mediaType
      - title
      title: StreamSourceDocumentPart
      type: object
    StreamSourceUrlPart:
      description: Source URL part of a message.
      properties:
        providerMetadata:
          anyOf:
          - type: object
          - type: 'null'
          title: Providermetadata
        sourceId:
          title: Sourceid
          type: string
        title:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
        type:
          const: source-url
          default: source-url
          title: Type
          type: string
        url:
          title: Url
          type: string
      required:
      - sourceId
      - url
      title: StreamSourceUrlPart
      type: object
    StreamStartPart:
      description: Start of stream event.
      properties:
        messageId:
          anyOf:
          - type: string
          - type: 'null'
          title: Messageid
        messageMetadata:
          anyOf:
          - type: object
          - type: 'null'
          title: Messagemetadata
        type:
          const: start
          default: start
          title: Type
          type: string
      title: StreamStartPart
      type: object
    StreamStepFinishPart:
      description: Step finish event.
      properties:
        type:
          const: finish-step
          default: finish-step
          title: Type
          type: string
      title: StreamStepFinishPart
      type: object
    StreamStepStartPart:
      description: Step start event.
      properties:
        type:
          const: start-step
          default: start-step
          title: Type
          type: string
      title: StreamStepStartPart
      type: object
    StreamTextPart:
      description: Text stream part.
      properties:
        text:
          title: Text
          type: string
        type:
          const: text
          default: text
          title: Type
          type: string
      required:
      - text
      title: StreamTextPart
      type: object
    StreamToolInputAvailablePart:
      description: Tool input available event.
      properties:
        input:
          title: Input
          type: object
        toolCallId:
          title: Toolcallid
          type: string
        toolName:
          title: Toolname
          type: string
        type:
          const: tool-input-available
          default: tool-input-available
          title: Type
          type: string
      required:
      - toolCallId
      - toolName
      - input
      title: StreamToolInputAvailablePart
      type: object
    StreamToolInputDeltaPart:
      description: Tool input delta event.
      properties:
        inputTextDelta:
          title: Inputtextdelta
          type: string
        toolCallId:
          title: Toolcallid
          type: string
        type:
          const: tool-input-delta
          default: tool-input-delta
          title: Type
          type: string
      required:
      - toolCallId
      - inputTextDelta
      title: StreamToolInputDeltaPart
      type: object
    StreamToolInputStartPart:
      description: Tool input start event.
      properties:
        toolCallId:
          title: Toolcallid
          type: string
        toolName:
          title: Toolname
          type: string
        type:
          const: tool-input-start
          default: tool-input-start
          title: Type
          type: string
      required:
      - toolCallId
      - toolName
      title: StreamToolInputStartPart
      type: object
    StreamToolOutputAvailablePart:
      description: Tool output available event.
      properties:
        output:
          title: Output
          type: object
        providerMetadata:
          anyOf:
          - type: object
          - type: 'null'
          title: Providermetadata
        toolCallId:
          title: Toolcallid
          type: string
        type:
          const: tool-output-available
          default: tool-output-available
          title: Type
          type: string
      required:
      - toolCallId
      - output
      title: StreamToolOutputAvailablePart
      type: object
    StreamToolOutputErrorPart:
      description: Tool output error event.
      properties:
        errorText:
          title: Errortext
          type: string
        toolCallId:
          title: Toolcallid
          type: string
        type:
          const: tool-output-error
          default: tool-output-error
          title: Type
          type: string
      required:
      - toolCallId
      - errorText
      title: StreamToolOutputErrorPart
      type: object
    TextUIPart:
      description: A text part of a message.
      properties:
        text:
          title: Text
          type: string
        type:
          const: text
          default: text
          title: Type
          type: string
      required:
      - text
      title: TextUIPart
      type: object
    ToolInputAvailablePart:
      description: Tool part with input available.
      properties:
        input:
          title: Input
          type: object
        state:
          const: input-available
          default: input-available
          title: State
          type: string
        toolCallId:
          title: Toolcallid
          type: string
        type:
          pattern: ^tool-.*
          title: Type
          type: string
      required:
      - type
      - toolCallId
      - input
      title: ToolInputAvailablePart
      type: object
    ToolInputStreamingPart:
      description: Tool part with input being streamed.
      properties:
        input:
          anyOf:
          - type: object
          - type: 'null'
          title: Input
        state:
          const: input-streaming
          default: input-streaming
          title: State
          type: string
        toolCallId:
          title: Toolcallid
          type: string
        type:
          pattern: ^tool-.*
          title: Type
          type: string
      required:
      - type
      - toolCallId
      title: ToolInputStreamingPart
      type: object
    ToolOutputAvailablePart:
      description: Tool part with output available.
      properties:
        input:
          title: Input
          type: object
        output:
          title: Output
          type: object
        state:
          const: output-available
          default: output-available
          title: State
          type: string
        toolCallId:
          title: Toolcallid
          type: string
        type:
          pattern: ^tool-.*
          title: Type
          type: string
      required:
      - type
      - toolCallId
      - input
      - output
      title: ToolOutputAvailablePart
      type: object
    UIMessage:
      description: Message model that matches the TypeScript interface.
      properties:
        id:
          description: A unique identifier for the message
          title: Id
          type: string
        metadata:
          anyOf:
          - type: object
          - type: 'null'
          title: Metadata
        parts:
          items:
            anyOf:
            - $ref: '#/components/schemas/TextUIPart'
            - $ref: '#/components/schemas/ReasoningUIPart'
            - $ref: '#/components/schemas/ToolInputStreamingPart'
            - $ref: '#/components/schemas/ToolInputAvailablePart'
            - $ref: '#/components/schemas/ToolOutputAvailablePart'
            - $ref: '#/components/schemas/SourceUrlUIPart'
            - $ref: '#/components/schemas/SourceDocumentUIPart'
            - $ref: '#/components/schemas/FileUIPart'
            - $ref: '#/components/schemas/DataUIPart'
            - $ref: '#/components/schemas/StepStartUIPart'
          title: Parts
          type: array
        role:
          enum:
          - system
          - user
          - assistant
          title: Role
          type: string
      required:
      - id
      - role
      - parts
      title: UIMessage
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
info:
  contact:
    email: felixtj.dietrich@tum.de
    name: Felix T.J. Dietrich
  description: API documentation for the Hephaestus Intelligence Service.
  title: Hephaestus Intelligence Service API
  version: 0.9.0-rc.5
openapi: 3.1.0
paths:
  /detector/:
    post:
      operationId: detect_detector__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectorRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectorResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Detect bad practices for given pull request.
      tags:
      - detector
  /health:
    get:
      description: "## Perform a Health Check\nEndpoint to perform a healthcheck on.\
        \ This endpoint can primarily be used Docker\nto ensure a robust container\
        \ orchestration and management is in place. Other\nservices which rely on\
        \ proper functioning of the API service will not deploy if this\nendpoint\
        \ returns any other HTTP status code except 200 (OK).\nReturns:\n    HealthCheck:\
        \ Returns a JSON response with the health status"
      operationId: get_health_health_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
          description: Return HTTP Status Code 200 (OK)
      summary: Perform a Health Check
      tags:
      - healthcheck
  /mentor/chat:
    post:
      operationId: handle_chat_mentor_chat_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
        required: true
      responses:
        '200':
          content:
            text/event-stream:
              examples:
                error:
                  value:
                    errorText: oops
                    type: error
                text:
                  value:
                    text: Hello
                    type: text
              schema:
                $ref: '#/components/schemas/ChatResponse'
          description: Event stream of chat updates.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Handle Chat
      tags:
      - mentor
