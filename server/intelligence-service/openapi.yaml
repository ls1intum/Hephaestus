components:
  schemas:
    DetectorRequest:
      properties:
        pull_requests:
          items:
            $ref: '#/components/schemas/PullRequest'
          title: Pull Requests
          type: array
        rules:
          items:
            $ref: '#/components/schemas/Rule'
          title: Rules
          type: array
      required:
      - pull_requests
      - rules
      title: DetectorRequest
      type: object
    DetectorResponse:
      properties:
        detectBadPractices:
          items:
            $ref: '#/components/schemas/PullRequestWithBadPractices'
          title: Detectbadpractices
          type: array
      required:
      - detectBadPractices
      title: DetectorResponse
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    HealthCheck:
      description: Response model to validate and return when performing a health
        check.
      properties:
        status:
          default: OK
          title: Status
          type: string
      title: HealthCheck
      type: object
    MentorRequest:
      properties:
        content:
          title: Content
          type: string
        session_id:
          title: Session Id
          type: string
      required:
      - session_id
      - content
      title: MentorRequest
      type: object
    MentorResponse:
      properties:
        content:
          title: Content
          type: string
      required:
      - content
      title: MentorResponse
      type: object
    MentorStartRequest:
      properties:
        dev_progress:
          title: Dev Progress
          type: string
        previous_session_id:
          title: Previous Session Id
          type: string
        session_id:
          title: Session Id
          type: string
      required:
      - session_id
      - previous_session_id
      - dev_progress
      title: MentorStartRequest
      type: object
    PullRequest:
      properties:
        description:
          title: Description
          type: string
        id:
          title: Id
          type: string
        title:
          title: Title
          type: string
      required:
      - id
      - title
      - description
      title: PullRequest
      type: object
    PullRequestWithBadPractices:
      properties:
        bad_practice_ids:
          items:
            type: string
          title: Bad Practice Ids
          type: array
        pull_request_id:
          title: Pull Request Id
          type: string
      required:
      - pull_request_id
      - bad_practice_ids
      title: PullRequestWithBadPractices
      type: object
    Rule:
      properties:
        bad_practice_id:
          title: Bad Practice Id
          type: string
        description:
          title: Description
          type: string
        name:
          title: Name
          type: string
      required:
      - name
      - description
      - bad_practice_id
      title: Rule
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
info:
  contact:
    email: felixtj.dietrich@tum.de
    name: Felix T.J. Dietrich
  description: API documentation for the Hephaestus Intelligence Service.
  title: Hephaestus Intelligence Service API
  version: 0.0.1
openapi: 3.1.0
paths:
  /detector/:
    post:
      operationId: detect_detector__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectorRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectorResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Detect bad practices given rules.
      tags:
      - detector
  /health:
    get:
      description: "## Perform a Health Check\nEndpoint to perform a healthcheck on.\
        \ This endpoint can primarily be used Docker\nto ensure a robust container\
        \ orchestration and management is in place. Other\nservices which rely on\
        \ proper functioning of the API service will not deploy if this\nendpoint\
        \ returns any other HTTP status code except 200 (OK).\nReturns:\n    HealthCheck:\
        \ Returns a JSON response with the health status"
      operationId: get_health_health_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
          description: Return HTTP Status Code 200 (OK)
      summary: Perform a Health Check
      tags:
      - healthcheck
  /mentor/:
    post:
      operationId: generate_mentor__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MentorRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MentorResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Continue a chat session with an LLM.
      tags:
      - mentor
  /mentor/start:
    post:
      operationId: start_mentor_start_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MentorStartRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MentorResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Start a chat session with an LLM.
      tags:
      - mentor
