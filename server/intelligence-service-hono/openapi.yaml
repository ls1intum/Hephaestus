openapi: 3.1.0
info:
  version: 0.9.0-rc.27
  title: Hephaestus Intelligence Service API
components:
  schemas:
    HealthCheck:
      type: object
      properties:
        status:
          type: string
          enum:
            - OK
          description: Health status
          example: OK
      required:
        - status
    PoemRequest:
      type: object
      properties:
        topic:
          type: string
          minLength: 1
          description: Topic of the poem
          example: coding
        style:
          type: string
          minLength: 1
          default: ""
          description: Optional poem style
          example: haiku
      required:
        - topic
    Task:
      type: object
      properties:
        id:
          type: number
          example: 1
        name:
          type: string
          minLength: 1
          example: Learn hono
        done:
          type: boolean
          default: false
          example: false
      required:
        - id
        - name
    InsertTask:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          example: Learn hono
        done:
          type: boolean
          default: false
          example: false
      required:
        - name
    PatchTask:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          example: Learn hono
        done:
          type: boolean
          default: false
          example: false
    BadPractice:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum:
            - Good Practice
            - Fixed
            - Critical Issue
            - Normal Issue
            - Minor Issue
            - Won't Fix
            - Wrong
      required:
        - title
        - description
        - status
    BadPracticeResult:
      type: object
      properties:
        bad_practice_summary:
          type: string
        bad_practices:
          type: array
          items:
            $ref: "#/components/schemas/BadPractice"
      required:
        - bad_practice_summary
        - bad_practices
    DetectorResponse:
      allOf:
        - $ref: "#/components/schemas/BadPracticeResult"
        - type: object
          properties:
            trace_id:
              type: string
          required:
            - trace_id
    DetectorRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        lifecycle_state:
          type: string
        repository_name:
          type: string
        pull_request_number:
          type: number
        bad_practice_summary:
          type: string
        bad_practices:
          type: array
          items:
            $ref: "#/components/schemas/BadPractice"
        pull_request_template:
          type: string
      required:
        - title
        - description
        - lifecycle_state
        - repository_name
        - pull_request_number
        - bad_practice_summary
        - bad_practices
        - pull_request_template
  parameters: {}
paths:
  /health:
    get:
      tags:
        - healthcheck
      summary: Perform a Health Check
      description: Endpoint to perform a healthcheck on. This endpoint can primarily
        be used by Docker to ensure robust container orchestration and
        management. Other services which rely on proper functioning of the API
        service will not deploy if this endpoint returns any other HTTP status
        code except 200 (OK).
      responses:
        "200":
          description: Return HTTP Status Code 200 (OK)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthCheck"
  /mentor/chat:
    post:
      tags:
        - mentor
      summary: Handle mentor chat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type:
                    - string
                    - "null"
                messages:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                      role:
                        type: string
                        enum:
                          - system
                          - user
                          - assistant
                      metadata:
                        type:
                          - object
                          - "null"
                        additionalProperties: {}
                      parts:
                        type: array
                        items:
                          anyOf:
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - text
                                text:
                                  type: string
                                state:
                                  type: string
                                  enum:
                                    - streaming
                                    - done
                                providerMetadata:
                                  type: object
                                  additionalProperties: {}
                              required:
                                - type
                                - text
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - reasoning
                                text:
                                  type: string
                                state:
                                  type: string
                                  enum:
                                    - streaming
                                    - done
                                providerMetadata:
                                  type: object
                                  additionalProperties: {}
                              required:
                                - type
                                - text
                            - type: object
                              properties:
                                type:
                                  type: string
                                  pattern: ^tool-.+
                                toolCallId:
                                  type: string
                                providerMetadata:
                                  type: object
                                  additionalProperties: {}
                                state:
                                  type: string
                                  enum:
                                    - input-streaming
                                input:
                                  type: object
                                  additionalProperties: {}
                                providerExecuted:
                                  type: boolean
                              required:
                                - type
                                - toolCallId
                                - state
                            - type: object
                              properties:
                                type:
                                  type: string
                                  pattern: ^tool-.+
                                toolCallId:
                                  type: string
                                providerMetadata:
                                  type: object
                                  additionalProperties: {}
                                state:
                                  type: string
                                  enum:
                                    - input-available
                                input:
                                  type: object
                                  additionalProperties: {}
                                providerExecuted:
                                  type: boolean
                                callProviderMetadata:
                                  type: object
                                  additionalProperties: {}
                              required:
                                - type
                                - toolCallId
                                - state
                                - input
                            - type: object
                              properties:
                                type:
                                  type: string
                                  pattern: ^tool-.+
                                toolCallId:
                                  type: string
                                providerMetadata:
                                  type: object
                                  additionalProperties: {}
                                state:
                                  type: string
                                  enum:
                                    - output-available
                                input:
                                  type: object
                                  additionalProperties: {}
                                output:
                                  type: object
                                  additionalProperties: {}
                                providerExecuted:
                                  type: boolean
                                callProviderMetadata:
                                  type: object
                                  additionalProperties: {}
                              required:
                                - type
                                - toolCallId
                                - state
                            - type: object
                              properties:
                                type:
                                  type: string
                                  pattern: ^tool-.+
                                toolCallId:
                                  type: string
                                providerMetadata:
                                  type: object
                                  additionalProperties: {}
                                state:
                                  type: string
                                  enum:
                                    - output-error
                                input:
                                  type: object
                                  additionalProperties: {}
                                errorText:
                                  type: string
                                providerExecuted:
                                  type: boolean
                                callProviderMetadata:
                                  type: object
                                  additionalProperties: {}
                              required:
                                - type
                                - toolCallId
                                - state
                                - errorText
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - source-url
                                sourceId:
                                  type: string
                                url:
                                  type: string
                                title:
                                  type: string
                                providerMetadata:
                                  type: object
                                  additionalProperties: {}
                              required:
                                - type
                                - sourceId
                                - url
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - source-document
                                sourceId:
                                  type: string
                                mediaType:
                                  type: string
                                title:
                                  type: string
                                filename:
                                  type: string
                                providerMetadata:
                                  type: object
                                  additionalProperties: {}
                              required:
                                - type
                                - sourceId
                                - mediaType
                                - title
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - file
                                mediaType:
                                  type: string
                                filename:
                                  type: string
                                url:
                                  type: string
                                providerMetadata:
                                  type: object
                                  additionalProperties: {}
                              required:
                                - type
                                - mediaType
                                - url
                            - type: object
                              properties:
                                type:
                                  type: string
                                  pattern: ^data-.+
                                id:
                                  type: string
                                data: {}
                                providerMetadata:
                                  type: object
                                  additionalProperties: {}
                              required:
                                - type
                            - type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - step-start
                              required:
                                - type
                    required:
                      - id
                      - role
                      - parts
                metadata: {}
                user_id:
                  type: number
              required:
                - messages
                - user_id
      responses:
        "200":
          description: Event stream of chat updates.
          content:
            text/event-stream:
              schema:
                anyOf:
                  - type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - text-start
                      id:
                        type: string
                      providerMetadata:
                        type: object
                        additionalProperties: {}
                    required:
                      - type
                      - id
                  - type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - text-delta
                      id:
                        type: string
                      delta:
                        type: string
                      providerMetadata:
                        type: object
                        additionalProperties: {}
                    required:
                      - type
                      - id
                      - delta
                  - type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - text-end
                      id:
                        type: string
                      providerMetadata:
                        type: object
                        additionalProperties: {}
                    required:
                      - type
                      - id
                  - type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - error
                      errorText:
                        type: string
                    required:
                      - type
                      - errorText
                  - type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - tool-input-start
                      toolCallId:
                        type: string
                      toolName:
                        type: string
                      providerExecuted:
                        type: boolean
                      dynamic:
                        type: boolean
                    required:
                      - type
                      - toolCallId
                      - toolName
                  - type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - tool-input-delta
                      toolCallId:
                        type: string
                      inputTextDelta:
                        type: string
                    required:
                      - type
                      - toolCallId
                      - inputTextDelta
                  - type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - tool-input-available
                      toolCallId:
                        type: string
                      toolName:
                        type: string
                      input: {}
                      providerExecuted:
                        type: boolean
                      providerMetadata:
                        type: object
                        additionalProperties: {}
                      dynamic:
                        type: boolean
                    required:
                      - type
                      - toolCallId
                      - toolName
                  - type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - tool-input-error
                      toolCallId:
                        type: string
                      toolName:
                        type: string
                      input: {}
                      errorText:
                        type: string
                      providerExecuted:
                        type: boolean
                      providerMetadata:
                        type: object
                        additionalProperties: {}
                      dynamic:
                        type: boolean
                    required:
                      - type
                      - toolCallId
                      - toolName
                      - errorText
                  - type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - tool-output-available
                      toolCallId:
                        type: string
                      output: {}
                      providerExecuted:
                        type: boolean
                      dynamic:
                        type: boolean
                    required:
                      - type
                      - toolCallId
                  - type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - tool-output-error
                      toolCallId:
                        type: string
                      errorText:
                        type: string
                      providerExecuted:
                        type: boolean
                      dynamic:
                        type: boolean
                    required:
                      - type
                      - toolCallId
                      - errorText
                  - type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - reasoning-start
                      id:
                        type: string
                      providerMetadata:
                        type: object
                        additionalProperties: {}
                    required:
                      - type
                      - id
                  - type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - reasoning-delta
                      id:
                        type: string
                      delta:
                        type: string
                      providerMetadata:
                        type: object
                        additionalProperties: {}
                    required:
                      - type
                      - id
                      - delta
                  - type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - reasoning-end
                      id:
                        type: string
                      providerMetadata:
                        type: object
                        additionalProperties: {}
                    required:
                      - type
                      - id
                  - type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - source-url
                      sourceId:
                        type: string
                      url:
                        type: string
                      title:
                        type: string
                      providerMetadata:
                        type: object
                        additionalProperties: {}
                    required:
                      - type
                      - sourceId
                      - url
                  - type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - source-document
                      sourceId:
                        type: string
                      mediaType:
                        type: string
                      title:
                        type: string
                      filename:
                        type: string
                      providerMetadata:
                        type: object
                        additionalProperties: {}
                    required:
                      - type
                      - sourceId
                      - mediaType
                      - title
                  - type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - file
                      url:
                        type: string
                      mediaType:
                        type: string
                      providerMetadata:
                        type: object
                        additionalProperties: {}
                    required:
                      - type
                      - url
                      - mediaType
                  - type: object
                    properties:
                      type:
                        type: string
                        pattern: ^data-.+
                      id:
                        type: string
                      data: {}
                      transient:
                        type: boolean
                    required:
                      - type
                  - type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - start-step
                    required:
                      - type
                  - type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - finish-step
                    required:
                      - type
                  - type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - start
                      messageId:
                        type: string
                      messageMetadata: {}
                    required:
                      - type
                  - type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - finish
                      messageMetadata: {}
                    required:
                      - type
                  - type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - message-metadata
                      messageMetadata: {}
                    required:
                      - type
                  - type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - abort
                    required:
                      - type
  /poem:
    post:
      tags:
        - Poem
      summary: Generate a poem
      description: Generates a short poem using the configured default AI model. The
        response is streamed as plain text. If Langfuse is configured, telemetry
        and prompt linking are enabled.
      requestBody:
        description: Poem generation input
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PoemRequest"
      responses:
        "200":
          description: Streamed poem text
          content:
            text/plain:
              schema:
                type: string
                description: Streamed poem text
                example: Code flows\nlike rivers of logic\ninto the dawn.
  /tasks:
    get:
      tags: &a1
        - Tasks
      responses:
        "200":
          description: The list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"
    post:
      tags: *a1
      requestBody:
        description: The task to create
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InsertTask"
      responses:
        "200":
          description: The created task
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "422":
          description: The validation error(s)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      issues:
                        type: array
                        items:
                          type: object
                          properties:
                            code:
                              type: string
                            path:
                              type: array
                              items:
                                anyOf:
                                  - type: string
                                  - type: number
                            message:
                              type: string
                          required:
                            - code
                            - path
                      name:
                        type: string
                    required:
                      - issues
                      - name
                    example:
                      name: ZodError
                      issues:
                        - code: invalid_type
                          path:
                            - name
                          message: "Invalid input: expected string, received undefined"
                required:
                  - success
                  - error
  /tasks/{id}:
    get:
      tags: *a1
      parameters:
        - schema:
            type:
              - number
              - "null"
            required: &a2
              - id
            example: 42
          required: true
          name: id
          in: path
      responses:
        "200":
          description: The requested task
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "404":
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
                example: &a3
                  message: Not Found
        "422":
          description: Invalid id error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      issues:
                        type: array
                        items:
                          type: object
                          properties:
                            code:
                              type: string
                            path:
                              type: array
                              items:
                                anyOf:
                                  - type: string
                                  - type: number
                            message:
                              type: string
                          required:
                            - code
                            - path
                      name:
                        type: string
                    required:
                      - issues
                      - name
                    example:
                      name: ZodError
                      issues:
                        - code: invalid_type
                          path:
                            - id
                          message: "Invalid input: expected number, received NaN"
                required:
                  - success
                  - error
    patch:
      tags: *a1
      parameters:
        - schema:
            type:
              - number
              - "null"
            required: *a2
            example: 42
          required: true
          name: id
          in: path
      requestBody:
        description: The task updates
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchTask"
      responses:
        "200":
          description: The updated task
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "404":
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
                example: *a3
        "422":
          description: The validation error(s)
          content:
            application/json:
              schema:
                anyOf:
                  - type: object
                    properties:
                      success:
                        type: boolean
                        example: false
                      error:
                        type: object
                        properties:
                          issues:
                            type: array
                            items:
                              type: object
                              properties:
                                code:
                                  type: string
                                path:
                                  type: array
                                  items:
                                    anyOf:
                                      - type: string
                                      - type: number
                                message:
                                  type: string
                              required:
                                - code
                                - path
                          name:
                            type: string
                        required:
                          - issues
                          - name
                        example:
                          name: ZodError
                          issues:
                            - code: invalid_type
                              path:
                                - fieldName
                              message: Expected string, received undefined
                    required:
                      - success
                      - error
                  - type: object
                    properties:
                      success:
                        type: boolean
                        example: false
                      error:
                        type: object
                        properties:
                          issues:
                            type: array
                            items:
                              type: object
                              properties:
                                code:
                                  type: string
                                path:
                                  type: array
                                  items:
                                    anyOf:
                                      - type: string
                                      - type: number
                                message:
                                  type: string
                              required:
                                - code
                                - path
                          name:
                            type: string
                        required:
                          - issues
                          - name
                        example:
                          name: ZodError
                          issues:
                            - code: invalid_type
                              path:
                                - id
                              message: "Invalid input: expected number, received NaN"
                    required:
                      - success
                      - error
    delete:
      tags: *a1
      parameters:
        - schema:
            type:
              - number
              - "null"
            required: *a2
            example: 42
          required: true
          name: id
          in: path
      responses:
        "204":
          description: Task deleted
        "404":
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
                example: *a3
        "422":
          description: Invalid id error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      issues:
                        type: array
                        items:
                          type: object
                          properties:
                            code:
                              type: string
                            path:
                              type: array
                              items:
                                anyOf:
                                  - type: string
                                  - type: number
                            message:
                              type: string
                          required:
                            - code
                            - path
                      name:
                        type: string
                    required:
                      - issues
                      - name
                    example:
                      name: ZodError
                      issues:
                        - code: invalid_type
                          path:
                            - id
                          message: "Invalid input: expected number, received NaN"
                required:
                  - success
                  - error
  /detector:
    post:
      tags:
        - Detector
      summary: Detect bad practices for a pull request
      requestBody:
        description: Detector request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DetectorRequest"
      responses:
        "200":
          description: Detection response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DetectorResponse"
webhooks: {}
