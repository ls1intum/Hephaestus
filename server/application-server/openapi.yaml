openapi: 3.0.1
info:
  title: Hephaestus API
  description: API documentation for the Hephaestus application server.
  contact:
    name: Felix T.J. Dietrich
    email: felixtj.dietrich@tum.de
  license:
    name: MIT License
    url: https://github.com/ls1intum/Hephaestus/blob/develop/LICENSE
  version: 0.0.1
servers:
- url: /
  description: Default Server URL
paths:
  /user/{login}/profile:
    get:
      tags:
      - user
      operationId: getUserProfile
      parameters:
      - name: login
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfileDTO"
  /pullrequest/{id}:
    get:
      tags:
      - pull-request
      operationId: getPullRequest
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PullRequest"
  /pullrequest/author/{login}:
    get:
      tags:
      - pull-request
      operationId: getPullRequestsByAuthor
      parameters:
      - name: login
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: "#/components/schemas/PullRequest"
  /meta:
    get:
      tags:
      - meta
      operationId: getMetaData
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetaDataDTO"
  /leaderboard:
    get:
      tags:
      - leaderboard
      operationId: getLeaderboard
      parameters:
      - name: after
        in: query
        required: false
        schema:
          type: string
          format: date
      - name: before
        in: query
        required: false
        schema:
          type: string
          format: date
      - name: repository
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LeaderboardEntryDTO"
  /admin:
    get:
      tags:
      - admin
      operationId: admin
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /admin/me:
    get:
      tags:
      - admin
      operationId: getGretting
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthUserInfoDTO"
components:
  schemas:
    LabelInfoDTO:
      required:
      - color
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        color:
          type: string
    PullRequestBaseInfoDTO:
      required:
      - htmlUrl
      - id
      - number
      - state
      - title
      type: object
      properties:
        id:
          type: integer
          format: int64
        number:
          type: integer
          format: int32
        title:
          type: string
        state:
          type: string
          enum:
          - OPEN
          - CLOSED
        repository:
          $ref: "#/components/schemas/RepositoryInfoDTO"
        htmlUrl:
          type: string
    PullRequestInfoDTO:
      required:
      - additions
      - commentsCount
      - deletions
      - htmlUrl
      - id
      - number
      - state
      - title
      type: object
      properties:
        id:
          type: integer
          format: int64
        number:
          type: integer
          format: int32
        title:
          type: string
        state:
          type: string
          enum:
          - OPEN
          - CLOSED
        commentsCount:
          type: integer
          format: int32
        author:
          $ref: "#/components/schemas/UserInfoDTO"
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelInfoDTO"
        assignees:
          type: array
          items:
            $ref: "#/components/schemas/UserInfoDTO"
        repository:
          $ref: "#/components/schemas/RepositoryInfoDTO"
        additions:
          type: integer
          format: int32
        deletions:
          type: integer
          format: int32
        mergedAt:
          type: string
          format: date-time
        closedAt:
          type: string
          format: date-time
        htmlUrl:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    PullRequestReviewInfoDTO:
      required:
      - codeComments
      - htmlUrl
      - id
      - isDismissed
      - state
      type: object
      properties:
        id:
          type: integer
          format: int64
        isDismissed:
          type: boolean
        state:
          type: string
          enum:
          - COMMENTED
          - APPROVED
          - CHANGES_REQUESTED
          - UNKNOWN
        codeComments:
          type: integer
          format: int32
        author:
          $ref: "#/components/schemas/UserInfoDTO"
        pullRequest:
          $ref: "#/components/schemas/PullRequestBaseInfoDTO"
        htmlUrl:
          type: string
        submittedAt:
          type: string
          format: date-time
    RepositoryInfoDTO:
      required:
      - htmlUrl
      - id
      - name
      - nameWithOwner
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        nameWithOwner:
          type: string
        description:
          type: string
        htmlUrl:
          type: string
    UserInfoDTO:
      required:
      - avatarUrl
      - htmlUrl
      - id
      - login
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        login:
          type: string
        avatarUrl:
          type: string
        name:
          type: string
        htmlUrl:
          type: string
    UserProfileDTO:
      required:
      - contributedRepositories
      - firstContribution
      - userInfo
      type: object
      properties:
        userInfo:
          $ref: "#/components/schemas/UserInfoDTO"
        firstContribution:
          type: string
          format: date-time
        contributedRepositories:
          type: array
          items:
            $ref: "#/components/schemas/RepositoryInfoDTO"
        reviewActivity:
          type: array
          items:
            $ref: "#/components/schemas/PullRequestReviewInfoDTO"
        openPullRequests:
          type: array
          items:
            $ref: "#/components/schemas/PullRequestInfoDTO"
    Issue:
      required:
      - htmlUrl
      - state
      - title
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        number:
          type: integer
          format: int32
        state:
          type: string
          enum:
          - OPEN
          - CLOSED
        title:
          type: string
        body:
          type: string
        htmlUrl:
          type: string
        closedAt:
          type: string
          format: date-time
        commentsCount:
          type: integer
          format: int32
        author:
          $ref: "#/components/schemas/User"
        labels:
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/Label"
        assignees:
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/User"
        milestone:
          $ref: "#/components/schemas/Milestone"
        repository:
          $ref: "#/components/schemas/Repository"
        comments:
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/IssueComment"
        locked:
          type: boolean
        pullRequest:
          type: boolean
    IssueComment:
      required:
      - authorAssociation
      - body
      - htmlUrl
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        body:
          type: string
        htmlUrl:
          type: string
        authorAssociation:
          type: string
          enum:
          - COLLABORATOR
          - CONTRIBUTOR
          - FIRST_TIMER
          - FIRST_TIME_CONTRIBUTOR
          - MANNEQUIN
          - MEMBER
          - NONE
          - OWNER
        author:
          $ref: "#/components/schemas/User"
        issue:
          $ref: "#/components/schemas/Issue"
    Label:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        color:
          type: string
        issues:
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/Issue"
        repository:
          $ref: "#/components/schemas/Repository"
    Milestone:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        number:
          type: integer
          format: int32
        state:
          type: string
          enum:
          - OPEN
          - CLOSED
        htmlUrl:
          type: string
        title:
          type: string
        description:
          type: string
        closedAt:
          type: string
          format: date-time
        dueOn:
          type: string
          format: date-time
        creator:
          $ref: "#/components/schemas/User"
        issues:
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/Issue"
        repository:
          $ref: "#/components/schemas/Repository"
    PullRequest:
      required:
      - htmlUrl
      - state
      - title
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        number:
          type: integer
          format: int32
        state:
          type: string
          enum:
          - OPEN
          - CLOSED
        title:
          type: string
        body:
          type: string
        htmlUrl:
          type: string
        closedAt:
          type: string
          format: date-time
        commentsCount:
          type: integer
          format: int32
        author:
          $ref: "#/components/schemas/User"
        labels:
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/Label"
        assignees:
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/User"
        milestone:
          $ref: "#/components/schemas/Milestone"
        repository:
          $ref: "#/components/schemas/Repository"
        comments:
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/IssueComment"
        mergedAt:
          type: string
          format: date-time
        mergeCommitSha:
          type: string
        isMergeable:
          type: boolean
        mergeableState:
          type: string
        maintainerCanModify:
          type: boolean
        commits:
          type: integer
          format: int32
        additions:
          type: integer
          format: int32
        deletions:
          type: integer
          format: int32
        changedFiles:
          type: integer
          format: int32
        mergedBy:
          $ref: "#/components/schemas/User"
        requestedReviewers:
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/User"
        reviews:
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/PullRequestReview"
        reviewComments:
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/PullRequestReviewComment"
        merged:
          type: boolean
        pullRequest:
          type: boolean
        draft:
          type: boolean
        locked:
          type: boolean
    PullRequestReview:
      required:
      - htmlUrl
      - state
      - submittedAt
      type: object
      properties:
        id:
          type: integer
          format: int64
        body:
          type: string
        state:
          type: string
          enum:
          - COMMENTED
          - APPROVED
          - CHANGES_REQUESTED
          - UNKNOWN
        htmlUrl:
          type: string
        submittedAt:
          type: string
          format: date-time
        commitId:
          type: string
        author:
          $ref: "#/components/schemas/User"
        pullRequest:
          $ref: "#/components/schemas/PullRequest"
        comments:
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/PullRequestReviewComment"
        dismissed:
          type: boolean
    PullRequestReviewComment:
      required:
      - authorAssociation
      - body
      - commitId
      - diffHunk
      - htmlUrl
      - originalCommitId
      - path
      - side
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        diffHunk:
          type: string
        path:
          type: string
        commitId:
          type: string
        originalCommitId:
          type: string
        body:
          type: string
        htmlUrl:
          type: string
        authorAssociation:
          type: string
          enum:
          - COLLABORATOR
          - CONTRIBUTOR
          - FIRST_TIMER
          - FIRST_TIME_CONTRIBUTOR
          - MANNEQUIN
          - MEMBER
          - NONE
          - OWNER
        startLine:
          type: integer
          format: int32
        originalStartLine:
          type: integer
          format: int32
        startSide:
          type: string
          enum:
          - LEFT
          - RIGHT
          - UNKNOWN
        line:
          type: integer
          format: int32
        originalLine:
          type: integer
          format: int32
        side:
          type: string
          enum:
          - LEFT
          - RIGHT
          - UNKNOWN
        position:
          type: integer
          format: int32
        originalPosition:
          type: integer
          format: int32
        author:
          $ref: "#/components/schemas/User"
        review:
          $ref: "#/components/schemas/PullRequestReview"
        pullRequest:
          $ref: "#/components/schemas/PullRequest"
    Repository:
      required:
      - defaultBranch
      - htmlUrl
      - name
      - nameWithOwner
      - pushedAt
      - visibility
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        name:
          type: string
        nameWithOwner:
          type: string
        htmlUrl:
          type: string
        description:
          type: string
        homepage:
          type: string
        pushedAt:
          type: string
          format: date-time
        visibility:
          type: string
          enum:
          - PUBLIC
          - PRIVATE
          - INTERNAL
          - UNKNOWN
        stargazersCount:
          type: integer
          format: int32
        watchersCount:
          type: integer
          format: int32
        defaultBranch:
          type: string
        hasIssues:
          type: boolean
        hasProjects:
          type: boolean
        hasWiki:
          type: boolean
        issues:
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/Issue"
        labels:
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/Label"
        milestones:
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/Milestone"
        disabled:
          type: boolean
        private:
          type: boolean
        archived:
          type: boolean
    User:
      required:
      - avatarUrl
      - htmlUrl
      - login
      - name
      - type
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        login:
          type: string
        avatarUrl:
          type: string
        description:
          type: string
        name:
          type: string
        company:
          type: string
        blog:
          type: string
        location:
          type: string
        email:
          type: string
        htmlUrl:
          type: string
        type:
          type: string
          enum:
          - USER
          - ORGANIZATION
          - BOT
        followers:
          type: integer
          format: int32
        following:
          type: integer
          format: int32
        createdIssues:
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/Issue"
        assignedIssues:
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/Issue"
        issueComments:
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/IssueComment"
        mergedPullRequests:
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/PullRequest"
        requestedPullRequestReviews:
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/PullRequest"
        reviews:
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/PullRequestReview"
        reviewComments:
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/PullRequestReviewComment"
    MetaDataDTO:
      type: object
      properties:
        repositoriesToMonitor:
          type: array
          items:
            type: string
    LeaderboardEntryDTO:
      required:
      - numberOfApprovals
      - numberOfChangeRequests
      - numberOfCodeComments
      - numberOfComments
      - numberOfReviewedPRs
      - numberOfUnknowns
      - rank
      - score
      - user
      type: object
      properties:
        rank:
          type: integer
          format: int32
        score:
          type: integer
          format: int32
        user:
          $ref: "#/components/schemas/UserInfoDTO"
        numberOfReviewedPRs:
          type: integer
          format: int32
        numberOfApprovals:
          type: integer
          format: int32
        numberOfChangeRequests:
          type: integer
          format: int32
        numberOfComments:
          type: integer
          format: int32
        numberOfUnknowns:
          type: integer
          format: int32
        numberOfCodeComments:
          type: integer
          format: int32
    AuthUserInfoDTO:
      type: object
      properties:
        name:
          type: string
        roles:
          type: array
          items:
            type: string
