/*
 * Hephaestus Intelligence Service API
 * API documentation for the Hephaestus Intelligence Service.
 *
 * The version of the OpenAPI document: 0.9.0-rc.18
 * Contact: felixtj.dietrich@tum.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.in.www1.hephaestus.intelligenceservice.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.tum.in.www1.hephaestus.intelligenceservice.model.StreamDataPart;
import de.tum.in.www1.hephaestus.intelligenceservice.model.StreamErrorPart;
import de.tum.in.www1.hephaestus.intelligenceservice.model.StreamFilePart;
import de.tum.in.www1.hephaestus.intelligenceservice.model.StreamFinishPart;
import de.tum.in.www1.hephaestus.intelligenceservice.model.StreamMessageMetadataPart;
import de.tum.in.www1.hephaestus.intelligenceservice.model.StreamReasoningDeltaPart;
import de.tum.in.www1.hephaestus.intelligenceservice.model.StreamReasoningEndPart;
import de.tum.in.www1.hephaestus.intelligenceservice.model.StreamReasoningStartPart;
import de.tum.in.www1.hephaestus.intelligenceservice.model.StreamSourceDocumentPart;
import de.tum.in.www1.hephaestus.intelligenceservice.model.StreamSourceUrlPart;
import de.tum.in.www1.hephaestus.intelligenceservice.model.StreamStartPart;
import de.tum.in.www1.hephaestus.intelligenceservice.model.StreamStepFinishPart;
import de.tum.in.www1.hephaestus.intelligenceservice.model.StreamStepStartPart;
import de.tum.in.www1.hephaestus.intelligenceservice.model.StreamTextDeltaPart;
import de.tum.in.www1.hephaestus.intelligenceservice.model.StreamTextEndPart;
import de.tum.in.www1.hephaestus.intelligenceservice.model.StreamTextStartPart;
import de.tum.in.www1.hephaestus.intelligenceservice.model.StreamToolInputAvailablePart;
import de.tum.in.www1.hephaestus.intelligenceservice.model.StreamToolInputDeltaPart;
import de.tum.in.www1.hephaestus.intelligenceservice.model.StreamToolInputErrorPart;
import de.tum.in.www1.hephaestus.intelligenceservice.model.StreamToolInputStartPart;
import de.tum.in.www1.hephaestus.intelligenceservice.model.StreamToolOutputAvailablePart;
import de.tum.in.www1.hephaestus.intelligenceservice.model.StreamToolOutputErrorPart;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import org.hibernate.validator.constraints.*;

/**
 * Response model for chat streaming.
 */
@JsonPropertyOrder({
  ChatResponse.JSON_PROPERTY_ID,
  ChatResponse.JSON_PROPERTY_PROVIDER_METADATA,
  ChatResponse.JSON_PROPERTY_TYPE,
  ChatResponse.JSON_PROPERTY_DELTA,
  ChatResponse.JSON_PROPERTY_ERROR_TEXT,
  ChatResponse.JSON_PROPERTY_DYNAMIC,
  ChatResponse.JSON_PROPERTY_PROVIDER_EXECUTED,
  ChatResponse.JSON_PROPERTY_TOOL_CALL_ID,
  ChatResponse.JSON_PROPERTY_TOOL_NAME,
  ChatResponse.JSON_PROPERTY_INPUT_TEXT_DELTA,
  ChatResponse.JSON_PROPERTY_INPUT,
  ChatResponse.JSON_PROPERTY_OUTPUT,
  ChatResponse.JSON_PROPERTY_SOURCE_ID,
  ChatResponse.JSON_PROPERTY_TITLE,
  ChatResponse.JSON_PROPERTY_URL,
  ChatResponse.JSON_PROPERTY_FILENAME,
  ChatResponse.JSON_PROPERTY_MEDIA_TYPE,
  ChatResponse.JSON_PROPERTY_DATA,
  ChatResponse.JSON_PROPERTY_TRANSIENT,
  ChatResponse.JSON_PROPERTY_MESSAGE_ID,
  ChatResponse.JSON_PROPERTY_MESSAGE_METADATA
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.7.0")
public class ChatResponse {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_PROVIDER_METADATA = "providerMetadata";
  private Object providerMetadata;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type = "message-metadata";

  public static final String JSON_PROPERTY_DELTA = "delta";
  private String delta;

  public static final String JSON_PROPERTY_ERROR_TEXT = "errorText";
  private String errorText;

  public static final String JSON_PROPERTY_DYNAMIC = "dynamic";
  private Boolean dynamic;

  public static final String JSON_PROPERTY_PROVIDER_EXECUTED = "providerExecuted";
  private Boolean providerExecuted;

  public static final String JSON_PROPERTY_TOOL_CALL_ID = "toolCallId";
  private String toolCallId;

  public static final String JSON_PROPERTY_TOOL_NAME = "toolName";
  private String toolName;

  public static final String JSON_PROPERTY_INPUT_TEXT_DELTA = "inputTextDelta";
  private String inputTextDelta;

  public static final String JSON_PROPERTY_INPUT = "input";
  private Object input = null;

  public static final String JSON_PROPERTY_OUTPUT = "output";
  private Object output;

  public static final String JSON_PROPERTY_SOURCE_ID = "sourceId";
  private String sourceId;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_URL = "url";
  private String url;

  public static final String JSON_PROPERTY_FILENAME = "filename";
  private String filename;

  public static final String JSON_PROPERTY_MEDIA_TYPE = "mediaType";
  private String mediaType;

  public static final String JSON_PROPERTY_DATA = "data";
  private Object data = null;

  public static final String JSON_PROPERTY_TRANSIENT = "transient";
  private Boolean _transient;

  public static final String JSON_PROPERTY_MESSAGE_ID = "messageId";
  private String messageId;

  public static final String JSON_PROPERTY_MESSAGE_METADATA = "messageMetadata";
  private Object messageMetadata;

  public ChatResponse() {
  }

  public ChatResponse id(String id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }

  public ChatResponse providerMetadata(Object providerMetadata) {
    
    this.providerMetadata = providerMetadata;
    return this;
  }

  /**
   * Get providerMetadata
   * @return providerMetadata
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROVIDER_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getProviderMetadata() {
    return providerMetadata;
  }


  @JsonProperty(JSON_PROPERTY_PROVIDER_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProviderMetadata(Object providerMetadata) {
    this.providerMetadata = providerMetadata;
  }

  public ChatResponse type(String type) {
    
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(String type) {
    this.type = type;
  }

  public ChatResponse delta(String delta) {
    
    this.delta = delta;
    return this;
  }

  /**
   * Get delta
   * @return delta
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DELTA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDelta() {
    return delta;
  }


  @JsonProperty(JSON_PROPERTY_DELTA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDelta(String delta) {
    this.delta = delta;
  }

  public ChatResponse errorText(String errorText) {
    
    this.errorText = errorText;
    return this;
  }

  /**
   * Get errorText
   * @return errorText
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ERROR_TEXT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getErrorText() {
    return errorText;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_TEXT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setErrorText(String errorText) {
    this.errorText = errorText;
  }

  public ChatResponse dynamic(Boolean dynamic) {
    
    this.dynamic = dynamic;
    return this;
  }

  /**
   * Get dynamic
   * @return dynamic
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DYNAMIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDynamic() {
    return dynamic;
  }


  @JsonProperty(JSON_PROPERTY_DYNAMIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDynamic(Boolean dynamic) {
    this.dynamic = dynamic;
  }

  public ChatResponse providerExecuted(Boolean providerExecuted) {
    
    this.providerExecuted = providerExecuted;
    return this;
  }

  /**
   * Get providerExecuted
   * @return providerExecuted
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROVIDER_EXECUTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getProviderExecuted() {
    return providerExecuted;
  }


  @JsonProperty(JSON_PROPERTY_PROVIDER_EXECUTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProviderExecuted(Boolean providerExecuted) {
    this.providerExecuted = providerExecuted;
  }

  public ChatResponse toolCallId(String toolCallId) {
    
    this.toolCallId = toolCallId;
    return this;
  }

  /**
   * Get toolCallId
   * @return toolCallId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOOL_CALL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getToolCallId() {
    return toolCallId;
  }


  @JsonProperty(JSON_PROPERTY_TOOL_CALL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setToolCallId(String toolCallId) {
    this.toolCallId = toolCallId;
  }

  public ChatResponse toolName(String toolName) {
    
    this.toolName = toolName;
    return this;
  }

  /**
   * Get toolName
   * @return toolName
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOOL_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getToolName() {
    return toolName;
  }


  @JsonProperty(JSON_PROPERTY_TOOL_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setToolName(String toolName) {
    this.toolName = toolName;
  }

  public ChatResponse inputTextDelta(String inputTextDelta) {
    
    this.inputTextDelta = inputTextDelta;
    return this;
  }

  /**
   * Get inputTextDelta
   * @return inputTextDelta
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INPUT_TEXT_DELTA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getInputTextDelta() {
    return inputTextDelta;
  }


  @JsonProperty(JSON_PROPERTY_INPUT_TEXT_DELTA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInputTextDelta(String inputTextDelta) {
    this.inputTextDelta = inputTextDelta;
  }

  public ChatResponse input(Object input) {
    
    this.input = input;
    return this;
  }

  /**
   * Get input
   * @return input
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INPUT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getInput() {
    return input;
  }


  @JsonProperty(JSON_PROPERTY_INPUT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInput(Object input) {
    this.input = input;
  }

  public ChatResponse output(Object output) {
    
    this.output = output;
    return this;
  }

  /**
   * Get output
   * @return output
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OUTPUT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getOutput() {
    return output;
  }


  @JsonProperty(JSON_PROPERTY_OUTPUT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOutput(Object output) {
    this.output = output;
  }

  public ChatResponse sourceId(String sourceId) {
    
    this.sourceId = sourceId;
    return this;
  }

  /**
   * Get sourceId
   * @return sourceId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSourceId() {
    return sourceId;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSourceId(String sourceId) {
    this.sourceId = sourceId;
  }

  public ChatResponse title(String title) {
    
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTitle(String title) {
    this.title = title;
  }

  public ChatResponse url(String url) {
    
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUrl(String url) {
    this.url = url;
  }

  public ChatResponse filename(String filename) {
    
    this.filename = filename;
    return this;
  }

  /**
   * Get filename
   * @return filename
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILENAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFilename() {
    return filename;
  }


  @JsonProperty(JSON_PROPERTY_FILENAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilename(String filename) {
    this.filename = filename;
  }

  public ChatResponse mediaType(String mediaType) {
    
    this.mediaType = mediaType;
    return this;
  }

  /**
   * Get mediaType
   * @return mediaType
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MEDIA_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMediaType() {
    return mediaType;
  }


  @JsonProperty(JSON_PROPERTY_MEDIA_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMediaType(String mediaType) {
    this.mediaType = mediaType;
  }

  public ChatResponse data(Object data) {
    
    this.data = data;
    return this;
  }

  /**
   * Get data
   * @return data
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getData() {
    return data;
  }


  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setData(Object data) {
    this.data = data;
  }

  public ChatResponse _transient(Boolean _transient) {
    
    this._transient = _transient;
    return this;
  }

  /**
   * Get _transient
   * @return _transient
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSIENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTransient() {
    return _transient;
  }


  @JsonProperty(JSON_PROPERTY_TRANSIENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransient(Boolean _transient) {
    this._transient = _transient;
  }

  public ChatResponse messageId(String messageId) {
    
    this.messageId = messageId;
    return this;
  }

  /**
   * Get messageId
   * @return messageId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MESSAGE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMessageId() {
    return messageId;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessageId(String messageId) {
    this.messageId = messageId;
  }

  public ChatResponse messageMetadata(Object messageMetadata) {
    
    this.messageMetadata = messageMetadata;
    return this;
  }

  /**
   * Get messageMetadata
   * @return messageMetadata
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MESSAGE_METADATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getMessageMetadata() {
    return messageMetadata;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE_METADATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMessageMetadata(Object messageMetadata) {
    this.messageMetadata = messageMetadata;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChatResponse chatResponse = (ChatResponse) o;
    return Objects.equals(this.id, chatResponse.id) &&
        Objects.equals(this.providerMetadata, chatResponse.providerMetadata) &&
        Objects.equals(this.type, chatResponse.type) &&
        Objects.equals(this.delta, chatResponse.delta) &&
        Objects.equals(this.errorText, chatResponse.errorText) &&
        Objects.equals(this.dynamic, chatResponse.dynamic) &&
        Objects.equals(this.providerExecuted, chatResponse.providerExecuted) &&
        Objects.equals(this.toolCallId, chatResponse.toolCallId) &&
        Objects.equals(this.toolName, chatResponse.toolName) &&
        Objects.equals(this.inputTextDelta, chatResponse.inputTextDelta) &&
        Objects.equals(this.input, chatResponse.input) &&
        Objects.equals(this.output, chatResponse.output) &&
        Objects.equals(this.sourceId, chatResponse.sourceId) &&
        Objects.equals(this.title, chatResponse.title) &&
        Objects.equals(this.url, chatResponse.url) &&
        Objects.equals(this.filename, chatResponse.filename) &&
        Objects.equals(this.mediaType, chatResponse.mediaType) &&
        Objects.equals(this.data, chatResponse.data) &&
        Objects.equals(this._transient, chatResponse._transient) &&
        Objects.equals(this.messageId, chatResponse.messageId) &&
        Objects.equals(this.messageMetadata, chatResponse.messageMetadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, providerMetadata, type, delta, errorText, dynamic, providerExecuted, toolCallId, toolName, inputTextDelta, input, output, sourceId, title, url, filename, mediaType, data, _transient, messageId, messageMetadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChatResponse {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    providerMetadata: ").append(toIndentedString(providerMetadata)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    delta: ").append(toIndentedString(delta)).append("\n");
    sb.append("    errorText: ").append(toIndentedString(errorText)).append("\n");
    sb.append("    dynamic: ").append(toIndentedString(dynamic)).append("\n");
    sb.append("    providerExecuted: ").append(toIndentedString(providerExecuted)).append("\n");
    sb.append("    toolCallId: ").append(toIndentedString(toolCallId)).append("\n");
    sb.append("    toolName: ").append(toIndentedString(toolName)).append("\n");
    sb.append("    inputTextDelta: ").append(toIndentedString(inputTextDelta)).append("\n");
    sb.append("    input: ").append(toIndentedString(input)).append("\n");
    sb.append("    output: ").append(toIndentedString(output)).append("\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    filename: ").append(toIndentedString(filename)).append("\n");
    sb.append("    mediaType: ").append(toIndentedString(mediaType)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    _transient: ").append(toIndentedString(_transient)).append("\n");
    sb.append("    messageId: ").append(toIndentedString(messageId)).append("\n");
    sb.append("    messageMetadata: ").append(toIndentedString(messageMetadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

