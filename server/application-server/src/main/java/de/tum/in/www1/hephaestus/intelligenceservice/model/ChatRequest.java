/*
 * Hephaestus Intelligence Service API
 * API documentation for the Hephaestus Intelligence Service.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: felixtj.dietrich@tum.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.in.www1.hephaestus.intelligenceservice.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import org.hibernate.validator.constraints.*;

/**
 * ChatRequest
 */
@JsonPropertyOrder({
  ChatRequest.JSON_PROPERTY_CHAT_ID,
  ChatRequest.JSON_PROPERTY_MESSAGE_CONTENT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.7.0")
public class ChatRequest {
  public static final String JSON_PROPERTY_CHAT_ID = "chat_id";
  private String chatId;

  public static final String JSON_PROPERTY_MESSAGE_CONTENT = "message_content";
  private String messageContent;

  public ChatRequest() {
  }

  public ChatRequest chatId(String chatId) {
    
    this.chatId = chatId;
    return this;
  }

  /**
   * Get chatId
   * @return chatId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CHAT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getChatId() {
    return chatId;
  }


  @JsonProperty(JSON_PROPERTY_CHAT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setChatId(String chatId) {
    this.chatId = chatId;
  }

  public ChatRequest messageContent(String messageContent) {
    
    this.messageContent = messageContent;
    return this;
  }

  /**
   * Get messageContent
   * @return messageContent
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MESSAGE_CONTENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMessageContent() {
    return messageContent;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE_CONTENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMessageContent(String messageContent) {
    this.messageContent = messageContent;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChatRequest chatRequest = (ChatRequest) o;
    return Objects.equals(this.chatId, chatRequest.chatId) &&
        Objects.equals(this.messageContent, chatRequest.messageContent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(chatId, messageContent);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChatRequest {\n");
    sb.append("    chatId: ").append(toIndentedString(chatId)).append("\n");
    sb.append("    messageContent: ").append(toIndentedString(messageContent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

