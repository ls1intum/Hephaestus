/*
 * Hephaestus Intelligence Service API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0-rc.27
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.in.www1.hephaestus.intelligenceservice.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import org.hibernate.validator.constraints.*;

/**
 * MentorChatPost200ResponseAnyOf4
 */
@JsonPropertyOrder({
  MentorChatPost200ResponseAnyOf4.JSON_PROPERTY_TYPE,
  MentorChatPost200ResponseAnyOf4.JSON_PROPERTY_TOOL_CALL_ID,
  MentorChatPost200ResponseAnyOf4.JSON_PROPERTY_TOOL_NAME,
  MentorChatPost200ResponseAnyOf4.JSON_PROPERTY_PROVIDER_EXECUTED,
  MentorChatPost200ResponseAnyOf4.JSON_PROPERTY_DYNAMIC
})
@JsonTypeName("_mentor_chat_post_200_response_anyOf_4")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.7.0")
public class MentorChatPost200ResponseAnyOf4 {
  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    TOOL_INPUT_START("tool-input-start");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_TOOL_CALL_ID = "toolCallId";
  private String toolCallId;

  public static final String JSON_PROPERTY_TOOL_NAME = "toolName";
  private String toolName;

  public static final String JSON_PROPERTY_PROVIDER_EXECUTED = "providerExecuted";
  private Boolean providerExecuted;

  public static final String JSON_PROPERTY_DYNAMIC = "dynamic";
  private Boolean dynamic;

  public MentorChatPost200ResponseAnyOf4() {
  }

  public MentorChatPost200ResponseAnyOf4 type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(TypeEnum type) {
    this.type = type;
  }

  public MentorChatPost200ResponseAnyOf4 toolCallId(String toolCallId) {
    
    this.toolCallId = toolCallId;
    return this;
  }

  /**
   * Get toolCallId
   * @return toolCallId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOOL_CALL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getToolCallId() {
    return toolCallId;
  }


  @JsonProperty(JSON_PROPERTY_TOOL_CALL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setToolCallId(String toolCallId) {
    this.toolCallId = toolCallId;
  }

  public MentorChatPost200ResponseAnyOf4 toolName(String toolName) {
    
    this.toolName = toolName;
    return this;
  }

  /**
   * Get toolName
   * @return toolName
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOOL_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getToolName() {
    return toolName;
  }


  @JsonProperty(JSON_PROPERTY_TOOL_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setToolName(String toolName) {
    this.toolName = toolName;
  }

  public MentorChatPost200ResponseAnyOf4 providerExecuted(Boolean providerExecuted) {
    
    this.providerExecuted = providerExecuted;
    return this;
  }

  /**
   * Get providerExecuted
   * @return providerExecuted
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROVIDER_EXECUTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getProviderExecuted() {
    return providerExecuted;
  }


  @JsonProperty(JSON_PROPERTY_PROVIDER_EXECUTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProviderExecuted(Boolean providerExecuted) {
    this.providerExecuted = providerExecuted;
  }

  public MentorChatPost200ResponseAnyOf4 dynamic(Boolean dynamic) {
    
    this.dynamic = dynamic;
    return this;
  }

  /**
   * Get dynamic
   * @return dynamic
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DYNAMIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDynamic() {
    return dynamic;
  }


  @JsonProperty(JSON_PROPERTY_DYNAMIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDynamic(Boolean dynamic) {
    this.dynamic = dynamic;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MentorChatPost200ResponseAnyOf4 mentorChatPost200ResponseAnyOf4 = (MentorChatPost200ResponseAnyOf4) o;
    return Objects.equals(this.type, mentorChatPost200ResponseAnyOf4.type) &&
        Objects.equals(this.toolCallId, mentorChatPost200ResponseAnyOf4.toolCallId) &&
        Objects.equals(this.toolName, mentorChatPost200ResponseAnyOf4.toolName) &&
        Objects.equals(this.providerExecuted, mentorChatPost200ResponseAnyOf4.providerExecuted) &&
        Objects.equals(this.dynamic, mentorChatPost200ResponseAnyOf4.dynamic);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, toolCallId, toolName, providerExecuted, dynamic);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MentorChatPost200ResponseAnyOf4 {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    toolCallId: ").append(toIndentedString(toolCallId)).append("\n");
    sb.append("    toolName: ").append(toIndentedString(toolName)).append("\n");
    sb.append("    providerExecuted: ").append(toIndentedString(providerExecuted)).append("\n");
    sb.append("    dynamic: ").append(toIndentedString(dynamic)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

