/*
 * Hephaestus Intelligence Service API
 * API documentation for the Hephaestus Intelligence Service.
 *
 * The version of the OpenAPI document: 0.9.0-rc.10
 * Contact: felixtj.dietrich@tum.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.in.www1.hephaestus.intelligenceservice.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import org.hibernate.validator.constraints.*;

/**
 * WeatherDailyUnits
 */
@JsonPropertyOrder({
  WeatherDailyUnits.JSON_PROPERTY_SUNRISE,
  WeatherDailyUnits.JSON_PROPERTY_SUNSET,
  WeatherDailyUnits.JSON_PROPERTY_TIME
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.7.0")
public class WeatherDailyUnits {
  public static final String JSON_PROPERTY_SUNRISE = "sunrise";
  private JsonNullable<String> sunrise = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SUNSET = "sunset";
  private JsonNullable<String> sunset = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TIME = "time";
  private JsonNullable<String> time = JsonNullable.<String>undefined();

  public WeatherDailyUnits() {
  }

  public WeatherDailyUnits sunrise(String sunrise) {
    this.sunrise = JsonNullable.<String>of(sunrise);
    
    return this;
  }

  /**
   * Get sunrise
   * @return sunrise
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getSunrise() {
        return sunrise.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUNRISE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSunrise_JsonNullable() {
    return sunrise;
  }
  
  @JsonProperty(JSON_PROPERTY_SUNRISE)
  public void setSunrise_JsonNullable(JsonNullable<String> sunrise) {
    this.sunrise = sunrise;
  }

  public void setSunrise(String sunrise) {
    this.sunrise = JsonNullable.<String>of(sunrise);
  }

  public WeatherDailyUnits sunset(String sunset) {
    this.sunset = JsonNullable.<String>of(sunset);
    
    return this;
  }

  /**
   * Get sunset
   * @return sunset
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getSunset() {
        return sunset.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUNSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSunset_JsonNullable() {
    return sunset;
  }
  
  @JsonProperty(JSON_PROPERTY_SUNSET)
  public void setSunset_JsonNullable(JsonNullable<String> sunset) {
    this.sunset = sunset;
  }

  public void setSunset(String sunset) {
    this.sunset = JsonNullable.<String>of(sunset);
  }

  public WeatherDailyUnits time(String time) {
    this.time = JsonNullable.<String>of(time);
    
    return this;
  }

  /**
   * Get time
   * @return time
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getTime() {
        return time.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTime_JsonNullable() {
    return time;
  }
  
  @JsonProperty(JSON_PROPERTY_TIME)
  public void setTime_JsonNullable(JsonNullable<String> time) {
    this.time = time;
  }

  public void setTime(String time) {
    this.time = JsonNullable.<String>of(time);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WeatherDailyUnits weatherDailyUnits = (WeatherDailyUnits) o;
    return equalsNullable(this.sunrise, weatherDailyUnits.sunrise) &&
        equalsNullable(this.sunset, weatherDailyUnits.sunset) &&
        equalsNullable(this.time, weatherDailyUnits.time);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(sunrise), hashCodeNullable(sunset), hashCodeNullable(time));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WeatherDailyUnits {\n");
    sb.append("    sunrise: ").append(toIndentedString(sunrise)).append("\n");
    sb.append("    sunset: ").append(toIndentedString(sunset)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

