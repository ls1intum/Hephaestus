/*
 * Hephaestus Intelligence Service API
 * API documentation for the Hephaestus Intelligence Service.
 *
 * The version of the OpenAPI document: 0.9.1-rc.3
 * Contact: felixtj.dietrich@tum.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.in.www1.hephaestus.intelligenceservice.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import org.hibernate.validator.constraints.*;

/**
 * WeatherCurrent
 */
@JsonPropertyOrder({
  WeatherCurrent.JSON_PROPERTY_INTERVAL,
  WeatherCurrent.JSON_PROPERTY_TEMPERATURE2M,
  WeatherCurrent.JSON_PROPERTY_TIME
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.7.0")
public class WeatherCurrent {
  public static final String JSON_PROPERTY_INTERVAL = "interval";
  private JsonNullable<Integer> interval = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_TEMPERATURE2M = "temperature_2m";
  private JsonNullable<BigDecimal> temperature2m = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_TIME = "time";
  private JsonNullable<String> time = JsonNullable.<String>undefined();

  public WeatherCurrent() {
  }

  public WeatherCurrent interval(Integer interval) {
    this.interval = JsonNullable.<Integer>of(interval);
    
    return this;
  }

  /**
   * Get interval
   * @return interval
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Integer getInterval() {
        return interval.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getInterval_JsonNullable() {
    return interval;
  }
  
  @JsonProperty(JSON_PROPERTY_INTERVAL)
  public void setInterval_JsonNullable(JsonNullable<Integer> interval) {
    this.interval = interval;
  }

  public void setInterval(Integer interval) {
    this.interval = JsonNullable.<Integer>of(interval);
  }

  public WeatherCurrent temperature2m(BigDecimal temperature2m) {
    this.temperature2m = JsonNullable.<BigDecimal>of(temperature2m);
    
    return this;
  }

  /**
   * Get temperature2m
   * @return temperature2m
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public BigDecimal getTemperature2m() {
        return temperature2m.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEMPERATURE2M)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getTemperature2m_JsonNullable() {
    return temperature2m;
  }
  
  @JsonProperty(JSON_PROPERTY_TEMPERATURE2M)
  public void setTemperature2m_JsonNullable(JsonNullable<BigDecimal> temperature2m) {
    this.temperature2m = temperature2m;
  }

  public void setTemperature2m(BigDecimal temperature2m) {
    this.temperature2m = JsonNullable.<BigDecimal>of(temperature2m);
  }

  public WeatherCurrent time(String time) {
    this.time = JsonNullable.<String>of(time);
    
    return this;
  }

  /**
   * Get time
   * @return time
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getTime() {
        return time.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTime_JsonNullable() {
    return time;
  }
  
  @JsonProperty(JSON_PROPERTY_TIME)
  public void setTime_JsonNullable(JsonNullable<String> time) {
    this.time = time;
  }

  public void setTime(String time) {
    this.time = JsonNullable.<String>of(time);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WeatherCurrent weatherCurrent = (WeatherCurrent) o;
    return equalsNullable(this.interval, weatherCurrent.interval) &&
        equalsNullable(this.temperature2m, weatherCurrent.temperature2m) &&
        equalsNullable(this.time, weatherCurrent.time);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(interval), hashCodeNullable(temperature2m), hashCodeNullable(time));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WeatherCurrent {\n");
    sb.append("    interval: ").append(toIndentedString(interval)).append("\n");
    sb.append("    temperature2m: ").append(toIndentedString(temperature2m)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

