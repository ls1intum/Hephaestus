/*
 * Hephaestus Intelligence Service API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0-rc.27
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.in.www1.hephaestus.intelligenceservice.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import org.hibernate.validator.constraints.*;

/**
 * ChatMessageVote
 */
@JsonPropertyOrder({
  ChatMessageVote.JSON_PROPERTY_MESSAGE_ID,
  ChatMessageVote.JSON_PROPERTY_IS_UPVOTED,
  ChatMessageVote.JSON_PROPERTY_CREATED_AT,
  ChatMessageVote.JSON_PROPERTY_UPDATED_AT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.7.0")
public class ChatMessageVote {
  public static final String JSON_PROPERTY_MESSAGE_ID = "messageId";
  private UUID messageId;

  public static final String JSON_PROPERTY_IS_UPVOTED = "isUpvoted";
  private Boolean isUpvoted;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
  private OffsetDateTime updatedAt;

  public ChatMessageVote() {
  }

  public ChatMessageVote messageId(UUID messageId) {
    
    this.messageId = messageId;
    return this;
  }

  /**
   * Get messageId
   * @return messageId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MESSAGE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getMessageId() {
    return messageId;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMessageId(UUID messageId) {
    this.messageId = messageId;
  }

  public ChatMessageVote isUpvoted(Boolean isUpvoted) {
    
    this.isUpvoted = isUpvoted;
    return this;
  }

  /**
   * Get isUpvoted
   * @return isUpvoted
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_UPVOTED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsUpvoted() {
    return isUpvoted;
  }


  @JsonProperty(JSON_PROPERTY_IS_UPVOTED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsUpvoted(Boolean isUpvoted) {
    this.isUpvoted = isUpvoted;
  }

  public ChatMessageVote createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public ChatMessageVote updatedAt(OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChatMessageVote chatMessageVote = (ChatMessageVote) o;
    return Objects.equals(this.messageId, chatMessageVote.messageId) &&
        Objects.equals(this.isUpvoted, chatMessageVote.isUpvoted) &&
        Objects.equals(this.createdAt, chatMessageVote.createdAt) &&
        Objects.equals(this.updatedAt, chatMessageVote.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(messageId, isUpvoted, createdAt, updatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChatMessageVote {\n");
    sb.append("    messageId: ").append(toIndentedString(messageId)).append("\n");
    sb.append("    isUpvoted: ").append(toIndentedString(isUpvoted)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

