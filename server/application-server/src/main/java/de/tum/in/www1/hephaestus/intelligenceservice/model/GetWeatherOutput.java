/*
 * Hephaestus Intelligence Service API
 * API documentation for the Hephaestus Intelligence Service.
 *
 * The version of the OpenAPI document: 0.9.0-rc.5
 * Contact: felixtj.dietrich@tum.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.in.www1.hephaestus.intelligenceservice.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.tum.in.www1.hephaestus.intelligenceservice.model.WeatherCurrent;
import de.tum.in.www1.hephaestus.intelligenceservice.model.WeatherCurrentUnits;
import de.tum.in.www1.hephaestus.intelligenceservice.model.WeatherDaily;
import de.tum.in.www1.hephaestus.intelligenceservice.model.WeatherDailyUnits;
import de.tum.in.www1.hephaestus.intelligenceservice.model.WeatherHourly;
import de.tum.in.www1.hephaestus.intelligenceservice.model.WeatherHourlyUnits;
import java.math.BigDecimal;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import org.hibernate.validator.constraints.*;

/**
 * Output for getWeather tool, aligned with WeatherTool.tsx expectations.
 */
@JsonPropertyOrder({
  GetWeatherOutput.JSON_PROPERTY_CURRENT,
  GetWeatherOutput.JSON_PROPERTY_CURRENT_UNITS,
  GetWeatherOutput.JSON_PROPERTY_DAILY,
  GetWeatherOutput.JSON_PROPERTY_DAILY_UNITS,
  GetWeatherOutput.JSON_PROPERTY_ELEVATION,
  GetWeatherOutput.JSON_PROPERTY_GENERATIONTIME_MS,
  GetWeatherOutput.JSON_PROPERTY_HOURLY,
  GetWeatherOutput.JSON_PROPERTY_HOURLY_UNITS,
  GetWeatherOutput.JSON_PROPERTY_LATITUDE,
  GetWeatherOutput.JSON_PROPERTY_LONGITUDE,
  GetWeatherOutput.JSON_PROPERTY_TIMEZONE,
  GetWeatherOutput.JSON_PROPERTY_TIMEZONE_ABBREVIATION,
  GetWeatherOutput.JSON_PROPERTY_UTC_OFFSET_SECONDS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.7.0")
public class GetWeatherOutput {
  public static final String JSON_PROPERTY_CURRENT = "current";
  private JsonNullable<WeatherCurrent> current = JsonNullable.<WeatherCurrent>undefined();

  public static final String JSON_PROPERTY_CURRENT_UNITS = "current_units";
  private JsonNullable<WeatherCurrentUnits> currentUnits = JsonNullable.<WeatherCurrentUnits>undefined();

  public static final String JSON_PROPERTY_DAILY = "daily";
  private JsonNullable<WeatherDaily> daily = JsonNullable.<WeatherDaily>undefined();

  public static final String JSON_PROPERTY_DAILY_UNITS = "daily_units";
  private JsonNullable<WeatherDailyUnits> dailyUnits = JsonNullable.<WeatherDailyUnits>undefined();

  public static final String JSON_PROPERTY_ELEVATION = "elevation";
  private JsonNullable<BigDecimal> elevation = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_GENERATIONTIME_MS = "generationtime_ms";
  private JsonNullable<BigDecimal> generationtimeMs = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_HOURLY = "hourly";
  private JsonNullable<WeatherHourly> hourly = JsonNullable.<WeatherHourly>undefined();

  public static final String JSON_PROPERTY_HOURLY_UNITS = "hourly_units";
  private JsonNullable<WeatherHourlyUnits> hourlyUnits = JsonNullable.<WeatherHourlyUnits>undefined();

  public static final String JSON_PROPERTY_LATITUDE = "latitude";
  private JsonNullable<BigDecimal> latitude = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_LONGITUDE = "longitude";
  private JsonNullable<BigDecimal> longitude = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_TIMEZONE = "timezone";
  private JsonNullable<String> timezone = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TIMEZONE_ABBREVIATION = "timezone_abbreviation";
  private JsonNullable<String> timezoneAbbreviation = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_UTC_OFFSET_SECONDS = "utc_offset_seconds";
  private JsonNullable<Integer> utcOffsetSeconds = JsonNullable.<Integer>undefined();

  public GetWeatherOutput() {
  }

  public GetWeatherOutput current(WeatherCurrent current) {
    this.current = JsonNullable.<WeatherCurrent>of(current);
    
    return this;
  }

  /**
   * Get current
   * @return current
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public WeatherCurrent getCurrent() {
        return current.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<WeatherCurrent> getCurrent_JsonNullable() {
    return current;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENT)
  public void setCurrent_JsonNullable(JsonNullable<WeatherCurrent> current) {
    this.current = current;
  }

  public void setCurrent(WeatherCurrent current) {
    this.current = JsonNullable.<WeatherCurrent>of(current);
  }

  public GetWeatherOutput currentUnits(WeatherCurrentUnits currentUnits) {
    this.currentUnits = JsonNullable.<WeatherCurrentUnits>of(currentUnits);
    
    return this;
  }

  /**
   * Get currentUnits
   * @return currentUnits
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public WeatherCurrentUnits getCurrentUnits() {
        return currentUnits.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENT_UNITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<WeatherCurrentUnits> getCurrentUnits_JsonNullable() {
    return currentUnits;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENT_UNITS)
  public void setCurrentUnits_JsonNullable(JsonNullable<WeatherCurrentUnits> currentUnits) {
    this.currentUnits = currentUnits;
  }

  public void setCurrentUnits(WeatherCurrentUnits currentUnits) {
    this.currentUnits = JsonNullable.<WeatherCurrentUnits>of(currentUnits);
  }

  public GetWeatherOutput daily(WeatherDaily daily) {
    this.daily = JsonNullable.<WeatherDaily>of(daily);
    
    return this;
  }

  /**
   * Get daily
   * @return daily
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public WeatherDaily getDaily() {
        return daily.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DAILY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<WeatherDaily> getDaily_JsonNullable() {
    return daily;
  }
  
  @JsonProperty(JSON_PROPERTY_DAILY)
  public void setDaily_JsonNullable(JsonNullable<WeatherDaily> daily) {
    this.daily = daily;
  }

  public void setDaily(WeatherDaily daily) {
    this.daily = JsonNullable.<WeatherDaily>of(daily);
  }

  public GetWeatherOutput dailyUnits(WeatherDailyUnits dailyUnits) {
    this.dailyUnits = JsonNullable.<WeatherDailyUnits>of(dailyUnits);
    
    return this;
  }

  /**
   * Get dailyUnits
   * @return dailyUnits
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public WeatherDailyUnits getDailyUnits() {
        return dailyUnits.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DAILY_UNITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<WeatherDailyUnits> getDailyUnits_JsonNullable() {
    return dailyUnits;
  }
  
  @JsonProperty(JSON_PROPERTY_DAILY_UNITS)
  public void setDailyUnits_JsonNullable(JsonNullable<WeatherDailyUnits> dailyUnits) {
    this.dailyUnits = dailyUnits;
  }

  public void setDailyUnits(WeatherDailyUnits dailyUnits) {
    this.dailyUnits = JsonNullable.<WeatherDailyUnits>of(dailyUnits);
  }

  public GetWeatherOutput elevation(BigDecimal elevation) {
    this.elevation = JsonNullable.<BigDecimal>of(elevation);
    
    return this;
  }

  /**
   * Get elevation
   * @return elevation
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public BigDecimal getElevation() {
        return elevation.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ELEVATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getElevation_JsonNullable() {
    return elevation;
  }
  
  @JsonProperty(JSON_PROPERTY_ELEVATION)
  public void setElevation_JsonNullable(JsonNullable<BigDecimal> elevation) {
    this.elevation = elevation;
  }

  public void setElevation(BigDecimal elevation) {
    this.elevation = JsonNullable.<BigDecimal>of(elevation);
  }

  public GetWeatherOutput generationtimeMs(BigDecimal generationtimeMs) {
    this.generationtimeMs = JsonNullable.<BigDecimal>of(generationtimeMs);
    
    return this;
  }

  /**
   * Get generationtimeMs
   * @return generationtimeMs
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public BigDecimal getGenerationtimeMs() {
        return generationtimeMs.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GENERATIONTIME_MS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getGenerationtimeMs_JsonNullable() {
    return generationtimeMs;
  }
  
  @JsonProperty(JSON_PROPERTY_GENERATIONTIME_MS)
  public void setGenerationtimeMs_JsonNullable(JsonNullable<BigDecimal> generationtimeMs) {
    this.generationtimeMs = generationtimeMs;
  }

  public void setGenerationtimeMs(BigDecimal generationtimeMs) {
    this.generationtimeMs = JsonNullable.<BigDecimal>of(generationtimeMs);
  }

  public GetWeatherOutput hourly(WeatherHourly hourly) {
    this.hourly = JsonNullable.<WeatherHourly>of(hourly);
    
    return this;
  }

  /**
   * Get hourly
   * @return hourly
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public WeatherHourly getHourly() {
        return hourly.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOURLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<WeatherHourly> getHourly_JsonNullable() {
    return hourly;
  }
  
  @JsonProperty(JSON_PROPERTY_HOURLY)
  public void setHourly_JsonNullable(JsonNullable<WeatherHourly> hourly) {
    this.hourly = hourly;
  }

  public void setHourly(WeatherHourly hourly) {
    this.hourly = JsonNullable.<WeatherHourly>of(hourly);
  }

  public GetWeatherOutput hourlyUnits(WeatherHourlyUnits hourlyUnits) {
    this.hourlyUnits = JsonNullable.<WeatherHourlyUnits>of(hourlyUnits);
    
    return this;
  }

  /**
   * Get hourlyUnits
   * @return hourlyUnits
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public WeatherHourlyUnits getHourlyUnits() {
        return hourlyUnits.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOURLY_UNITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<WeatherHourlyUnits> getHourlyUnits_JsonNullable() {
    return hourlyUnits;
  }
  
  @JsonProperty(JSON_PROPERTY_HOURLY_UNITS)
  public void setHourlyUnits_JsonNullable(JsonNullable<WeatherHourlyUnits> hourlyUnits) {
    this.hourlyUnits = hourlyUnits;
  }

  public void setHourlyUnits(WeatherHourlyUnits hourlyUnits) {
    this.hourlyUnits = JsonNullable.<WeatherHourlyUnits>of(hourlyUnits);
  }

  public GetWeatherOutput latitude(BigDecimal latitude) {
    this.latitude = JsonNullable.<BigDecimal>of(latitude);
    
    return this;
  }

  /**
   * Get latitude
   * @return latitude
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public BigDecimal getLatitude() {
        return latitude.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LATITUDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getLatitude_JsonNullable() {
    return latitude;
  }
  
  @JsonProperty(JSON_PROPERTY_LATITUDE)
  public void setLatitude_JsonNullable(JsonNullable<BigDecimal> latitude) {
    this.latitude = latitude;
  }

  public void setLatitude(BigDecimal latitude) {
    this.latitude = JsonNullable.<BigDecimal>of(latitude);
  }

  public GetWeatherOutput longitude(BigDecimal longitude) {
    this.longitude = JsonNullable.<BigDecimal>of(longitude);
    
    return this;
  }

  /**
   * Get longitude
   * @return longitude
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public BigDecimal getLongitude() {
        return longitude.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LONGITUDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getLongitude_JsonNullable() {
    return longitude;
  }
  
  @JsonProperty(JSON_PROPERTY_LONGITUDE)
  public void setLongitude_JsonNullable(JsonNullable<BigDecimal> longitude) {
    this.longitude = longitude;
  }

  public void setLongitude(BigDecimal longitude) {
    this.longitude = JsonNullable.<BigDecimal>of(longitude);
  }

  public GetWeatherOutput timezone(String timezone) {
    this.timezone = JsonNullable.<String>of(timezone);
    
    return this;
  }

  /**
   * Get timezone
   * @return timezone
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getTimezone() {
        return timezone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TIMEZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTimezone_JsonNullable() {
    return timezone;
  }
  
  @JsonProperty(JSON_PROPERTY_TIMEZONE)
  public void setTimezone_JsonNullable(JsonNullable<String> timezone) {
    this.timezone = timezone;
  }

  public void setTimezone(String timezone) {
    this.timezone = JsonNullable.<String>of(timezone);
  }

  public GetWeatherOutput timezoneAbbreviation(String timezoneAbbreviation) {
    this.timezoneAbbreviation = JsonNullable.<String>of(timezoneAbbreviation);
    
    return this;
  }

  /**
   * Get timezoneAbbreviation
   * @return timezoneAbbreviation
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getTimezoneAbbreviation() {
        return timezoneAbbreviation.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TIMEZONE_ABBREVIATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTimezoneAbbreviation_JsonNullable() {
    return timezoneAbbreviation;
  }
  
  @JsonProperty(JSON_PROPERTY_TIMEZONE_ABBREVIATION)
  public void setTimezoneAbbreviation_JsonNullable(JsonNullable<String> timezoneAbbreviation) {
    this.timezoneAbbreviation = timezoneAbbreviation;
  }

  public void setTimezoneAbbreviation(String timezoneAbbreviation) {
    this.timezoneAbbreviation = JsonNullable.<String>of(timezoneAbbreviation);
  }

  public GetWeatherOutput utcOffsetSeconds(Integer utcOffsetSeconds) {
    this.utcOffsetSeconds = JsonNullable.<Integer>of(utcOffsetSeconds);
    
    return this;
  }

  /**
   * Get utcOffsetSeconds
   * @return utcOffsetSeconds
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Integer getUtcOffsetSeconds() {
        return utcOffsetSeconds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UTC_OFFSET_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getUtcOffsetSeconds_JsonNullable() {
    return utcOffsetSeconds;
  }
  
  @JsonProperty(JSON_PROPERTY_UTC_OFFSET_SECONDS)
  public void setUtcOffsetSeconds_JsonNullable(JsonNullable<Integer> utcOffsetSeconds) {
    this.utcOffsetSeconds = utcOffsetSeconds;
  }

  public void setUtcOffsetSeconds(Integer utcOffsetSeconds) {
    this.utcOffsetSeconds = JsonNullable.<Integer>of(utcOffsetSeconds);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetWeatherOutput getWeatherOutput = (GetWeatherOutput) o;
    return equalsNullable(this.current, getWeatherOutput.current) &&
        equalsNullable(this.currentUnits, getWeatherOutput.currentUnits) &&
        equalsNullable(this.daily, getWeatherOutput.daily) &&
        equalsNullable(this.dailyUnits, getWeatherOutput.dailyUnits) &&
        equalsNullable(this.elevation, getWeatherOutput.elevation) &&
        equalsNullable(this.generationtimeMs, getWeatherOutput.generationtimeMs) &&
        equalsNullable(this.hourly, getWeatherOutput.hourly) &&
        equalsNullable(this.hourlyUnits, getWeatherOutput.hourlyUnits) &&
        equalsNullable(this.latitude, getWeatherOutput.latitude) &&
        equalsNullable(this.longitude, getWeatherOutput.longitude) &&
        equalsNullable(this.timezone, getWeatherOutput.timezone) &&
        equalsNullable(this.timezoneAbbreviation, getWeatherOutput.timezoneAbbreviation) &&
        equalsNullable(this.utcOffsetSeconds, getWeatherOutput.utcOffsetSeconds);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(current), hashCodeNullable(currentUnits), hashCodeNullable(daily), hashCodeNullable(dailyUnits), hashCodeNullable(elevation), hashCodeNullable(generationtimeMs), hashCodeNullable(hourly), hashCodeNullable(hourlyUnits), hashCodeNullable(latitude), hashCodeNullable(longitude), hashCodeNullable(timezone), hashCodeNullable(timezoneAbbreviation), hashCodeNullable(utcOffsetSeconds));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetWeatherOutput {\n");
    sb.append("    current: ").append(toIndentedString(current)).append("\n");
    sb.append("    currentUnits: ").append(toIndentedString(currentUnits)).append("\n");
    sb.append("    daily: ").append(toIndentedString(daily)).append("\n");
    sb.append("    dailyUnits: ").append(toIndentedString(dailyUnits)).append("\n");
    sb.append("    elevation: ").append(toIndentedString(elevation)).append("\n");
    sb.append("    generationtimeMs: ").append(toIndentedString(generationtimeMs)).append("\n");
    sb.append("    hourly: ").append(toIndentedString(hourly)).append("\n");
    sb.append("    hourlyUnits: ").append(toIndentedString(hourlyUnits)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    timezoneAbbreviation: ").append(toIndentedString(timezoneAbbreviation)).append("\n");
    sb.append("    utcOffsetSeconds: ").append(toIndentedString(utcOffsetSeconds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

