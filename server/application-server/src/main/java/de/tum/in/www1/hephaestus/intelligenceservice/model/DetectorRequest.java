/*
 * Hephaestus Intelligence Service API
 * API documentation for the Hephaestus Intelligence Service.
 *
 * The version of the OpenAPI document: 0.3.2
 * Contact: felixtj.dietrich@tum.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.in.www1.hephaestus.intelligenceservice.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.tum.in.www1.hephaestus.intelligenceservice.model.BadPractice;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import org.hibernate.validator.constraints.*;

/**
 * DetectorRequest
 */
@JsonPropertyOrder({
  DetectorRequest.JSON_PROPERTY_BAD_PRACTICE_SUMMARY,
  DetectorRequest.JSON_PROPERTY_BAD_PRACTICES,
  DetectorRequest.JSON_PROPERTY_DESCRIPTION,
  DetectorRequest.JSON_PROPERTY_LIFECYCLE_STATE,
  DetectorRequest.JSON_PROPERTY_TITLE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.7.0")
public class DetectorRequest {
  public static final String JSON_PROPERTY_BAD_PRACTICE_SUMMARY = "bad_practice_summary";
  private String badPracticeSummary;

  public static final String JSON_PROPERTY_BAD_PRACTICES = "bad_practices";
  private List<BadPractice> badPractices = new ArrayList<>();

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_LIFECYCLE_STATE = "lifecycle_state";
  private String lifecycleState;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public DetectorRequest() {
  }

  public DetectorRequest badPracticeSummary(String badPracticeSummary) {
    
    this.badPracticeSummary = badPracticeSummary;
    return this;
  }

  /**
   * Get badPracticeSummary
   * @return badPracticeSummary
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BAD_PRACTICE_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBadPracticeSummary() {
    return badPracticeSummary;
  }


  @JsonProperty(JSON_PROPERTY_BAD_PRACTICE_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBadPracticeSummary(String badPracticeSummary) {
    this.badPracticeSummary = badPracticeSummary;
  }

  public DetectorRequest badPractices(List<BadPractice> badPractices) {
    
    this.badPractices = badPractices;
    return this;
  }

  public DetectorRequest addBadPracticesItem(BadPractice badPracticesItem) {
    if (this.badPractices == null) {
      this.badPractices = new ArrayList<>();
    }
    this.badPractices.add(badPracticesItem);
    return this;
  }

  /**
   * Get badPractices
   * @return badPractices
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BAD_PRACTICES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<BadPractice> getBadPractices() {
    return badPractices;
  }


  @JsonProperty(JSON_PROPERTY_BAD_PRACTICES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBadPractices(List<BadPractice> badPractices) {
    this.badPractices = badPractices;
  }

  public DetectorRequest description(String description) {
    
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }

  public DetectorRequest lifecycleState(String lifecycleState) {
    
    this.lifecycleState = lifecycleState;
    return this;
  }

  /**
   * Get lifecycleState
   * @return lifecycleState
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LIFECYCLE_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLifecycleState() {
    return lifecycleState;
  }


  @JsonProperty(JSON_PROPERTY_LIFECYCLE_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLifecycleState(String lifecycleState) {
    this.lifecycleState = lifecycleState;
  }

  public DetectorRequest title(String title) {
    
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTitle(String title) {
    this.title = title;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DetectorRequest detectorRequest = (DetectorRequest) o;
    return Objects.equals(this.badPracticeSummary, detectorRequest.badPracticeSummary) &&
        Objects.equals(this.badPractices, detectorRequest.badPractices) &&
        Objects.equals(this.description, detectorRequest.description) &&
        Objects.equals(this.lifecycleState, detectorRequest.lifecycleState) &&
        Objects.equals(this.title, detectorRequest.title);
  }

  @Override
  public int hashCode() {
    return Objects.hash(badPracticeSummary, badPractices, description, lifecycleState, title);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DetectorRequest {\n");
    sb.append("    badPracticeSummary: ").append(toIndentedString(badPracticeSummary)).append("\n");
    sb.append("    badPractices: ").append(toIndentedString(badPractices)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    lifecycleState: ").append(toIndentedString(lifecycleState)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

