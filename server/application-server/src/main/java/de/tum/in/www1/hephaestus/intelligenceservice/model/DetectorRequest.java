/*
 * Hephaestus Intelligence Service API
 * API documentation for the Hephaestus Intelligence Service.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: felixtj.dietrich@tum.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.in.www1.hephaestus.intelligenceservice.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.tum.in.www1.hephaestus.intelligenceservice.model.PullRequest;
import de.tum.in.www1.hephaestus.intelligenceservice.model.Rule;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import org.hibernate.validator.constraints.*;

/**
 * DetectorRequest
 */
@JsonPropertyOrder({
  DetectorRequest.JSON_PROPERTY_PULL_REQUESTS,
  DetectorRequest.JSON_PROPERTY_RULES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.7.0")
public class DetectorRequest {
  public static final String JSON_PROPERTY_PULL_REQUESTS = "pull_requests";
  private List<PullRequest> pullRequests = new ArrayList<>();

  public static final String JSON_PROPERTY_RULES = "rules";
  private List<Rule> rules = new ArrayList<>();

  public DetectorRequest() {
  }

  public DetectorRequest pullRequests(List<PullRequest> pullRequests) {
    
    this.pullRequests = pullRequests;
    return this;
  }

  public DetectorRequest addPullRequestsItem(PullRequest pullRequestsItem) {
    if (this.pullRequests == null) {
      this.pullRequests = new ArrayList<>();
    }
    this.pullRequests.add(pullRequestsItem);
    return this;
  }

  /**
   * Get pullRequests
   * @return pullRequests
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PULL_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<PullRequest> getPullRequests() {
    return pullRequests;
  }


  @JsonProperty(JSON_PROPERTY_PULL_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPullRequests(List<PullRequest> pullRequests) {
    this.pullRequests = pullRequests;
  }

  public DetectorRequest rules(List<Rule> rules) {
    
    this.rules = rules;
    return this;
  }

  public DetectorRequest addRulesItem(Rule rulesItem) {
    if (this.rules == null) {
      this.rules = new ArrayList<>();
    }
    this.rules.add(rulesItem);
    return this;
  }

  /**
   * Get rules
   * @return rules
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RULES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Rule> getRules() {
    return rules;
  }


  @JsonProperty(JSON_PROPERTY_RULES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRules(List<Rule> rules) {
    this.rules = rules;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DetectorRequest detectorRequest = (DetectorRequest) o;
    return Objects.equals(this.pullRequests, detectorRequest.pullRequests) &&
        Objects.equals(this.rules, detectorRequest.rules);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pullRequests, rules);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DetectorRequest {\n");
    sb.append("    pullRequests: ").append(toIndentedString(pullRequests)).append("\n");
    sb.append("    rules: ").append(toIndentedString(rules)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

